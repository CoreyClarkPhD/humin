{"version":3,"sources":["./src/app/rete-modules/shared/rate-component/rate-component.component.ts","./src/app/rete-modules/shared/rate-component/rate.component.html","./src/app/rete-modules/shared/custom-output.ts","./src/app/rete-modules/services/node.service.ts","./src/app/output/graph-view/graph-view.component.ts","./src/app/output/graph-view/graph-view.component.html","./src/app/rete-modules/custom-rete.module.ts","./src/app/rete-modules/nodes/controls/resource-control/resource-control.ts","./src/app/rete-modules/nodes/controls/resource-control/resource-control.html","./src/environments/environment.ts","./src/app/rete-modules/nodes/resource-node.component.ts","./src/app/rete-modules/services/fake-item.service.ts","./src/app/rete-modules/nodes/crafter-node.component.ts","./src/app/output/output-item/output-item.component.ts","./src/app/output/output-item/output-item.component.html","./src/app/rete-modules/shared/item-image-component/item-image.component.ts","./src/app/rete-modules/shared/item-image-component/item-image.component.html","./src/app/output/services/output-manager.service.ts","./src/app/rete-modules/grid/grid.component.ts","./src/app/rete-modules/grid/grid.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/rete-modules/nodes/custom-node.component.ts","./src/app/rete-modules/shared/highlight-text.pipe.ts","./src/app/app.module.ts","./src/app/output/output.module.ts","./src/app/rete-modules/nodes/output-node.component.ts","./src/app/rete-modules/shared/item.model.ts","./src/app/rete-modules/shared/connection.model.ts","./src/app/rete-modules/shared/node-tree.ts","./src/app/rete-modules/nodes/base-node/base-node.component.ts","./src/app/rete-modules/nodes/base-node/base-node.component.html","./src/app/output/output-container/output-container.component.ts","./src/app/output/output-container/output-container.component.html","./src/app/rete-modules/nodes/sockets.ts","./src/app/rete-modules/node-browser/node-browser.component.ts","./src/app/rete-modules/node-browser/node-browser.component.html","./src/app/rete-modules/services/fake-node.service.ts","./src/app/rete-modules/services/item.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, Output, OnInit, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'rate-component',\n  templateUrl: './rate.component.html',\n  styleUrls: ['./rate.component.sass']\n})\nexport class RateComponent implements OnInit {\n  @Input() readonly: boolean;\n  @Input() placeholder: string | number;\n  @Input() text: string;\n  @Output() onChange: EventEmitter<number> = new EventEmitter();\n\n  public perHourString: string;\n  public perHour: number;\n\n  constructor() {\n  }\n  \n  ngOnInit(): void {\n  }\n\n  onInputChange() {\n    this.perHour = parseFloat(this.perHourString);\n\n    this.onChange.emit(this.perHour);\n  }\n\n  setRate(rate: number) {\n    this.perHour = rate;\n\n    let str = this.perHour == Infinity ? \"-\" : this.perHour.toString();\n    if (str.indexOf('.') !== -1) {\n      str = str.slice(0, str.indexOf('.') + 3);\n    }\n\n    this.perHourString = str;\n  }\n}\n","<div class=\"rate-container\">\n    <input type=\"text\" oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\n    [(ngModel)]=\"perHourString\"\n    [readonly]=\"readonly\"\n    [placeholder]=\"placeholder\"\n    (change)=\"onInputChange()\">\n    <p>\n        {{this.text}}\n    </p>\n</div>","import { Output, Socket } from \"rete\"\n\nexport class CustomOutput extends Output {\n  public data: {\n    [key: string]: unknown;\n  };\n\n  constructor(key: string, title: string, socket: Socket, multiConns?: boolean) {\n    super(key, title, socket, multiConns);\n\n    this.data = {};\n  }\n}","import { CustomNodeData } from './../shared/custom.model';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class NodeService {\n  constructor() {\n  }\n\n  public abstract GetAllCustomNodes(): CustomNodeData[];\n  public abstract GetCustomNode(id: number): CustomNodeData;\n\n  public abstract SaveCustomNode(classroom: number, group: number, node: CustomNodeData): number;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-graph-view',\n  templateUrl: './graph-view.component.html',\n  styleUrls: ['./graph-view.component.sass']\n})\nexport class GraphViewComponent implements OnInit {\n\n  // TEMP TO SHOW THE GRAPH\n  public showGraph: boolean = true;\n  multi: any[];\n  view: number[] = [300, 200]\n  legend: boolean = true;\n  legendPosition: string = \"below\"\n  showLabels: boolean = true;\n  animations: boolean = true;\n  xAxis: boolean = true;\n  yAxis: boolean = true;\n  showXAxis: boolean = true;\n  showYAxis: boolean = true;\n  showYAxisLabel: boolean = true;\n  showXAxisLabel: boolean = true;\n  xAxisLabel: string = 'Time (h)';\n  yAxisLabel: string = 'Generated Resources';\n  timeline: boolean = true;\n  colorScheme = {\n    domain: ['#5AA454', '#E44D25', '#CFC0BB', '#7aa3e5', '#a8385d', '#aae3f5']\n  };\n\n  constructor() { \n    Object.assign(this, { multi });\n    Object.assign(this, { single });\n  }\n\n  \n  ngOnInit(): void {\n  }\n\n  single: any[];\n\n  // options\n  gradient: boolean = true;\n  showLegend: boolean = true;\n  pieShowLabels: boolean = true;\n  isDoughnut: boolean = false;\n  pieLegendPosition: string = 'below';\n\n  pieColorScheme = {\n    domain: ['#5AA454', '#A10A28', '#C7B42C', '#AAAAAA']\n  };\n\n}\n\nexport var multi = [\n  {\n    \"name\": \"Stone\",\n    \"series\": [\n      {\n        \"name\": \"0\",\n        \"value\": 0\n      },\n      {\n        \"name\": \"12\",\n        \"value\": 10\n      },\n      {\n        \"name\": \"24\",\n        \"value\": 20\n      },\n      {\n        \"name\": \"36\",\n        \"value\": 30\n      },\n      {\n        \"name\": \"48\",\n        \"value\": 40\n      }\n    ]\n  },\n\n  {\n    \"name\": \"Cobblestone\",\n    \"series\": [\n      {\n        \"name\": \"0\",\n        \"value\": 0\n      },\n      {\n        \"name\": \"12\",\n        \"value\": 5\n      },\n      {\n        \"name\": \"24\",\n        \"value\": 10\n      },\n      {\n        \"name\": \"36\",\n        \"value\": 15\n      },\n      {\n        \"name\": \"48\",\n        \"value\": 20\n      }\n    ]\n  },\n\n  {\n    \"name\": \"Planks\",\n    \"series\": [\n      {\n        \"name\": \"0\",\n        \"value\": 10\n      },\n      {\n        \"name\": \"12\",\n        \"value\": 12\n      },\n      {\n        \"name\": \"24\",\n        \"value\": 14\n      },\n      {\n        \"name\": \"36\",\n        \"value\": 16\n      },\n      {\n        \"name\": \"48\",\n        \"value\": 18\n      }\n    ]\n  },\n];\n\nexport var single = [\n  {\n    \"name\": \"Stone\",\n    \"value\": 40\n  },\n  {\n    \"name\": \"Cobblestone\",\n    \"value\": 20\n  },\n  {\n    \"name\": \"Planks\",\n    \"value\": 18\n  },\n];\n","<div class=\"graph-container\">\n    <ngx-charts-line-chart\n        [scheme]=\"colorScheme\"\n        [view]=\"view\"\n        [legend]=\"legend\"\n        [legendPosition]=\"legendPosition\"\n        [showXAxisLabel]=\"showXAxisLabel\"\n        [showYAxisLabel]=\"showYAxisLabel\"\n        [xAxis]=\"xAxis\"\n        [yAxis]=\"yAxis\"\n        [xAxisLabel]=\"xAxisLabel\"\n        [yAxisLabel]=\"yAxisLabel\"\n        [timeline]=\"timeline\"\n        [results]=\"multi\"\n        >\n    </ngx-charts-line-chart> \n\n    <ngx-charts-pie-chart\n        [view]=\"view\"\n        [scheme]=\"pieColorScheme\"\n        [results]=\"single\"\n        [gradient]=\"gradient\"\n        [legend]=\"showLegend\"\n        [legendPosition]=\"pieLegendPosition\"\n        [labels]=\"pieShowLabels\"\n        [doughnut]=\"isDoughnut\"\n        >\n    </ngx-charts-pie-chart> \n\n    <ngx-charts-bar-vertical\n        [view]=\"view\"\n        [scheme]=\"pieColorScheme\"\n        [results]=\"single\"\n        [gradient]=\"gradient\"\n        [xAxis]=\"showXAxis\"\n        [yAxis]=\"showYAxis\"\n        [legend]=\"showLegend\"\n        [showXAxisLabel]=\"showXAxisLabel\"\n        [showYAxisLabel]=\"showYAxisLabel\"\n        [xAxisLabel]=\"xAxisLabel\"\n        [yAxisLabel]=\"yAxisLabel\">\n</ngx-charts-bar-vertical>\n</div>\n","import { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FakeNodeService } from './services/fake-node.service';\nimport { HighlightSearchPipe } from './shared/highlight-text.pipe';\nimport { ItemImageComponent } from './shared/item-image-component/item-image.component';\nimport { FakeItemService } from './services/fake-item.service';\nimport { ItemService } from './services/item.service';\nimport { ResourceComponent } from './nodes/controls/resource-control/resource-control';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GridComponent } from './grid/grid.component';\nimport { ReteModule } from 'rete-angular-render-plugin';\nimport { BaseNodeComponent } from './nodes/base-node/base-node.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NodeBrowserComponent } from './node-browser/node-browser.component';\nimport { NodeService } from './services/node.service';\nimport { RateComponent } from './shared/rate-component/rate-component.component';\n\n@NgModule({\n  declarations: [\n    GridComponent,\n    BaseNodeComponent,\n    ResourceComponent,\n    ItemImageComponent,\n    NodeBrowserComponent,\n    HighlightSearchPipe,\n    RateComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ReteModule,\n    NgbModule,\n  ],\n  providers: [{ provide: ItemService, useClass: FakeItemService}, {provide: NodeService, useClass: FakeNodeService } ],\n  exports: [GridComponent, NodeBrowserComponent, HighlightSearchPipe],\n  entryComponents: [ResourceComponent,\n    BaseNodeComponent\n  ]\n})\nexport class CustomReteModule { }\n","import { RateComponent } from './../../../shared/rate-component/rate-component.component';\nimport { Item } from './../../../shared/item.model';\n\nimport { Component, Type, ViewChild } from '@angular/core';\nimport { Control, NodeEditor } from 'rete';\nimport { AngularControl } from 'rete-angular-render-plugin';\n\n@Component({\n  templateUrl: \"./resource-control.html\",\n  styleUrls: [\"./resource-control.sass\",]\n})\nexport class ResourceComponent {\n  public mounted!: Function;\n  public changeRate!: Function;\n  \n  public selectedItem!: Item;\n  public readonly: boolean;\n  public disableRate: boolean;\n\n  @ViewChild(RateComponent) rateComponent: RateComponent;\n  \n  ngOnInit() {\n    this.mounted();\n  }\n  \n  onRateChange(value) {\n    this.changeRate(value);\n  }\n\n  setRate(value) {\n    this.rateComponent.setRate(value);\n  }\n}\n\nexport class ResourceControl extends Control implements AngularControl {\n  component: Type<ResourceComponent>\n  props: { [key: string]: unknown }\n  \n  constructor(public emitter: NodeEditor, public key, public disableRate: boolean = false) {\n    super(key); \n  \n    this.component = ResourceComponent;\n    this.props = {\n      selectedItem: Item,\n      readonly: false,\n      disableRate: this.disableRate,\n      changeRate: v => this.onChangeRate(v),\n      mounted: () => {\n        this.setInitialItem();\n      },\n      rateComponent: RateComponent,\n    }\n  }\n\n  onChangeRate(rate: number) {\n    this.putData('perHour', rate);\n    this.emitter.trigger('process');\n  }\n\n  setRate(rate: number) {\n    (<RateComponent>this.props.rateComponent).setRate(rate);\n  }\n\n  private setInitialItem() {\n    let item = this.getData('resource') as Item;\n    this.props.selectedItem = item;\n    \n    this.putData(this.key, item);\n    this.putData('amount', item.craftable ? item.recipe.createdAmount : 1)\n    this.putData('perHour', this.props.perHour);\n\n    this.getNode().meta['changed'] = true;\n  }\n}","<div class=\"resource-control\">\n    <item-image class=\"center\" [selectedItem]=\"selectedItem\"></item-image>\n    <div *ngIf=\"!disableRate\">\n        <rate-component [readonly]=\"readonly\" [placeholder]=\"'Per-Hour Rate'\" [text]=\"'/ hour'\" (onChange)=\"onRateChange($event)\"></rate-component>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Item } from './../shared/item.model';\nimport { BaseNodeComponent } from './base-node/base-node.component';\nimport { Connection } from './../shared/connection.model';\nimport { Component, Output, Input, Node } from 'rete';\nimport { SocketController } from './sockets';\nimport { ResourceControl } from './controls/resource-control/resource-control';\nimport { AngularComponent } from 'rete-angular-render-plugin';\n\nexport class ResourceNode extends Component {\n\n  constructor(private socketController: SocketController) {\n    super('Resource');\n\n  }\n\n  builder(node) {\n    var control = new ResourceControl(this.editor, 'resource');\n    node.addControl(control);\n\n    node.meta.type = 'resource'\n    node.data.name = 'Resource';\n\n    return node;\n  }\n\n  worker(node, inputs, outputs) {\n    \n    // Update the nodes structure\n    var node_ref: Node = this.editor.nodes.find(n => n.id === node.id);\n    if (node_ref.meta.changed === true)\n    {\n      this.updateNodeStructure(node_ref);\n      node_ref.meta.changed = false;\n    }\n\n    let datagram = new Connection(node.id, node.data.resource.id, node.data.amount, node.data.perHour);\n    outputs['resource'] = datagram;\n  }\n\n  private updateNodeStructure(node: Node ) {\n    node.getConnections().forEach(element => {\n      this.editor.removeConnection(element);\n    });\n    \n    node.outputs.clear();\n    var item = <Item>node.data.resource;\n\n    var output = new Output(\"resource\", item.name, this.socketController.GetSocketForId(item.id));\n    node.addOutput(output);\n    \n    this.editor.trigger('nodeselected');\n  }\n}","import { Injectable } from '@angular/core';\nimport { ItemService } from 'src/app/rete-modules/services/item.service';\nimport { Item } from './../shared/item.model';\n\nvar fakeDatabase = {\n  items: [\n    {\n      id: 1,\n      name: \"Stone\",\n      index: [0, 0],\n      craftable: false,\n    },\n    {\n      id: 2,\n      name: \"Grass\",\n      index: [1, 0],\n      craftable: false,\n    },\n    {\n      id: 3,\n      name: \"Dirt\",\n      index: [2, 0],\n      craftable: false,\n    },\n    {\n      id: 4,\n      name: \"Cobblestone\",\n      index: [3, 0],\n      craftable: false,\n    },\n    {\n      id: 5,\n      name: \"Planks\",\n      index: [4, 0],\n      craftable: true,\n      recipe: {\n        createdAmount: 4,\n        ingredients: [\n          {\n            id: 23,\n            amount: 1\n          }\n        ],\n      },\n    },\n    {\n      id: 23,\n      name: \"Logs\",\n      index: [6, 1],\n      craftable: false,\n    },\n    {\n      id: 92,\n      name: \"Bookshelf\",\n      index: [11, 5],\n      craftable: true,\n      recipe: {\n        createdAmount: 1,\n        ingredients: [\n          {\n            id: 340,\n            amount: 3\n          },\n          {\n            id: 5,\n            amount: 6\n          }\n        ],\n      },\n    },\n    {\n      id: 103,\n      name: \"Crafting Bench\",\n      index: [6, 6],\n      craftable: true,\n      recipe: {\n        createdAmount: 1,\n        ingredients: [\n          {\n            id: 5,\n            amount: 4\n          },\n        ],\n      },\n    },\n    {\n      id: 334,\n      name: \"Leather\",\n      index: [14, 18],\n      craftable: false,\n    },\n    {\n      id: 338,\n      name: \"Sugar Cane\",\n      index: [2, 19],\n      craftable: false,\n    },\n    {\n      id: 339,\n      name: \"Paper\",\n      index: [3, 19],\n      craftable: true,\n      recipe: {\n        createdAmount: 3,\n        ingredients: [\n          {\n            id: 338,\n            amount: 3\n          },\n        ],\n      },\n    },\n    {\n      id: 340,\n      name: \"Book\",\n      index: [4, 19],\n      craftable: true,\n      recipe: {\n        createdAmount: 1,\n        ingredients: [\n          {\n            id: 334,\n            amount: 1\n          },\n          {\n            id: 339,\n            amount: 3\n          }\n        ],\n      },\n    },\n  ]\n};\n\n@Injectable()\nexport class FakeItemService extends ItemService {\n  constructor() { \n    super()\n  }\n\n  GetAllItems(): Item[] {\n    return fakeDatabase[\"items\"] as Item[];\n  }\n\n  GetItemFromId(id: number): Item {\n    return fakeDatabase[\"items\"].find((value) => {\n      if (value.id == id) { return value as Item};\n    })\n  }\n\n  GetAllCraftableItems(): Item[] {\n    return fakeDatabase[\"items\"].filter( value => {\n      return value.craftable;\n    })\n  }\n\n  GetAllNonCraftableItems(): Item[] {\n    return fakeDatabase[\"items\"].filter(value => {\n      return !value.craftable;\n    })\n  }\n}\n","import { Item } from './../shared/item.model';\nimport { Connection } from './../shared/connection.model';\nimport { SocketController } from './sockets';\nimport { ItemService } from '../services/item.service';\n\nimport { Component, Output, Input, Node } from 'rete';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data'\nimport { ResourceControl } from './controls/resource-control/resource-control';\n\nimport { Recipe } from '../shared/recipe.model'\n\nexport class CrafterNode extends Component {\n\n  constructor(private socketController: SocketController, private itemService: ItemService) {\n    super('Crafter');\n  }\n\n  builder(node) {\n    var control = new ResourceControl(this.editor, 'resource');\n    control.props.readonly = true;\n    node.addControl(control);\n\n    node.meta.type = 'crafter';\n    node.data.name = 'Crafter';\n\n    return node;\n  }\n\n  worker(node: NodeData, inputs: WorkerInputs, outputs: WorkerOutputs) {\n\n    var node_ref = this.editor.nodes.find(n => n.id === node.id);\n    // Update the node structure\n    if (node_ref.meta.changed === true)\n    {\n      this.updateNodeStructure(node_ref);\n      node_ref.meta.changed = false;\n    }\n\n    let perHourBottleneck = Infinity;\n    let craftedItem = <Item>node.data.resource;\n    let recipe: Recipe = craftedItem.recipe;\n\n    // Perpare datagram for calculations\n    node.data.inputTree = [];\n    let datagram = new Connection(node.id, craftedItem.id, recipe.createdAmount, perHourBottleneck);\n    recipe.ingredients.forEach(ingredient => {\n      let input = inputs[ingredient.id];\n\n      if (input && input[0]) {\n        let inputData = <Connection>input[0];\n        let itemBottleneck = inputData.amount / ingredient.amount;\n        itemBottleneck *= inputData.perHour;\n\n        if (itemBottleneck < perHourBottleneck) {\n          perHourBottleneck = itemBottleneck;\n        }\n\n        // Add the input to the tree\n        datagram.transitionCost.push(1 / ingredient.amount);\n        datagram.tree.push(inputData);\n        \n        (<any[]>node.data.inputTree).push(inputData);\n      }\n    })\n\n    // Find the outputs per hour bottleneck\n    datagram.perHour = perHourBottleneck;\n\n    // Update the control with the rate\n    let control = <ResourceControl>node_ref.controls.get('resource');\n    control.setRate(perHourBottleneck);\n\n\n    // var datagram = new Connection(node.data.resource, node.data.amount, node.data.perHour, node.data.criticalPath);\n    outputs['resource'] = datagram;\n  }\n\n  private updateNodeStructure(node: Node) {\n    node.getConnections().forEach(element => {\n      this.editor.removeConnection(element);\n    });\n    \n    node.outputs.clear();\n    var item = <Item>node.data.resource;\n    var output = new Output(\"resource\", item.name  + \" x \" + item.recipe.createdAmount, this.socketController.GetSocketForId(item.id));\n    node.addOutput(output);\n\n    node.inputs.clear();\n    item.recipe.ingredients.forEach(ingredient => {\n      var item = this.itemService.GetItemFromId(ingredient.id);\n      var input = new Input(\"\" + item.id, item.name + \" x \" + ingredient.amount , this.socketController.GetSocketForId(item.id));\n      node.addInput(input);\n    });\n\n    this.editor.trigger('nodeselected');\n  }\n}","import { Connection } from './../../rete-modules/shared/connection.model';\nimport { OutputManagerService, MarkedOutput, MarkedOutputs } from './../services/output-manager.service';\nimport { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-output-item',\n  templateUrl: './output-item.component.html',\n  styleUrls: ['./output-item.component.sass']\n})\nexport class OutputItemComponent implements OnInit {\n  @Input() node: MarkedOutput;\n  @Output() dropdownPressed = new EventEmitter<MarkedOutput>();\n\n\n  public childNodes: MarkedOutput[]\n\n  constructor(private outputManagerService: OutputManagerService) {\n  }\n  \n  ngOnInit(): void {\n    this.outputManagerService.bindOnNodeUpdate(this.node.id, val => {\n      this.node = val;\n    })\n\n    this.childNodes = this.getChildren();\n  }\n\n  getName(): string {\n    return <string>this.node.data['name'];\n  }\n\n  getId(): number {\n    return this.node.id;\n  }\n\n  showDropdown(): boolean {\n    let shouldShow = false;\n\n    if (this.node.data['inputTree']) {\n      if ((<any[]>this.node.data['inputTree']).length > 0) {\n        shouldShow = true;\n      }\n    }\n\n    return shouldShow;\n  }\n\n  toggleDropdown() {\n    this.dropdownPressed.emit(this.node)\n  }\n\n  getType(): string {\n    return <string>this.node.meta['type'];\n  }\n\n  getChildren(): MarkedOutput[] {\n    let children: MarkedOutput[] = [];\n\n    let tree = <Connection[]>this.node.data['inputTree'];\n    if (tree) {\n      tree.forEach(connection => {\n        children.push(this.outputManagerService.getNodeById(connection.nodeId));\n      })\n    }\n\n    return children;\n  }\n\n}\n","<div class=\"output-container\" [ngClass]=\"getType()\">\n    <div class=\"title-container\" [ngClass]=\"getType()\"> \n        <div class=\"id-container\">\n            <p>{{getId()}}</p>\n        </div>\n        <div class=\"title\">\n            {{getName()}}\n        </div>\n    </div>\n\n    <div class=\"data-container\">\n\n    </div>\n\n    <div class=\"dropdown-container\" *ngIf=\"showDropdown()\" (click)=\"toggleDropdown()\">\n        <div class=\"dropdown-icon\">\n            <div>\n                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-chevron-compact-down\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path fill-rule=\"evenodd\" d=\"M1.553 6.776a.5.5 0 0 1 .67-.223L8 9.44l5.776-2.888a.5.5 0 1 1 .448.894l-6 3a.5.5 0 0 1-.448 0l-6-3a.5.5 0 0 1-.223-.67z\"/>\n                </svg>\n            </div>\n        </div>\n    </div>\n</div>","import { Item } from './../item.model';\nimport { Component, Input, Output } from \"@angular/core\";\n\n// Item component that displays and updates the item visible in the image.\n// Takes a Item as an input and will update the visual when updateVisual is called\n@Component({\n  selector: 'item-image',\n  templateUrl: 'item-image.component.html',\n  styleUrls: ['item-image.component.sass']\n})\nexport class ItemImageComponent {\n  @Input() selectedItem: Item;\n\n  public background: any;\n\n  constructor() {\n    this.background = {};\n  }\n\n  ngOnInit() {\n    this.updateVisual( this.selectedItem);\n  }\n\n  updateVisual( item: Item ) {\n    this.background['background-position-x'] = -64 * item.index[0] + \"px\";\n    this.background['background-position-y'] =  -64 * item.index[1] + \"px\";\n  }\n}","<div class=\"center pixelated\">\n    <img class=\"item\" src=\"assets/images/transparent_32x32.png\" [ngStyle]=\"background\">\n</div>","import { Node, NodeEditor } from 'rete';\nimport { Injectable, EventEmitter } from '@angular/core';\n\nexport type MarkedOutput = Node;\n\nexport type MarkedOutputs = MarkedOutput[];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OutputManagerService {\n  private editor: NodeEditor;\n  private markedNodes: MarkedOutputs;\n  private onNodeUpdate: { [nodeId: number]: Function[] };\n\n  constructor() { \n    this.markedNodes = [];\n    this.onNodeUpdate = {};\n  }\n\n  bindOnNodeUpdate(nodeId: number, func: Function) {\n    if (this.onNodeUpdate[nodeId]) {\n      this.onNodeUpdate[nodeId].push(func);\n    } else {\n      this.onNodeUpdate[nodeId] = [func];\n    }\n  }\n\n  setEditor( editor: NodeEditor ) {\n    this.editor = editor;\n  }\n\n  update( nodes: Node[] ) {\n    nodes.forEach(node => {\n      if (this.onNodeUpdate[node.id]) {\n        this.onNodeUpdate[node.id].forEach(callback => {\n          callback(node);\n        })\n      }\n    })\n  }\n\n  getNodeById(nodeId: number): Node {\n    return this.editor.nodes.find(value => value.id == nodeId);\n  }\n\n  getMarkedNodes(): MarkedOutputs {\n    return this.markedNodes;\n  }\n\n  getNumberMarkedNodes(): number {\n    return Object.keys(this.markedNodes).length;\n  }\n\n  markNode(nodeId: number) {\n    let node = this.getNodeById(nodeId);\n    this.markedNodes.push(node);\n  }\n  \n  unmarkNode(nodeId: number) {\n    let tempNodes: MarkedOutputs = [];\n    \n    this.markedNodes.forEach(value => {\n      if (value.id != nodeId) {\n        tempNodes.push(value);\n      }\n    })\n\n    this.markedNodes = tempNodes;\n  }\n}\n","import { OutputManagerService } from './../../output/services/output-manager.service';\nimport { Connection } from './../shared/connection.model';\nimport { CustomNodeData } from './../shared/custom.model';\nimport { CustomNode } from './../nodes/custom-node.component';\nimport { BaseNodeComponent } from './../nodes/base-node/base-node.component';\nimport { NodeTree } from './../shared/node-tree';\nimport { OutputNode } from './../nodes/output-node.component';\nimport { ItemService } from './../services/item.service';\nimport { CrafterNode } from './../nodes/crafter-node.component';\nimport { SocketController } from './../nodes/sockets';\nimport { Component, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\n\nimport { Component as ReteComponent, NodeEditor, Engine, Node } from 'rete';\nimport { Transform } from 'rete/types/view/area';\nimport ConnectionPlugin from 'rete-connection-plugin';\n\nimport { ResourceNode } from './../nodes/resource-node.component';\nimport { AngularRenderPlugin } from 'rete-angular-render-plugin';\nimport ContextMenuPlugin from 'rete-context-menu-plugin'\nimport { NodeService } from '../services/node.service';\n\n@Component({\n  selector: 'app-grid',\n  templateUrl: './grid.component.html',\n  styleUrls: ['./grid.component.sass']\n})\nexport class GridComponent implements AfterViewInit {\n  public isSideBarCollapse: boolean = true;\n  \n  @ViewChild('nodeEditor', { static: true }) private el: ElementRef;\n  private editor: NodeEditor = null;\n  private engine: Engine;\n  private components: { [type: string]: ReteComponent };\n\n  private nodeTree: NodeTree;\n\n  private completePath: boolean = false;\n\n  constructor(private socketController: SocketController, private itemService: ItemService, private nodeService: NodeService, private outputManager: OutputManagerService) { \n  }\n\n  async ngAfterViewInit() {\n    const container = this.el.nativeElement;\n    \n    this.components = {};\n\n    this.components['Resource'] = new ResourceNode(this.socketController);\n    this.components['Crafter'] = new CrafterNode(this.socketController, this.itemService);\n    this.components['Output'] = new OutputNode(this.socketController);\n    this.components['Custom'] = new CustomNode(this.socketController, this.itemService, this.nodeService)\n\n    this.editor = new NodeEditor('minecraft-web-app@0.1.0', container);\n    this.editor.use(ConnectionPlugin);\n    this.editor.use(AngularRenderPlugin, { component: BaseNodeComponent });\n    this.editor.use(ContextMenuPlugin, {\n      searchBar: false,\n      delay: 100,\n      nodeItems: (node: Node) => {\n        if (node.meta.hasOutputFocus) {\n          return {\n            'Unfocus': () => {\n              this.outputManager.unmarkNode(node.id);\n              node.meta.hasOutputFocus = false;\n            },\n          }\n        }\n        return {\n          'Focus': () => {\n            this.outputManager.markNode(node.id);\n            node.meta.hasOutputFocus = true;\n          },\n        };\n      }\n    });\n\n    this.outputManager.setEditor(this.editor);\n\n\n    this.engine = new Engine('minecraft-web-app@0.1.0');\n\n    this.nodeTree = new NodeTree();\n\n    for (const componentKey in this.components) {\n      let component = this.components[componentKey];\n\n      this.editor.register(component);\n      this.engine.register(component);\n    }\n\n    this.createNode(\"Resource\", 23, 0, -125);\n    this.createNode(\"Crafter\", 5, 400, -125);\n    this.createNode(\"Output\", 5, 800, -125);\n    this.createNode(\"Custom\", 1, 0, 200);\n    this.createNode(\"Custom\", 4, 600, 200);\n\n    this.editor.on(['nodecreated'], (async () => {\n      await this.engine.abort();\n      await this.engine.process(this.editor.toJSON());\n    }) as any);\n\n    this.editor.on(['process', 'connectioncreated', 'connectionremoved'], async () => {\n      this.editor.selected.clear();\n      this.editor.nodes.map(n => n.update());\n      \n      await this.engine.abort();\n      await this.engine.process(this.editor.toJSON());\n      this.outputManager.update( this.editor.nodes );\n      \n      this.nodeTree.parseFromJson(this.editor.toJSON());\n      this.updateCriticalPath();\n\n    });\n\n    this.editor.on('noderemoved', async (node) => {\n      this.editor.selected.clear();\n      this.editor.nodes.map(n => n.update());\n      \n      await this.engine.abort();\n      await this.engine.process(this.editor.toJSON());\n      \n      this.nodeTree.parseFromJson(this.editor.toJSON());\n      this.updateCriticalPath();\n\n      this.outputManager.unmarkNode(node.id);\n      this.outputManager.update( this.editor.nodes );\n    });\n\n    this.editor.on('click', () => {\n      this.editor.selected.clear();\n      this.editor.nodes.map(n => n.update());\n    })\n\n    this.engine.on('error', (message) => {\n      console.log(message);\n    });\n\n    // Removes the context menu on the grid\n    // this.editor.events['showcontextmenu'].push(({ e, node }) => {\n    //   return Boolean(node);\n    // });\n    \n    this.editor.view.resize();\n    this.editor.trigger('process');\n  }\n\n  updateCriticalPath() {\n    let criticalPath = this.nodeTree.getCriticalPath();\n    this.completePath = true;\n\n    this.editor.nodes.forEach(value => {\n      value.meta.criticalPath = false;\n    })\n\n    criticalPath.forEach( value => {\n      let node_ref = this.editor.nodes.find(n => n.id === value);\n      node_ref.meta.criticalPath = true;\n      this.completePath = true;\n    });\n  }\n  \n  dragOver(event) {\n    event.preventDefault();\n\n    event.dataTransfer.dropEffect = \"copy\";\n  }\n\n  onDrop(event) {\n    event.preventDefault();\n\n    const type = event.dataTransfer.getData(\"nodeType\");\n    const id = event.dataTransfer.getData(\"nodeId\") as number;\n    this.createNode(type, id, event.clientX, event.clientY, true);\n  }\n\n  deleteNode() {\n    this.editor.selected.list.forEach(value => {\n      this.editor.removeNode(value);\n    })\n\n    this.editor.selected.list = [];\n  }\n\n  anyNodeSelected(): boolean {\n    return this.editor != null && this.editor.selected.list.length > 0;\n  }\n\n  scaleToFit() {\n    let editorBounds: [number, number] = [this.editor.view.area.container.clientWidth, this.editor.view.area.container.clientHeight];\n    \n    let firstPass = true;\n    let topLeftBounds: [number, number] = [0, 0]; // Towards the negative\n    let bottomRightBounds: [number, number] = [0, 0]; // Towards the positive\n    \n    this.editor.nodes.forEach(value => {\n      if (firstPass || topLeftBounds[0] > value.position[0]) {\n        topLeftBounds[0] = value.position[0];\n      }\n      if (firstPass || topLeftBounds[1] > value.position[1]) {\n        topLeftBounds[1] = value.position[1];\n      }\n      \n      if (firstPass || bottomRightBounds[0] < value.position[0] + 200) {\n        bottomRightBounds[0] = value.position[0] + 200;\n      }\n      if (firstPass || bottomRightBounds[1] < value.position[1] + 250) {\n        bottomRightBounds[1] = value.position[1] + 250\n      };\n      \n      firstPass = false;\n    })\n    \n    let nodeBounds: [number, number] = [bottomRightBounds[0] - topLeftBounds[0] + 50, bottomRightBounds[1] - topLeftBounds[1] + 50];\n    let nodeCenter: [number, number] = [topLeftBounds[0] + nodeBounds[0] * .5, topLeftBounds[1] + nodeBounds[1] * .5];\n    \n    let transform: Transform = {k: 1, x: 0, y: 0}; \n    \n    // Calculate the scale\n    let sizeDifference = [editorBounds[0] / nodeBounds[0], editorBounds[1] / nodeBounds[1]];\n    let widthLonger = sizeDifference[0] < sizeDifference[1];\n    if (widthLonger) {\n      transform.k = sizeDifference[0];\n      \n    }\n    else {\n      transform.k = sizeDifference[1];\n    }\n    \n    let editorCenter: [number, number] = [editorBounds[0] * .5, editorBounds[1] * .5];\n    let centerDifference: [number, number] = [(nodeCenter[0] - 25) * transform.k - editorCenter[0], (nodeCenter[1] - 25) * transform.k - editorCenter[1]];\n    \n    transform.x = -centerDifference[0];\n    transform.y = -centerDifference[1];\n    \n    this.editor.view.area.transform = transform;\n    this.editor.view.area.update();\n  }\n\n  canCollapse() {\n    return this.completePath ? \"\" : \"disabled\";\n  }\n\n  collapseToNode() {\n    let connectedNodes: number[] = [];\n    let nodeOutputs = this.nodeTree.getOutputs();\n\n    // Create the custom node data to generate\n    let customNodeData: CustomNodeData = { id: -1, name: 'NOT-INSTANTIATED', inputs: [], outputs: {} };\n    \n    //TODO: Only transverse nodes that are not connected to each other\n\n    // For all of the valid output nodes in the graph\n    nodeOutputs.forEach(outputNode => {\n      connectedNodes.push(outputNode.node.id);\n      // Create a stack for transversal\n      let connectionStack: Connection[] = [];\n      outputNode.getInputTree().forEach(connection => {\n        connectionStack.push(connection);\n      })\n\n      // Loop through the entire connection tree\n      let outputData = { inputRate: {}, createdAmount: -1 };\n      while (connectionStack.length > 0) {\n        let currentConnection = connectionStack.pop();\n        connectedNodes.push(currentConnection.nodeId);\n        if (!currentConnection) {\n          continue;\n        }\n        // If this is the first time seeing a node, that is the output amount\n        if (outputData.createdAmount === -1) {\n          outputData.createdAmount = currentConnection.amount;\n        }\n        \n        if (currentConnection.tree.length > 0) {\n          // For each value, propogate the previous rate if available and the input value amount and crafting translation cost\n          currentConnection.tree.forEach((inputValue, inputIndex) => {\n            let propogateOutput = outputData.inputRate[currentConnection.itemId];\n            outputData.inputRate[inputValue.itemId] = inputValue.amount * currentConnection.transitionCost[inputIndex] * (propogateOutput == undefined ? 1 : propogateOutput);\n            connectionStack.push(inputValue);\n          });\n\n          // Delete the value if it is not a resource node\n          delete outputData.inputRate[currentConnection.itemId];\n        }\n      }\n\n      // If the output has some inputs connected to it\n      if (outputData.createdAmount > -1) {\n\n        // Get the output item index\n        let outputIndex: number = outputNode.node.data.resource['id'];\n\n        // Save the output data and all its inputs\n        customNodeData.outputs[outputIndex] = outputData;\n        for (let inputId in outputData.inputRate) {\n          if (!customNodeData.inputs.includes(parseInt(inputId))) {\n            customNodeData.inputs.push(parseInt(inputId));\n          }\n        }\n      }\n    });\n\n\n    let name = \"TempNode: \" + Math.random() * 10;\n    customNodeData.name = name;\n    let customNode = this.nodeService.SaveCustomNode(0, 0, customNodeData);\n\n    // Removes the nodes and replaces it with a custom version of the node\n    let location: [number, number] = [0, 0];\n    let removedNodes: number = 0;\n    connectedNodes.forEach(nodeToRemove => {\n      let node = this.editor.nodes.find(node => nodeToRemove === node.id);\n\n      location[0] += node.position[0];\n      location[1] += node.position[1];\n      removedNodes++;\n\n      this.editor.removeNode(node);\n    });\n\n    location[0] /= removedNodes;\n    location[1] /= removedNodes;\n\n    this.createNode(\"Custom\", customNode, location[0], location[1], false);\n  }\n  \n  private async createNode(nodeType: string, nodeId: number, x: number, y: number, fromMouse: boolean = false) {\n    if (this.components.hasOwnProperty(nodeType)) {\n      let component;\n      if (nodeType == \"Custom\") {\n        component = await this.components[nodeType].createNode({ custom: nodeId });\n      } else {\n        component = await this.components[nodeType].createNode({ resource: this.itemService.GetItemFromId(nodeId) });\n      }\n\n\n      let position: [number, number] = [0, 0];\n      if (fromMouse) {\n        let transform = this.editor.view.area.transform;\n        position = [(x - transform.x - 75) / transform.k, (y - transform.y - 125) / transform.k] as [number, number];\n      }\n      else {\n        position = [x, y];\n      }\n\n      component.position = position;\n      this.editor.addNode(component);\n    }\n  }\n}\n","<div class=\"grid-wrapper module-margin\" (dragover)=\"dragOver($event)\" (drop)=\"onDrop($event)\">\n    <div id=\"grid-toolbar-container\" (mouseenter)=\"isSideBarCollapse = false\" (mouseleave)=\"isSideBarCollapse = true\">\n        <div class=\"grid-toolbar\">\n            <div class=\"popout-window collapse\" [ngbCollapse]=\"isSideBarCollapse\">\n                <div id=\"scale-container\" (mouseup)=\"scaleToFit()\">\n                    <label class=\"btn btn-info\">\n                            <p>Scale To Fit</p>\n                        </label>\n                </div>\n                <div id=\"collapse-container\">\n                    <label class=\"btn btn-info\" [ngClass]=\"canCollapse()\" (mouseup)=\"collapseToNode()\">\n                        <p>Collapse To Node</p>\n                    </label>\n                </div>\n            </div>  \n\n            <div class=\"toolbar-label\" *ngIf=\"isSideBarCollapse\">\n                <div>TOOLBAR</div>\n            </div>\n        </div>\n    </div>\n    \n    <div #nodeEditor class=\"node-editor\"></div>\n\n    <div id=\"delete-container\" (mouseup)=\"deleteNode()\">\n        <label class=\"btn\" [ngClass]=\"anyNodeSelected() ? 'btn-danger' : ['btn-outline-danger', 'disabled']\" [ngClass]=\"\">\n            <p>Delete</p>\n        </label>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'Supplemental Application';\n\n  onClick(event) {\n    console.log(\"Clicked: \" + event);\n  }\n}\n","<div id=\"fullsite\" class=\"fill-width fill-height\">\n    <div id=\"workspace\">\n        <app-grid></app-grid>\n        <app-node-browser></app-node-browser>\n    </div>\n    <div id=\"resultspace\">\n        <app-output-container></app-output-container>\n    </div>\n</div>","import { CustomOutput } from './../shared/custom-output';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport { CustomNodeData } from './../shared/custom.model';\nimport { Connection } from './../shared/connection.model';\nimport { SocketController } from './sockets';\nimport { ItemService } from '../services/item.service';\nimport { NodeService } from '../services/node.service';\nimport { Component, Input, Node } from 'rete';\nimport { ResourceControl } from './controls/resource-control/resource-control';\n\nexport class CustomNode extends Component {\n\n  constructor(private socketController: SocketController, private itemService: ItemService, private nodeService: NodeService) {\n    super('Custom');\n  }\n\n  builder(node: Node): any {\n    // Visual for custom node\n    node.data.resource = this.itemService.GetItemFromId(103);\n\n    // Add a ResourceControl to the node\n    var control = new ResourceControl(this.editor, 'resource', true);\n    control.props.selectedItem = node.data.resource;\n    control.props.readonly = true;\n    node.addControl(control);\n\n    this.updateNodeStructure(node);\n\n    node.meta.type = 'custom'\n    \n    return node;\n  }\n\n  worker(node: NodeData, inputs: WorkerInputs, outputs: WorkerOutputs) {\n    // Define the datagrams to output\n    let datagramOutputs: {[index: number]: Connection} = {};\n    let customData = <CustomNodeData>node.data.customization;\n\n    var node_ref = this.editor.nodes.find(value => { return value.id == node.id });\n    // For each output calculate the critical path based on their inputs\n    for (let outputId in customData.outputs) {\n      let missingInput = false;\n      let perHour = Infinity;\n      let output = customData.outputs[outputId];\n\n      // Create the initial datagram for the output\n      datagramOutputs[outputId] = new Connection(node.id, parseInt(outputId), output.createdAmount, perHour);\n\n      // For each of the inputs, calculate the per hour rate\n      for (let inputId in output.inputRate) {\n        let input = <Connection>inputs[inputId][0];\n        \n        if (input && !missingInput) {\n          let possiblePerHour = output.inputRate[inputId] * input.perHour * input.amount;\n          if (possiblePerHour < perHour) {\n            perHour = possiblePerHour;\n          }\n        } else {\n          perHour = Infinity;\n          missingInput = true;\n        }\n\n        // Add the input to the datagram tree\n        if (input) {\n          datagramOutputs[outputId].transitionCost.push(output.inputRate[inputId]);\n          datagramOutputs[outputId].tree.push(input);\n        }\n      }\n\n      // Update the datagram with the smallest per hour rate for this output\n      datagramOutputs[outputId].perHour = perHour;\n      let outputControl: CustomOutput = <CustomOutput>node_ref.outputs.get(outputId);\n      outputControl.data.rate = perHour;\n    }\n\n    // Find the smallest critical path time for the global critical path\n    let smallestPerHour: {index: any, perHour: number} = {index: 0, perHour: Infinity};\n    for (let outputIndex in datagramOutputs) {\n      let datagram = datagramOutputs[outputIndex];\n      if (smallestPerHour.perHour > datagram.perHour) {\n        smallestPerHour.index = outputIndex;\n        smallestPerHour.perHour = datagram.perHour;\n      }\n\n      // Add the datagrams to the output indexes\n      outputs[outputIndex] = datagramOutputs[outputIndex];\n\n    }\n\n  }\n\n  private updateNodeStructure(node: Node) {\n    let customization: CustomNodeData = this.nodeService.GetCustomNode(node.data['custom'] as number);\n    if (!customization) {\n      throw new Error(\"Failed to get Custom Node Data for ID: \" + node.data['custom']);\n    }\n    node.data.name = customization.name;\n    node.data['customization'] = customization;\n    \n    var custom: CustomNodeData = node.data.customization as any;\n    custom.inputs.forEach(id => {\n      var item = this.itemService.GetItemFromId(id);\n      var input = new Input(\"\" + item.id, item.name, this.socketController.GetSocketForId(item.id));\n      node.addInput(input);\n    });\n\n    for (let outputIndex in custom.outputs) {\n      let item = this.itemService.GetItemFromId(parseInt(outputIndex));\n      var output = new CustomOutput(\"\" + item.id, item.name, this.socketController.GetSocketForId(item.id));\n      output.data.rate = Infinity;\n      node.addOutput(output);\n    }\n\n  }\n}","// Reference\n// https://stackoverflow.com/a/44962110\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'highlight'\n})\nexport class HighlightSearchPipe implements PipeTransform {\n\n  transform(value: any, args: any): any {\n    if (!args) {return value;}\n    var re = new RegExp(args, 'gi'); //'gi' for case insensitive and can use 'g' if you want the search to be case sensitive.\n    return value.replace(re, \"<mark class='highlight'>$&</mark>\");\n  }\n}","import { OutputModule } from './output/output.module';\nimport { NodeBrowserComponent } from './rete-modules/node-browser/node-browser.component';\nimport { SocketController } from './rete-modules/nodes/sockets';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { CustomReteModule } from './rete-modules/custom-rete.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CustomReteModule,\n    OutputModule,\n  ],\n  providers: [SocketController],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OutputContainerComponent } from './output-container/output-container.component';\nimport { OutputManagerService } from './services/output-manager.service';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { OutputItemComponent } from './output-item/output-item.component';\nimport { GraphViewComponent } from './graph-view/graph-view.component';\n\n\n\n@NgModule({\n  declarations: [OutputContainerComponent, OutputItemComponent, GraphViewComponent],\n  imports: [\n    CommonModule,\n    NgxChartsModule\n  ],\n  exports: [OutputContainerComponent,\n  ],\n  providers: [OutputManagerService]\n})\nexport class OutputModule { }\n","import { BaseNodeComponent } from './base-node/base-node.component';\nimport { Component, Output, Input } from 'rete';\nimport { SocketController } from './sockets';\nimport { ResourceControl } from './controls/resource-control/resource-control';\n\nexport class OutputNode extends Component {\n\n  constructor(private socketController: SocketController) {\n    super('Output');\n  }\n\n  builder(node) {\n    var control = new ResourceControl(this.editor, 'resource');\n    control.props.readonly = true;\n    node.addControl(control);\n\n    node.meta.type = 'output'\n    node.data.name = 'Output'\n\n    return node;\n  }\n\n  worker(node, inputs, outputs) {\n\n    var node_ref = this.editor.nodes.find(n => n.id === node.id);\n    if (node_ref.meta.changed === true)\n    {\n      node_ref.getConnections().forEach(element => {\n        this.editor.removeConnection(element);\n      });\n      \n      node_ref.inputs.clear();\n      var item = node.data.resource;\n\n      var input = new Input(\"resource\", item.name, this.socketController.GetSocketForId(item.id));\n      node_ref.addInput(input);\n      \n      this.editor.trigger('nodeselected');\n\n      node_ref.meta.changed = false;\n    }\n\n    var perHourBottleneck = Infinity;\n\n    if (inputs && inputs['resource'] && inputs['resource'][0]) {\n      perHourBottleneck = inputs['resource'][0].perHour * inputs['resource'][0].amount;\n      \n      // Store the completed input tree\n      node.data.inputTree = [];\n      node.data.inputTree.push(inputs['resource'][0]);\n    } else {\n      node.data.inputTree = null;\n    }\n\n    node.data.perHour = perHourBottleneck;\n    \n    let control = <ResourceControl>node_ref.controls.get('resource');\n    control.setRate(perHourBottleneck);\n  }\n}","import { Recipe } from './recipe.model';\n\nexport class Item {\n  public id!: number;\n  public name!: string;\n  public index: any;\n  public craftable: boolean;\n  public createdAmount?: number;\n  public recipe?: Recipe;\n\n  constructor(id: number, name: string) {\n    this.id = id;\n    this.name = name;\n  }\n}","export class Connection {\n  public nodeId: number;\n  public itemId: number;\n  public amount: number;\n  public perHour: number;\n  public transitionCost: number[];\n  public tree: Connection[];\n\n  constructor(nodeId: number, itemId: number, amount: number, perHour: number) {\n    this.nodeId = nodeId;\n    this.itemId = itemId;\n    this.amount = amount;\n    this.perHour = perHour;\n    this.transitionCost = [];\n    this.tree = [];\n  }\n\n  public getAllConnectionNodeIds(): number[] {\n    let nodeIds: number[] = [];\n    let treeStack: Connection[] = [];\n    treeStack.push(this);\n\n    while (treeStack.length > 0) {\n      let currentConnection = treeStack.pop();\n      if (currentConnection) {\n        nodeIds.push(currentConnection.nodeId);\n  \n        currentConnection.tree.forEach(value => {\n          if (!nodeIds.includes(value.nodeId)) {\n            treeStack.push(value);\n          }\n        })\n      }\n\n    }\n\n    return nodeIds;\n  }\n}","import { Connection } from './connection.model';\nimport { Node } from 'rete';\n\nclass TreeItem {\n  public node: Node;\n  public inputs: TreeItem[];\n  public outputs: TreeItem[];\n\n  constructor(node: Node) {\n    this.node = node;\n\n    this.inputs = [];\n    this.outputs = [];\n  }\n\n  getNodeId(): number {\n    return this.node['id'];\n  }\n\n  getNodeName(): string {\n    return this.node['name'];\n  }\n\n  getNodeData(): object {\n    return this.node['data'];\n  }\n\n  getNodeResourceId(): number {\n    return this.getNodeData()['resource'].id;\n  }\n\n  getInputTree(): Connection[] {\n    return this.getNodeData()['inputTree'];\n  }\n}\n\nexport class NodeTree {\n  public outputNodes: TreeItem[] = [];\n  public criticalPath: number[] = [];\n\n  private allConnectedNodes = [];\n\n  parseFromJson(json: object) {\n    this.outputNodes = [];\n    this.allConnectedNodes = json['nodes'];\n\n    let nodes: object[] = [];\n    // Start with finding all of the output nodes\n    for (const nodeIndex in json['nodes']) {\n      const node = json['nodes'][nodeIndex];\n\n      if (node['name'] === \"Output\") {\n        nodes.push(node);\n      }\n    }\n\n    nodes.forEach((value, index, array) => {\n      this.outputNodes.push(this.findOrCreate(value));\n    });\n\n    let searchStack: TreeItem[] = [];\n    this.outputNodes.forEach((treeNode, index, array) => {\n      searchStack.push(treeNode);\n    });\n    \n    while (searchStack.length > 0) {\n      const currentNode: TreeItem = searchStack.pop();\n\n      for (const inputIndex in currentNode.node.inputs) {\n        const input = currentNode.node.inputs[inputIndex];\n\n        if (input['connections'] && input['connections'].length > 0) {\n          let newNode = this.allConnectedNodes[input['connections'][0]['node']];\n          searchStack.push(this.addNode(newNode, currentNode));\n        }\n      }\n    }\n\n    this.calculateCriticalPath();\n  }\n\n  getCriticalPath(): number[] {\n    return this.criticalPath;\n  }\n\n  getOutputs() {\n    return this.outputNodes;\n  }\n\n  private calculateCriticalPath() {\n    this.criticalPath = [];\n\n    let sortedOutputNodes = this.outputNodes.sort((a, b) => {\n      // Sort the focused node to the front\n      if (a.getNodeData()['hasOutputFocus']) {\n        return -1;\n      } else {\n        return a.getNodeData()['perHour'] - b.getNodeData()['perHour'];\n      }\n    });\n\n    // Starting at the output nodes\n    sortedOutputNodes.forEach(value => {\n\n      // Check to see if the node is currently connected to a critical path\n      if (!this.isConnectedToCriticalPath(value)) {\n        this.criticalPath.push(value.node.id);\n        \n        // Search through the tree\n        let connectionStack: Connection[] = [];\n        value.getInputTree().forEach((value) => {\n          connectionStack.push(value);\n        })\n\n        while (connectionStack.length > 0) {\n          let currentConnection = connectionStack.pop();\n          if (!currentConnection) { continue; }\n          this.criticalPath.push(currentConnection.nodeId);\n\n          let smallestPerHour = Infinity;\n          let smallestConnection: Connection = null;\n          let duplicateConnections: Connection[] = [];\n\n          // Find the smallest per hour connection with duplicates\n          currentConnection.tree.forEach((inputConnection, index) => {\n            let inputConnectionPerHour = currentConnection.transitionCost[index] * inputConnection.amount * inputConnection.perHour;\n            if (smallestPerHour === Infinity) {\n              smallestPerHour = inputConnectionPerHour;\n              smallestConnection = inputConnection;\n            } else if (smallestPerHour === inputConnectionPerHour) {\n              duplicateConnections.push(inputConnection);\n            } else if (smallestPerHour > inputConnectionPerHour) {\n              smallestPerHour = inputConnectionPerHour;\n              smallestConnection = inputConnection;\n              duplicateConnections = [];\n            }\n          });\n\n          // If no connection was found this is the end of the path\n          if (smallestConnection === null) {\n            break;\n          }\n\n          // Add the found connections to the stack to seach\n          duplicateConnections.push(smallestConnection);\n          duplicateConnections.forEach(value => {\n            connectionStack.push(value);\n          });\n        }\n      }\n    });\n  }\n\n  private isConnectedToCriticalPath(node: TreeItem): boolean {\n    let nodeConnections = node.getInputTree();\n\n    if( nodeConnections) {\n      let allConnectionNodeIds: number[] = [];\n      nodeConnections.forEach(connection => {\n        let connections = connection.getAllConnectionNodeIds();\n\n        connections.forEach(value => {\n          allConnectionNodeIds.push(value);\n        })\n        \n      });\n\n      // Used to get the intersection of [criticalPath] x [allConnecitonNodeIds]\n      return this.criticalPath.filter(value => allConnectionNodeIds.includes(value)).length > 0;\n    }\n    else {\n      // If there is not connection, there will not be a critical path so skip\n      return true;\n    }\n  }\n\n  private addNode(node: any, parent: TreeItem): TreeItem {\n    let child = this.findOrCreate(node);\n    child.outputs.push(parent);\n\n    parent.inputs.push(child);\n\n    return child;\n  }\n\n  private findOrCreate(node: any): TreeItem {\n    let item = null;\n    this.outputNodes.forEach((value, index, array) => {\n      let stack: TreeItem[] = [];\n      stack.push(value);\n\n      while (stack.length > 0) {\n        let popped = stack.pop();\n        if (popped.node['id'] == node['id']) {\n          item = popped;\n          return;\n        }\n\n        popped.inputs.forEach((value, index, array) => {\n          stack.push(value);\n        });\n      }\n    });\n\n    if( item !== null) {\n      return item;\n    }\n    return new TreeItem(node);\n  }\n}","import { Item } from './../../shared/item.model';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { NodeComponent, NodeService } from 'rete-angular-render-plugin';\n\n@Component({\n  templateUrl: './base-node.component.html',\n  styleUrls: ['./base-node.component.sass'],\n  providers: [NodeService],\n})\n  \nexport class BaseNodeComponent extends NodeComponent {\n\n  constructor(protected service: NodeService, protected cdr: ChangeDetectorRef) {\n    super(service, cdr);\n  }\n\n  setItem( item: Item ) {\n    this.node.data.resource = item;\n  }\n\n  onCriticalPathClass() {\n    return this.node.meta.criticalPath ? \"critical-path\" : \"\";\n  }\n\n  isCustomClass() {\n    return this.node.data.customization == null ? \"\" : \"custom\";\n  }\n\n  isCustom() {\n    return this.node.data.customization != null;\n  }\n\n  isOutputFocused() {\n    return this.node.meta.hasOutputFocus;\n  }\n}\n","<div class=\"node\" [ngClass]=\"[onCriticalPathClass(), selected(), isCustomClass(), node.name] | kebab\">\n    <div class=\"title-container\">\n        <div class=\"title\">{{node.data.name}}</div>\n        <div class=\"star-container\" *ngIf=\"isOutputFocused()\">\n            <span class=\"glyphicon glyphicon-star\"></span>\n        </div>\n    </div>\n    <div class=\"content\">\n        <div class=\"outputs\">\n            <div class=\"output\" *ngFor=\"let output of outputs\">\n                <div class=\"output-rate-container\" *ngIf=\"isCustom()\">\n                    <input class=\"output-rate\" type=\"text\" readonly=\"true\" value=\"{{output.data.rate}}\">\n                </div>\n                <div class=\"output-title\">{{output.name}}</div>\n                <rete-socket rete-socket [io]=\"output\" [socket]=\"output.socket\"></rete-socket>\n            </div>\n        </div>\n        <div class=\"control\" *ngFor=\"let control of controls\" [rete-control]=\"control\"></div>\n        <div class=\"inputs\">\n            <div class=\"input\" *ngFor=\"let input of inputs\">\n                <rete-socket rete-socket [io]=\"input\" [socket]=\"input.socket\"></rete-socket>\n                <div class=\"input-title\" *ngIf=\"!input.showControl()\">{{input.name}}</div>\n                <div class=\"input-control\" *ngIf=\"input.showControl()\" [rete-control]=\"input.control\"></div>\n            </div>\n        </div>\n    </div>\n</div>","import { OutputManagerService, MarkedOutput, MarkedOutputs } from './../services/output-manager.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-output-container',\n  templateUrl: './output-container.component.html',\n  styleUrls: ['./output-container.component.sass']\n})\nexport class OutputContainerComponent implements OnInit {\n  public markedNodes: MarkedOutput[];\n  public nodeStack: MarkedOutput[];\n  \n  public hasSelectedNode: boolean = false;\n  public selectedNode: MarkedOutput;\n\n  // Handle the tabs at the top\n  public isFocusSelected: boolean = true;\n  onFocusClicked() {\n    this.isFocusSelected = true;\n  }\n  onGraphClicked() {\n    this.isFocusSelected = false;\n  }\n  \n  constructor(private outputManager: OutputManagerService) {\n    this.nodeStack = [];\n\n    setInterval(() => {\n      this.markedNodes = this.outputManager.getMarkedNodes();\n    }, 500)\n  }\n\n  ngOnInit(): void {\n  }\n\n  dropdownCallback(node: MarkedOutput) {\n    this.selectedNode = node;\n    this.nodeStack.push(this.selectedNode);\n\n    this.hasSelectedNode = true;\n  }\n\n  popNode() {\n    if (this.nodeStack.length > 1) {\n      this.nodeStack.pop();\n      this.selectedNode = this.nodeStack.pop();\n    } else {\n      this.hasSelectedNode = false;\n      this.nodeStack = [];\n    }\n  }\n\n  getSelectedChildren(): MarkedOutput[] {\n    let children = [];\n    if (this.selectedNode) {\n      let tree = <any>this.selectedNode.data['inputTree'];\n      if (tree) {\n        for (let id in tree) {\n          let treeValue = tree[id];\n\n          children.push(this.outputManager.getNodeById(treeValue.nodeId));\n        }\n      }\n    }\n\n\n    return children;\n  }\n}","<div class=\"output-wrapper module-margin\">\n    <div class=\"tab-bar\">\n        <button class=\"button tab-button btn\" [ngClass]=\"isFocusSelected ? 'active' : ''\" (click)=\"onFocusClicked()\" data-toggle=\"collapse\" data-target=\"#focusedNodes,#graphs\">Focused</button>\n        <button class=\"button tab-button btn\" [ngClass]=\"!isFocusSelected ? 'active' : ''\" (click)=\"onGraphClicked()\" data-toggle=\"collapse\" data-target=\"#focusedNodes,#graphs\">Graphs</button>\n    </div>\n    \n    <div class=\"subtab-bar\" [ngClass]=\"!hasSelectedNode ? 'hidden' : ''\"  >\n        <button class=\"button toolbar-button\" (click)=\"popNode()\">\n            <span class=\"material-icons mb-36 no-select\">keyboard_backspace</span>\n        </button>\n    </div>\n\n    <div class=\"spacer-10\"></div>\n\n    <div id=\"focusedNodes\" class=\"collapse show\">\n        <div *ngIf=\"!hasSelectedNode\">\n            <div *ngFor=\"let node of markedNodes\">\n                <app-output-item [node]=\"node\" (dropdownPressed)=\"dropdownCallback($event)\"></app-output-item>\n            </div>\n        </div>\n    \n        <div *ngIf=\"hasSelectedNode\">\n            <div *ngFor=\"let child of getSelectedChildren()\">\n                <app-output-item [node]=\"child\" (dropdownPressed)=\"dropdownCallback($event)\"></app-output-item>\n            </div>\n        </div>\n    </div>\n\n    <div id=\"graphs\" class=\"collapse\">\n        <app-graph-view></app-graph-view>\n    </div>\n</div>\n","import { ItemService } from 'src/app/rete-modules/services/item.service';\nimport { Socket } from \"rete\";\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SocketController {\n  private sockets: Map<number, Socket>;\n\n  constructor(private itemService: ItemService) {\n    this.sockets = new Map();\n  }\n\n  GetSocketForId(id: number): Socket {\n    if (this.sockets.has(id)) {\n      return this.sockets.get(id);\n    }\n    else {\n      this.sockets.set(id, new Socket(this.itemService.GetItemFromId(id).name));\n      return this.sockets.get(id);\n    }\n  }\n}","import { CustomNodeData } from './../shared/custom.model';\nimport { Item } from './../shared/item.model';\nimport { ItemService } from 'src/app/rete-modules/services/item.service';\nimport { NodeService } from 'src/app/rete-modules/services/node.service';\nimport { Component, OnInit } from '@angular/core';\n\nclass NodeBrowserItem {\n  public name: string;\n  public type: string;\n  public data: any;\n  \n  public htmlName: string;\n  \n  constructor(name: string, type: string, data: any) {\n    this.name = name;\n    this.type = type;\n    this.data = data;\n\n    this.htmlName = this.name;\n  }\n\n  isCraftable(): boolean {\n    return this.type == \"item\" && this.data.craftable;\n  }\n\n  visibleItem(): Item {\n    if (this.type == \"item\") {\n      return this.data;\n    } else {\n      return this.data.item;\n    }\n  }\n\n  getId(): number {\n    if (this.type == \"item\") {\n      return this.data.id;\n    } else {\n      return this.data.id;\n    }\n  }\n};\n\n@Component({\n  selector: 'app-node-browser',\n  templateUrl: './node-browser.component.html',\n  styleUrls: ['./node-browser.component.sass']\n})\nexport class NodeBrowserComponent implements OnInit {\n  public nodeList: NodeBrowserItem[];\n\n  public filter: number = 0;\n  public searchString: string = \"\";\n\n  constructor(private itemService: ItemService, private nodeService: NodeService) {\n    this.nodeList = this.convertItemsToNodeBrowser(itemService.GetAllItems());\n\n    setInterval(() => {\n      this.updateBrowser();\n    }, 500)\n  }\n\n  ngOnInit(): void {\n  }\n  \n  onDrag(event: any, node: NodeBrowserItem) {\n    let nodeType = \"\";\n    if (this.filter == 0) {\n      nodeType = node.isCraftable() ? \"Crafter\" : \"Resource\";\n    }\n    else if (this.filter == 1) {\n      nodeType = \"Resource\";\n    }\n    else if (this.filter == 2) {\n      nodeType = \"Crafter\"\n    }\n    else if (this.filter == 3) {\n      nodeType = \"Output\"\n    } else if (this.filter == 4) {\n      nodeType = \"Custom\";\n    }\n\n    event.dataTransfer.setData(\"nodeType\", nodeType)\n\n    event.dataTransfer.setData(\"nodeId\", node.getId());\n    event.dataTransfer.effectAllowed = \"copy\";\n  }\n\n  onAllClicked() {\n    this.filter = 0;\n    this.filterItems();\n  }\n\n  onResourcesClicked() {\n    this.filter = 1;\n    this.filterItems();\n  }\n\n  onCraftableClicked() {\n    this.filter = 2;\n    this.filterItems();\n  }\n\n  onOutputClicked() {\n    this.filter = 3;\n    this.filterItems();\n  }\n\n  onCustomClicked() {\n    this.filter = 4;\n    this.filterItems();\n  }\n\n  onSearchChange() {\n    this.searchString = this.searchString.toLowerCase();\n    this.filterItems();\n  }\n\n  private filterItems() {\n    if (this.filter == 0 || this.filter == 3) {\n      this.nodeList = this.convertItemsToNodeBrowser(this.itemService.GetAllItems());\n    }\n\n    if (this.filter == 1) {\n      this.nodeList = this.convertItemsToNodeBrowser(this.itemService.GetAllNonCraftableItems());\n    }\n\n    if (this.filter == 2) {\n      this.nodeList = this.convertItemsToNodeBrowser(this.itemService.GetAllCraftableItems());\n    }\n\n    if (this.filter == 4) {\n      this.nodeList = this.convertNodesToNodeBrowser(this.nodeService.GetAllCustomNodes());\n    }\n\n    this.nodeList = this.nodeList.filter(value => {\n      let index = value.name.toLowerCase().indexOf(this.searchString);\n      if (index >= 0) {\n        value.htmlName = value.name.substring(0, index)\n          + \"<mark>\"\n          + value.name.substring(index, index + this.searchString.length)\n          + \"</mark>\"\n          + value.name.substring(index + this.searchString.length, value.name.length);\n      }\n      else {\n        value.htmlName = value.name;\n      }\n\n      return index >= 0;\n    })\n  }\n\n  private convertItemsToNodeBrowser(itemList: Item[]): NodeBrowserItem[] {\n    let nodes: NodeBrowserItem[] = [];\n\n    itemList.forEach((value) => {\n      nodes.push(new NodeBrowserItem(value.name, \"item\", value));\n    })\n\n    return nodes;\n  }\n\n  private convertNodesToNodeBrowser(nodeList: CustomNodeData[]): NodeBrowserItem[] {\n    let nodes: NodeBrowserItem[] = [];\n\n    nodeList.forEach(value => {\n      let data = {};\n      data['id'] = value.id;\n      data['item'] = this.itemService.GetItemFromId(103);\n      nodes.push(new NodeBrowserItem(value.name, \"node\", data));\n    })\n\n    return nodes;\n  }\n\n  private updateBrowser() {\n    if (this.filter == 4) {\n      this.filterItems();\n    }\n  }\n}\n","<div class=\"node-browser-wrapper module-margin\">\n    <div class=\"node-browser-button-header\">\n        <button type=\"button\" class=\"btn\" [ngClass]=\"filter == 0 ? 'btn-primary' : 'btn-secondary'\" (click)=\"onAllClicked()\">\n            All\n        </button>\n        <button type=\"button\" class=\"btn\" [ngClass]=\"filter == 1 ? 'btn-primary' : 'btn-secondary'\" (click)=\"onResourcesClicked()\">\n            Resources\n        </button>\n        <button type=\"button\" class=\"btn\" [ngClass]=\"filter == 2 ? 'btn-primary' : 'btn-secondary'\" (click)=\"onCraftableClicked()\">\n            Craftable\n        </button>\n        <button type=\"button\" class=\"btn\" [ngClass]=\"filter == 3 ? 'btn-primary' : 'btn-secondary'\" (click)=\"onOutputClicked()\">\n            Output\n        </button>\n        <button type=\"button\" class=\"btn\" [ngClass]=\"filter == 4 ? 'btn-primary' : 'btn-secondary'\" (click)=\"onCustomClicked()\">\n            Custom Nodes\n        </button>\n        <div class=\"right fill\">\n            <input type=\"search\" placeholder=\"search\" [(ngModel)]=\"searchString\" (input)=\"onSearchChange()\">\n        </div>\n    </div>\n\n    <div class=\"node-browser-grid\">\n        <div class=\"node-browser-node\" [ngClass]=\"[nodeItem.isCraftable() ? 'crafted' : 'resource'] | kebab\" *ngFor=\"let nodeItem of nodeList\" draggable=true (dragstart)=\"onDrag($event, nodeItem)\">\n            <div class=\"node-title\" innerHTML=\"{{ nodeItem.name | highlight : searchString }}\"></div>\n            <div>\n                <item-image [selectedItem]=\"nodeItem.visibleItem()\"></item-image>\n            </div>\n        </div>\n    </div>\n</div>\n","import { CustomNodeData } from './../shared/custom.model';\nimport { NodeService } from './node.service';\nimport { Injectable } from '@angular/core';\n\nvar fakeDatabase: {nodes: CustomNodeData[]} = {\n  nodes: [\n    {\n      id: 1,\n      name: \"Fake Node\",\n      inputs: [1, 2, 3],\n      outputs: {\n        5: {\n          inputRate: {\n            1: .3, 2: .8, 3: 1.2\n          },\n          createdAmount: 4\n        },\n        339: {\n          inputRate: { 2: .2 },\n          createdAmount: 1\n        },\n      },\n    },\n    {\n      id: 2,\n      name: \"Bookshelves\",\n      inputs: [338, 334, 23],\n      outputs: {\n        92: {\n          inputRate: { 338: .11, 334: .33, 23: .66 },\n          createdAmount: 1\n        }\n      },\n    },\n    {\n      id: 3,\n      name: \"NOT-INSTANTIATED\",\n      inputs: [\n        23\n      ],\n      outputs: {\n        5: {\n          inputRate: {\n            23: 1\n          },\n          createdAmount: 4\n        }\n      }\n    },\n    {\n      id: 4,\n      name: \"NOT-INSTANTIATED\",\n      inputs: [\n        1,\n        2,\n        3,\n        334\n      ],\n      outputs: {\n        92: {\n          inputRate: {\n            1: 0.19999999999999998,\n            2: 0.022222222222222223,\n            3: 0.7999999999999999,\n            334: 0.3333333333333333\n          },\n          createdAmount: 1\n        }\n      }\n    }\n  ]\n};\n\n@Injectable()\nexport class FakeNodeService extends NodeService {\n  private lastValidIndex = 0;\n\n  constructor() { \n    super()\n\n    fakeDatabase.nodes.forEach((value) => {\n      if (value.id > this.lastValidIndex) {\n        this.lastValidIndex = value.id;\n      }\n    }) \n  }\n\n  GetAllCustomNodes(): CustomNodeData[] {\n    return fakeDatabase['nodes'];\n  }\n\n  GetCustomNode(id: number): CustomNodeData {\n    return fakeDatabase.nodes.find(value => {\n      if (value.id == id) {\n        return value;\n      }\n    })\n  }\n\n  SaveCustomNode(classroom: number, group: number, data: CustomNodeData): number {\n    this.lastValidIndex++;\n\n    data.id = this.lastValidIndex;\n    fakeDatabase.nodes.push(data);\n\n    return this.lastValidIndex;\n  }\n}\n","import { Item } from '../shared/item.model';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class ItemService {\n  constructor() {\n  }\n\n  public abstract GetAllItems(): Item[];\n  public abstract GetItemFromId(id: number): Item;\n  public abstract GetAllCraftableItems(): Item[];\n  public abstract GetAllNonCraftableItems(): Item[];\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}