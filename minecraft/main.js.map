{"version":3,"sources":["./src/app/rete-modules/services/node.service.ts","./src/app/rete-modules/custom-rete.module.ts","./src/app/rete-modules/nodes/controls/resource-control/resource-control.ts","./src/app/rete-modules/nodes/controls/resource-control/resource-control.html","./src/environments/environment.ts","./src/app/rete-modules/nodes/resource-node.component.ts","./src/app/rete-modules/services/fake-item.service.ts","./src/app/rete-modules/nodes/crafter-node.component.ts","./src/app/rete-modules/shared/item-image-component/item-image.component.ts","./src/app/rete-modules/shared/item-image-component/item-image.component.html","./src/app/rete-modules/grid/grid.component.ts","./src/app/rete-modules/grid/grid.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/rete-modules/nodes/custom-node.component.ts","./src/app/rete-modules/shared/highlight-text.pipe.ts","./src/app/app.module.ts","./src/app/output/output.module.ts","./src/app/rete-modules/nodes/output-node.component.ts","./src/app/rete-modules/shared/item.model.ts","./src/app/rete-modules/shared/connection.model.ts","./src/app/rete-modules/shared/node-tree.ts","./src/app/rete-modules/nodes/base-node/base-node.component.ts","./src/app/rete-modules/nodes/base-node/base-node.component.html","./src/app/output/output-container/output-container.component.ts","./src/app/output/output-container/output-container.component.html","./src/app/rete-modules/nodes/sockets.ts","./src/app/rete-modules/node-browser/node-browser.component.ts","./src/app/rete-modules/node-browser/node-browser.component.html","./src/app/rete-modules/services/fake-node.service.ts","./src/app/rete-modules/services/item.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { CustomNodeData } from './../shared/custom.model';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class NodeService {\n  constructor() {\n  }\n\n  public abstract GetAllCustomNodes(): CustomNodeData[];\n  public abstract GetCustomNode(id: number): CustomNodeData;\n\n  public abstract SaveCustomNode(classroom: number, group: number, node: CustomNodeData);\n}\n","import { FakeNodeService } from './services/fake-node.service';\nimport { HighlightSearchPipe } from './shared/highlight-text.pipe';\nimport { ItemImageComponent } from './shared/item-image-component/item-image.component';\nimport { FakeItemService } from './services/fake-item.service';\nimport { ItemService } from './services/item.service';\nimport { ResourceComponent } from './nodes/controls/resource-control/resource-control';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GridComponent } from './grid/grid.component';\nimport { ReteModule } from 'rete-angular-render-plugin';\nimport { BaseNodeComponent } from './nodes/base-node/base-node.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NodeBrowserComponent } from './node-browser/node-browser.component';\nimport { NodeService } from './services/node.service';\n\n@NgModule({\n  declarations: [\n    GridComponent,\n    BaseNodeComponent,\n    ResourceComponent,\n    ItemImageComponent,\n    NodeBrowserComponent,\n    HighlightSearchPipe,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ReteModule,\n  ],\n  providers: [{ provide: ItemService, useClass: FakeItemService}, {provide: NodeService, useClass: FakeNodeService } ],\n  exports: [GridComponent, NodeBrowserComponent, HighlightSearchPipe],\n  entryComponents: [ResourceComponent,\n    BaseNodeComponent\n  ]\n})\nexport class CustomReteModule { }\n","import { ItemImageComponent } from './../../../shared/item-image-component/item-image.component';\nimport { ItemService } from './../../../services/item.service';\nimport { Item } from './../../../shared/item.model';\n\nimport { Component, Input, Type, ViewChild } from '@angular/core';\nimport { Control, Node, NodeEditor } from 'rete';\nimport { AngularControl } from 'rete-angular-render-plugin';\n\n@Component({\n  templateUrl: \"./resource-control.html\",\n  styleUrls: [\"./resource-control.sass\",]\n})\nexport class ResourceComponent {\n  @Input() readonly!: boolean;\n  @Input() mounted!: Function;\n  @Input() changeItem!: Function;\n  @Input() changeRate!: Function;\n  @Input() click!: Function;\n  @Input() mouseDown!: Function;\n  @Input() mouseUp!: Function;\n  \n  @ViewChild(ItemImageComponent) itemImage: ItemImageComponent;\n  \n  public selectedItem!: Item;\n  public perHour!: number;\n  public perHourString: string;\n  public background: any;\n  \n  constructor(private itemService: ItemService) {\n    this.background = {};\n  }\n  \n  ngOnInit() {\n    this.mounted();\n  }\n\n  onChangeRate() {\n    let num = parseFloat(this.perHourString);\n\n    this.perHour = num;\n    this.changeRate(this.perHour);\n  }\n}\n\nexport class ResourceControl extends Control implements AngularControl {\n  component: Type<ResourceComponent>\n  props: { [key: string]: unknown }\n  \n  constructor(public emitter: NodeEditor, public key) {\n    super(key); \n  \n    this.component = ResourceComponent;\n    this.props = {\n      selectedItem: Item,\n      readonly: false,\n      perHour: 1,\n      perHourString: \"1\",\n      changeRate: v => this.onChangeRate(v),\n      mounted: () => {\n        this.setInitialItem();\n      },\n      click: () => this.onClick(),\n      mouseDown: () => this.onMouseDown(),\n      mouseUp: () => this.onMouseUp(),\n    }\n  }\n\n  onChangeRate(rate: number) {\n    this.setRate(rate);\n\n    this.emitter.trigger('process');\n  }\n\n  setRate(rate: number) {\n    this.props.perHour = rate;\n\n    let str = rate == Infinity ? \"-\" : rate.toString();\n    if (str.indexOf('.') !== -1) {\n      str = str.slice(0, str.indexOf('.') + 3);\n    }\n    this.props.perHourString = str;\n\n    this.putData('perHour', rate);\n  }\n\n  private setInitialItem() {\n    let item = this.getData('resource') as Item;\n    this.props.selectedItem = item;\n    this.putData(this.key, item);\n    this.putData('changed', true);\n\n    this.putData('amount', item.craftable ? item.recipe.createdAmount : 1)\n    this.putData('perHour', this.props.perHour);\n  }\n\n  onClick() {\n    this.emitter.selected.clear();\n    this.emitter.nodes.map(n => n.update());\n  }\n\n  onMouseDown() {\n    this.emitter.selected.clear();\n    this.emitter.nodes.map(n => n.update());\n  }\n\n  onMouseUp() {\n    this.emitter.selected.clear();\n    this.emitter.nodes.map(n => n.update());\n  }\n}","<div class=\"resource-control\">\n\n    <item-image [selectedItem]=\"selectedItem\"></item-image>\n    \n    <!-- <div (mousedown)=\"this.mouseDown()\" (mouseup)=\"this.mouseUp()\">\n        <select [(ngModel)]=\"selectedItem\" (change)=\"onChange()\">\n            <option *ngFor=\"let value of items\" [ngValue]=\"value\" >{{value.id}} - {{value.name}}</option>\n        </select>\n    </div> -->\n\n    <div>\n        <input type=\"text\" oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\" \n        [(ngModel)]=\"perHourString\"\n        [readonly]=\"readonly\" \n        placeholder=\"1\"  \n        (change)=\"onChangeRate()\"\n        (dblclick)=\"$event.stopPropagation()\" \n        (mousedown)=\"this.mouseDown()\" \n        (mouseup)=\"this.mouseUp()\" >\n        / hour\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { BaseNodeComponent } from './base-node/base-node.component';\nimport { Connection } from './../shared/connection.model';\nimport { Component, Output, Input } from 'rete';\nimport { SocketController } from './sockets';\nimport { ResourceControl } from './controls/resource-control/resource-control';\nimport { AngularComponent } from 'rete-angular-render-plugin';\n\nexport class ResourceNode extends Component {\n\n  constructor(private socketController: SocketController) {\n    super('Resource');\n\n  }\n\n  builder(node) {\n    var control = new ResourceControl(this.editor, 'resource');\n    node.addControl(control);\n    node.data['type'] = 'output';\n    node.data['criticalPath'] = false;\n    \n    node.data.name = \"Resource\";\n\n    return node;\n  }\n\n  worker(node, inputs, outputs) {\n    var node_ref = this.editor.nodes.find(n => n.id === node.id);\n\n    if (node.data.changed === true)\n    {\n      node_ref.getConnections().forEach(element => {\n        this.editor.removeConnection(element);\n      });\n      \n      node_ref.outputs.clear();\n      var item = node.data.resource;\n\n      var output = new Output(\"resource\", item.name, this.socketController.GetSocketForId(item.id));\n      node_ref.addOutput(output);\n      \n      this.editor.trigger('nodeselected');\n\n      node.data.changed = false;\n    }\n\n    // console.log(\"Sending data\");\n    // console.log(node);\n    let datagram = new Connection(node.data.resource, node.data.amount, node.data.perHour, node.data.criticalPath);\n    outputs['resource'] = datagram;\n  }\n}","import { Injectable } from '@angular/core';\nimport { ItemService } from 'src/app/rete-modules/services/item.service';\nimport { Item } from './../shared/item.model';\n\nvar fakeDatabase = {\n  items: [\n    {\n      id: 1,\n      name: \"Stone\",\n      index: [0, 0],\n      craftable: false,\n    },\n    {\n      id: 2,\n      name: \"Grass\",\n      index: [1, 0],\n      craftable: false,\n    },\n    {\n      id: 3,\n      name: \"Dirt\",\n      index: [2, 0],\n      craftable: false,\n    },\n    {\n      id: 4,\n      name: \"Cobblestone\",\n      index: [3, 0],\n      craftable: false,\n    },\n    {\n      id: 5,\n      name: \"Planks\",\n      index: [4, 0],\n      craftable: true,\n      recipe: {\n        createdAmount: 4,\n        ingredients: [\n          {\n            id: 23,\n            amount: 1\n          }\n        ],\n      },\n    },\n    {\n      id: 23,\n      name: \"Logs\",\n      index: [6, 1],\n      craftable: false,\n    },\n    {\n      id: 92,\n      name: \"Bookshelf\",\n      index: [11, 5],\n      craftable: true,\n      recipe: {\n        createdAmount: 1,\n        ingredients: [\n          {\n            id: 340,\n            amount: 3\n          },\n          {\n            id: 5,\n            amount: 6\n          }\n        ],\n      },\n    },\n    {\n      id: 103,\n      name: \"Crafting Bench\",\n      index: [6, 6],\n      craftable: true,\n      recipe: {\n        createdAmount: 1,\n        ingredients: [\n          {\n            id: 5,\n            amount: 4\n          },\n        ],\n      },\n    },\n    {\n      id: 334,\n      name: \"Leather\",\n      index: [14, 18],\n      craftable: false,\n    },\n    {\n      id: 338,\n      name: \"Sugar Cane\",\n      index: [2, 19],\n      craftable: false,\n    },\n    {\n      id: 339,\n      name: \"Paper\",\n      index: [3, 19],\n      craftable: true,\n      recipe: {\n        createdAmount: 3,\n        ingredients: [\n          {\n            id: 338,\n            amount: 3\n          },\n        ],\n      },\n    },\n    {\n      id: 340,\n      name: \"Book\",\n      index: [4, 19],\n      craftable: true,\n      recipe: {\n        createdAmount: 1,\n        ingredients: [\n          {\n            id: 334,\n            amount: 1\n          },\n          {\n            id: 339,\n            amount: 3\n          }\n        ],\n      },\n    },\n  ]\n};\n\n@Injectable()\nexport class FakeItemService extends ItemService {\n  constructor() { \n    super()\n  }\n\n  GetAllItems(): Item[] {\n    return fakeDatabase[\"items\"] as Item[];\n  }\n\n  GetItemFromId(id: number): Item {\n    return fakeDatabase[\"items\"].find((value) => {\n      if (value.id == id) { return value as Item};\n    })\n  }\n\n  GetAllCraftableItems(): Item[] {\n    return fakeDatabase[\"items\"].filter( value => {\n      return value.craftable;\n    })\n  }\n\n  GetAllNonCraftableItems(): Item[] {\n    return fakeDatabase[\"items\"].filter(value => {\n      return !value.craftable;\n    })\n  }\n}\n","import { Item } from './../shared/item.model';\nimport { Connection } from './../shared/connection.model';\nimport { SocketController } from './sockets';\nimport { ItemService } from '../services/item.service';\n\nimport { Component, Output, Input, Socket, Node } from 'rete';\nimport { ResourceControl } from './controls/resource-control/resource-control';\n\nimport { Recipe } from '../shared/recipe.model'\n\nexport class CrafterNode extends Component {\n\n  constructor(private socketController: SocketController, private itemService: ItemService) {\n    super('Crafter');\n\n    this.data['criticalPath'] = false;\n  }\n\n  builder(node) {\n    var control = new ResourceControl(this.editor, 'resource');\n    node.addControl(control);\n    node.data.name = \"Crafter\";\n    node.data.criticalPath = false;\n\n    return node;\n  }\n\n  worker(node, inputs, outputs) {\n\n    var node_ref = this.editor.nodes.find(n => n.id === node.id);\n\n    if (node.data.changed === true)\n    {\n      node_ref.getConnections().forEach(element => {\n        this.editor.removeConnection(element);\n      });\n      \n      node_ref.outputs.clear();\n      var item: Item = node.data.resource;\n      var output = new Output(\"resource\", item.name  + \" x \" + item.recipe.createdAmount, this.socketController.GetSocketForId(item.id));\n      node_ref.addOutput(output);\n\n      node_ref.inputs.clear();\n      item.recipe.ingredients.forEach(ingredient => {\n        var item = this.itemService.GetItemFromId(ingredient.id);\n        var input = new Input(\"\" + item.id, item.name + \" x \" + ingredient.amount , this.socketController.GetSocketForId(item.id));\n        node_ref.addInput(input);\n      });\n\n      this.editor.trigger('nodeselected');\n\n      node.data.changed = false;\n    }\n\n    var perHourBottleneck = Infinity;\n    var craftedItem = node.data.resource;\n\n    let recipe: Recipe = craftedItem.recipe;\n    recipe.ingredients.forEach(ingredient => {\n      let input = inputs[ingredient.id];\n\n      if (input && input[0]) {\n        let itemBottleneck = input[0].amount / ingredient.amount;\n        itemBottleneck *= input[0].perHour;\n\n        if (itemBottleneck < perHourBottleneck) {\n          perHourBottleneck = itemBottleneck;\n        }\n      }\n    })\n\n    let control = <ResourceControl>node_ref.controls.get('resource');\n    control.props.readonly = true;\n    control.setRate(perHourBottleneck);\n\n    var datagram = new Connection(node.data.resource, node.data.amount, node.data.perHour, node.data.criticalPath);\n    outputs['resource'] = datagram;\n\n    // for (var recipeIndex in craftedItem.recipe) {\n    //   let recipe: Recipe = craftedItem.recipe[recipeIndex];\n    //   let input = inputs[recipe.id];\n\n    //   // Input found\n    //   if (input && input[0]) {\n    //     let itemBottleneck = input[0].amount / recipe.amount;\n    //     itemBottleneck *= input[0].perHour;\n\n    //     if (itemBottleneck < perHourBottleneck) {\n    //       perHourBottleneck = itemBottleneck;\n    //     }\n    //   }\n    // }\n  }\n}","import { Item } from './../item.model';\nimport { Component, Input, Output } from \"@angular/core\";\n\n// Item component that displays and updates the item visible in the image.\n// Takes a Item as an input and will update the visual when updateVisual is called\n@Component({\n  selector: 'item-image',\n  templateUrl: 'item-image.component.html',\n  styleUrls: ['item-image.component.sass']\n})\nexport class ItemImageComponent {\n  @Input() selectedItem: Item;\n\n  public background: any;\n\n  constructor() {\n    this.background = {};\n  }\n\n  ngOnInit() {\n    this.updateVisual( this.selectedItem);\n  }\n\n  updateVisual( item: Item ) {\n    this.background['background-position-x'] = -64 * item.index[0] + \"px\";\n    this.background['background-position-y'] =  -64 * item.index[1] + \"px\";\n  }\n}","<div class=\"center pixelated\">\n    <img class=\"item\" src=\"assets/images/transparent_32x32.png\" [ngStyle]=\"background\" (dragstart)=\"false\">\n</div>","import { CustomNode } from './../nodes/custom-node.component';\nimport { Item } from './../shared/item.model';\nimport { BaseNodeComponent } from './../nodes/base-node/base-node.component';\nimport { NodeTree } from './../shared/node-tree';\nimport { OutputNode } from './../nodes/output-node.component';\nimport { ItemService } from './../services/item.service';\nimport { CrafterNode } from './../nodes/crafter-node.component';\nimport { SocketController } from './../nodes/sockets';\nimport { Component, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\n\nimport { Component as ReteComponent, NodeEditor, Engine } from 'rete';\nimport { Transform } from 'rete/types/view/area';\nimport ConnectionPlugin from 'rete-connection-plugin';\n\nimport { ResourceNode } from './../nodes/resource-node.component';\nimport { AngularRenderPlugin, ElementProps } from 'rete-angular-render-plugin';\nimport { ThrowStmt } from '@angular/compiler';\nimport { NodeService } from '../services/node.service';\n\n@Component({\n  selector: 'app-grid',\n  templateUrl: './grid.component.html',\n  styleUrls: ['./grid.component.sass']\n})\nexport class GridComponent implements AfterViewInit {\n  \n  @ViewChild('nodeEditor', { static: true }) private el: ElementRef;\n  private editor: NodeEditor = null;\n  private engine: Engine;\n  private components: { [type: string]: ReteComponent };\n\n  private nodeTree: NodeTree;\n\n  private completePath: boolean = false;\n\n  constructor(private socketController: SocketController, private itemService: ItemService, private nodeService: NodeService) { \n  }\n\n  async ngAfterViewInit() {\n    const container = this.el.nativeElement;\n    \n    this.components = {};\n\n    this.components['Resource'] = new ResourceNode(this.socketController);\n    this.components['Crafter'] = new CrafterNode(this.socketController, this.itemService);\n    this.components['Output'] = new OutputNode(this.socketController);\n    this.components['Custom'] = new CustomNode(this.socketController, this.itemService, this.nodeService)\n\n    this.editor = new NodeEditor('minecraft-web-app@0.1.0', container);\n    this.editor.use(ConnectionPlugin);\n    this.editor.use(AngularRenderPlugin, {component: BaseNodeComponent});\n\n    this.engine = new Engine('minecraft-web-app@0.1.0');\n\n    this.nodeTree = new NodeTree();\n\n    for (const componentKey in this.components) {\n      let component = this.components[componentKey];\n\n      this.editor.register(component);\n      this.engine.register(component);\n    }\n\n    this.createNode(\"Resource\", 1, 0, -125);\n    this.createNode(\"Crafter\", 5, 400, -125);\n    this.createNode(\"Output\", 340, 800, -125);\n    this.createNode(\"Custom\", 1, 0, 200);\n    this.createNode(\"Custom\", 2, 600, 200);\n\n    this.editor.on(['nodecreated'], (async () => {\n      await this.engine.abort();\n      await this.engine.process(this.editor.toJSON());\n    }) as any);\n\n    this.editor.on(['process', 'connectioncreated', 'connectionremoved', 'noderemoved'], async () => {\n      await this.engine.abort();\n      await this.engine.process(this.editor.toJSON());\n      \n      // console.log(\"Updating critical path\")\n      this.nodeTree.parseFromJson(this.editor.toJSON());\n      this.updateCriticalPath();\n      // console.log(\"Critical path updated\")\n\n      // await this.engine.abort();\n      // await this.engine.process(this.editor.toJSON());\n    });\n\n    this.editor.on('click', () => {\n      this.editor.selected.clear();\n      this.editor.nodes.map(n => n.update());\n    })\n\n    this.engine.on('error', (message) => {\n      console.log(message);\n    });\n    \n    this.editor.view.resize();\n    this.editor.trigger('process');\n  }\n\n  updateCriticalPath() {\n    let criticalPath = this.nodeTree.getCriticalPath();\n\n    this.completePath = criticalPath.length > 0;\n    this.editor.nodes.forEach(value => {\n      value.data.criticalPath = false;\n    })\n\n    criticalPath.forEach((value: any, index, array) => {\n      let node_ref = this.editor.nodes.find(n => n.id === value.id);\n      node_ref.data.criticalPath = true;\n    });\n  }\n  \n  dragOver(event) {\n    event.preventDefault();\n\n    event.dataTransfer.dropEffect = \"copy\";\n  }\n\n  onDrop(event) {\n    event.preventDefault();\n\n    const type = event.dataTransfer.getData(\"nodeType\");\n    const id = event.dataTransfer.getData(\"nodeId\") as number;\n    this.createNode(type, id, event.clientX, event.clientY, true);\n  }\n\n  deleteNode() {\n    this.editor.selected.list.forEach(value => {\n      this.editor.removeNode(value);\n    })\n\n    this.editor.selected.list = [];\n  }\n\n  anyNodeSelected(): boolean {\n    return this.editor != null && this.editor.selected.list.length > 0;\n  }\n\n  scaleToFit() {\n    let editorBounds: [number, number] = [this.editor.view.area.container.clientWidth, this.editor.view.area.container.clientHeight];\n    \n    let firstPass = true;\n    let topLeftBounds: [number, number] = [0, 0]; // Towards the negative\n    let bottomRightBounds: [number, number] = [0, 0]; // Towards the positive\n    \n    this.editor.nodes.forEach(value => {\n      if (firstPass || topLeftBounds[0] > value.position[0]) {\n        topLeftBounds[0] = value.position[0];\n      }\n      if (firstPass || topLeftBounds[1] > value.position[1]) {\n        topLeftBounds[1] = value.position[1];\n      }\n      \n      if (firstPass || bottomRightBounds[0] < value.position[0] + 200) {\n        bottomRightBounds[0] = value.position[0] + 200;\n      }\n      if (firstPass || bottomRightBounds[1] < value.position[1] + 250) {\n        bottomRightBounds[1] = value.position[1] + 250\n      };\n      \n      firstPass = false;\n    })\n    \n    let nodeBounds: [number, number] = [bottomRightBounds[0] - topLeftBounds[0] + 50, bottomRightBounds[1] - topLeftBounds[1] + 50];\n    let nodeCenter: [number, number] = [topLeftBounds[0] + nodeBounds[0] * .5, topLeftBounds[1] + nodeBounds[1] * .5];\n    \n    let transform: Transform = {k: 1, x: 0, y: 0}; \n    \n    // Calculate the scale\n    let sizeDifference = [editorBounds[0] / nodeBounds[0], editorBounds[1] / nodeBounds[1]];\n    let widthLonger = sizeDifference[0] < sizeDifference[1];\n    if (widthLonger) {\n      transform.k = sizeDifference[0];\n      \n    }\n    else {\n      transform.k = sizeDifference[1];\n    }\n    \n    let editorCenter: [number, number] = [editorBounds[0] * .5, editorBounds[1] * .5];\n    let centerDifference: [number, number] = [(nodeCenter[0] - 25) * transform.k - editorCenter[0], (nodeCenter[1] - 25) * transform.k - editorCenter[1]];\n    \n    transform.x = -centerDifference[0];\n    transform.y = -centerDifference[1];\n    \n    this.editor.view.area.transform = transform;\n    this.editor.view.area.update();\n  }\n\n  canCollapse() {\n    return this.completePath ? \"\" : \"disabled\";\n  }\n\n  collapseToNode() {\n    let nodeOutputs = this.nodeTree.getOutputs();\n\n    // Build up a structure of output node ids and the resources that contribute to them\n    let outputResource: { [outputId: number]: {[resourceId: number]: number} } = {};\n    nodeOutputs.forEach((value, index) => {\n      let searchNodes: any[] = [value];\n\n      let outputNode = value;\n      while (searchNodes.length > 0) {\n        let currentNode = searchNodes.pop();\n\n        currentNode.inputs.forEach(value => {\n\n\n          if (value.node.name == \"Resource\") {\n            if (!outputResource[outputNode.node.id]) {\n              outputResource[outputNode.node.id] = {};\n            }\n            outputResource[outputNode.node.id][value.node.id] = Infinity;\n\n          } else {\n            searchNodes.push(value);\n          }\n        });\n      }\n    })\n\n    // For all of the output nodes that need to have rates calculated\n    for (const outputIndex in outputResource) {\n      let outputResources = outputResource[outputIndex];\n\n      // For each resource node associated with that output\n      for (const resourceIndex in outputResources) {\n        let node = this.editor.nodes.find(n => n.id === parseInt(resourceIndex));\n\n        // Set default input rate to 1\n        outputResources[resourceIndex] = 1;\n\n\n\n        console.log(node)\n      }\n    }\n  }\n  \n  private async createNode(nodeType: string, nodeId: number, x: number, y: number, fromMouse: boolean = false) {\n    if (this.components.hasOwnProperty(nodeType)) {\n      let component;\n      if (nodeType == \"Custom\") {\n        component = await this.components[nodeType].createNode({ custom: nodeId });\n      } else {\n        component = await this.components[nodeType].createNode({ resource: this.itemService.GetItemFromId(nodeId) });\n      }\n\n\n      let position: [number, number] = [0, 0];\n      if (fromMouse) {\n        let transform = this.editor.view.area.transform;\n        position = [(x - transform.x - 75) / transform.k, (y - transform.y - 125) / transform.k] as [number, number];\n      }\n      else {\n        position = [x, y];\n      }\n\n      component.position = position;\n      this.editor.addNode(component);\n    }\n  }\n}\n","<div class=\"grid-wrapper module-margin\" (dragover)=\"dragOver($event)\" (drop)=\"onDrop($event)\">\n    <div #nodeEditor class=\"node-editor\"></div>\n    <div id=\"delete-container\" (mouseup)=\"deleteNode()\">\n        <label class=\"btn\" [ngClass]=\"anyNodeSelected() ? 'btn-danger' : ['btn-outline-danger', 'disabled']\" [ngClass]=\"\">\n            <p>Delete</p>\n        </label>\n    </div>\n    <div id=\"scale-container\" (mouseup)=\"scaleToFit()\">\n        <label class=\"btn btn-info\">\n            <p>Scale To Fit</p>\n        </label>\n    </div>\n    <div id=\"collapse-container\">\n        <label class=\"btn btn-info\" [ngClass]=\"canCollapse()\" (mouseup)=\"collapseToNode()\">\n            <p>Collapse To Node</p>\n        </label>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'Supplemental Application';\n\n  onClick(event) {\n    console.log(\"Clicked: \" + event);\n  }\n}\n","<div id=\"fullsite\" class=\"fill-width fill-height\">\n    <div id=\"workspace\">\n        <app-grid></app-grid>\n        <app-node-browser></app-node-browser>\n    </div>\n    <div id=\"resultspace\">\n        <app-output-container></app-output-container>\n    </div>\n</div>","import { CustomNodeData } from './../shared/custom.model';\nimport { Item } from './../shared/item.model';\nimport { Connection } from './../shared/connection.model';\nimport { SocketController } from './sockets';\nimport { ItemService } from '../services/item.service';\nimport { NodeService } from '../services/node.service';\nimport { Component, Output, Input, Socket, Node } from 'rete';\nimport { ResourceControl } from './controls/resource-control/resource-control';\nimport { throwError } from 'rxjs';\n\nexport class CustomNode extends Component {\n\n  constructor(private socketController: SocketController, private itemService: ItemService, private nodeService: NodeService) {\n    super('Custom');\n  }\n\n  builder(node: Node): any {\n    // Visual for custom node\n    node.data.resource = this.itemService.GetItemFromId(103);\n\n    var control = new ResourceControl(this.editor, 'resource');\n    control.props.selectedItem = node.data.resource;\n    control.props.readonly = true;\n    node.addControl(control);\n\n    let customization: CustomNodeData = this.nodeService.GetCustomNode(node.data['custom'] as number);\n    if (!customization) {\n      throw new Error(\"Failed to get Custom Node Data for ID: \" + node.data['custom']);\n    }\n    node.data.name = customization.name;\n    node.data['customization'] = customization;\n    \n    var custom: CustomNodeData = node.data.customization as any;\n    custom.inputs.forEach(id => {\n      var item = this.itemService.GetItemFromId(id);\n      var input = new Input(\"\" + item.id, item.name, this.socketController.GetSocketForId(item.id));\n      node.addInput(input);\n    });\n\n    for (let outputIndex in custom.outputs) {\n      let item = this.itemService.GetItemFromId(parseInt(outputIndex));\n      var output = new Output(\"\" + item.id, item.name, this.socketController.GetSocketForId(item.id));\n      node.addOutput(output);\n\n    }\n\n    return node;\n  }\n\n  worker(node, inputs, outputs) {\n\n    let datagramOutputs: {[index: number]: Connection} = {};\n    let customData: CustomNodeData = node.data.customization;\n\n    // For each output calculate the critical path based on their inputs\n    for (let outputId in customData.outputs) {\n      let missingInput = false;\n      let perHour = Infinity;\n      let inputRates = customData.outputs[outputId];\n\n      for (let inputId in inputRates) {\n        let inputData: Connection = inputs[inputId][0];\n        \n        if (inputData && !missingInput) {\n          let possiblePerHour = inputRates[inputId] * inputData.perHour * inputData.amount;\n          if (possiblePerHour < perHour) {\n            perHour = possiblePerHour;\n          }\n        } else {\n          perHour = Infinity;\n          missingInput = true;\n        }\n      }\n\n      let item: Item = this.itemService.GetItemFromId(parseInt(outputId));\n      let datagram = new Connection(item, 1, perHour, node.data.criticalPath);\n\n      datagramOutputs[outputId] = datagram;\n    }\n\n    // Find the smallest critical path time for the global critical path\n    let smallestPerHour: {index: any, perHour: number} = {index: 0, perHour: Infinity};\n    for (let outputIndex in datagramOutputs) {\n      let datagram = datagramOutputs[outputIndex];\n      if (smallestPerHour.perHour > datagram.perHour) {\n        smallestPerHour.index = outputIndex;\n        smallestPerHour.perHour = datagram.perHour;\n      }\n\n      outputs[outputIndex] = datagramOutputs[outputIndex];\n    }\n\n    var node_ref = this.editor.nodes.find(value => { return value.id == node.id });\n    let control = <ResourceControl>node_ref.controls.get('resource');\n    control.setRate(smallestPerHour.perHour);\n  }\n}","// Reference\n// https://stackoverflow.com/a/44962110\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'highlight'\n})\nexport class HighlightSearchPipe implements PipeTransform {\n\n  transform(value: any, args: any): any {\n    if (!args) {return value;}\n    var re = new RegExp(args, 'gi'); //'gi' for case insensitive and can use 'g' if you want the search to be case sensitive.\n    return value.replace(re, \"<mark class='highlight'>$&</mark>\");\n  }\n}","import { OutputModule } from './output/output.module';\nimport { NodeBrowserComponent } from './rete-modules/node-browser/node-browser.component';\nimport { SocketController } from './rete-modules/nodes/sockets';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { CustomReteModule } from './rete-modules/custom-rete.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CustomReteModule,\n    OutputModule,\n    NgbModule\n  ],\n  providers: [SocketController],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OutputContainerComponent } from './output-container/output-container.component';\n\n\n\n@NgModule({\n  declarations: [OutputContainerComponent],\n  imports: [\n    CommonModule,\n  ],\n  exports: [OutputContainerComponent,\n  ],\n})\nexport class OutputModule { }\n","import { BaseNodeComponent } from './base-node/base-node.component';\nimport { Component, Output, Input } from 'rete';\nimport { SocketController } from './sockets';\nimport { ResourceControl } from './controls/resource-control/resource-control';\n\nexport class OutputNode extends Component {\n\n  constructor(private socketController: SocketController) {\n    super('Output');\n  }\n\n  builder(node) {\n    var control = new ResourceControl(this.editor, 'resource');\n    control.props.readonly = true;\n    node.addControl(control);\n\n    node.data.name = \"Output\";\n    node.data.criticalPath = false;\n\n    return node;\n  }\n\n  worker(node, inputs, outputs) {\n\n    var node_ref = this.editor.nodes.find(n => n.id === node.id);\n\n    if (node.data.changed === true)\n    {\n      node_ref.getConnections().forEach(element => {\n        this.editor.removeConnection(element);\n      });\n      \n      node_ref.inputs.clear();\n      var item = node.data.resource;\n\n      var input = new Input(\"resource\", item.name, this.socketController.GetSocketForId(item.id));\n      node_ref.addInput(input);\n      \n      this.editor.trigger('nodeselected');\n\n      node.data.changed = false;\n    }\n\n    var perHourBottleneck = Infinity;\n\n    if (inputs && inputs['resource'] && inputs['resource'][0]) {\n      // console.log(inputs['resource'][0]);\n      // if (inputs['resource'][0].criticalPath == node.data.criticalPath) {\n        perHourBottleneck = inputs['resource'][0].perHour * inputs['resource'][0].amount;\n      // }\n    }\n\n    let control = <ResourceControl>node_ref.controls.get('resource');\n    control.props.readonly = true;\n    control.setRate(perHourBottleneck);\n  }\n}","import { Recipe } from './recipe.model';\n\nexport class Item {\n  public id!: number;\n  public name!: string;\n  public index: any;\n  public craftable: boolean;\n  public createdAmount?: number;\n  public recipe?: Recipe;\n\n  constructor(id: number, name: string) {\n    this.id = id;\n    this.name = name;\n  }\n}","import { Item } from './item.model';\n\nexport class Connection {\n  public item!: Item;\n  public amount!: number;\n  public perHour!: number;\n  public onCriticalPath!: boolean\n\n  constructor(item: Item, amount: number, perHour: number, onCriticalPath: boolean) {\n    this.item = item;\n    this.amount = amount;\n    this.perHour = perHour;\n    this.onCriticalPath = onCriticalPath;\n  }\n}","class TreeItem {\n  public node: any;\n  public inputs: any[];\n  public outputs: any[];\n\n  constructor(node: any) {\n    this.node = node;\n\n    this.inputs = [];\n    this.outputs = [];\n  }\n\n  getNodeId(): number {\n    return this.node['id'];\n  }\n\n  getNodeName(): string {\n    return this.node['name'];\n  }\n\n  getNodeData(): object {\n    return this.node['data'];\n  }\n\n  getNodeResourceId(): number {\n    return this.getNodeData()['resource'].id;\n  }\n}\n\nexport class NodeTree {\n  public outputNodes: TreeItem[] = [];\n  public criticalPath: any[] = [];\n\n  private allConnectedNodes = []; \n\n  parseFromJson(json: object) {\n    this.outputNodes = [];\n    this.allConnectedNodes = json['nodes'];\n\n    let nodes: object[] = [];\n    // Start with finding all of the output nodes\n    for (const nodeIndex in json['nodes']) {\n      const node = json['nodes'][nodeIndex];\n\n      if (node['name'] === \"Output\") {\n        nodes.push(node);\n      }\n    }\n\n    nodes.forEach((value, index, array) => {\n      this.outputNodes.push(this.findOrCreate(value));\n    });\n\n    let searchStack: TreeItem[] = [];\n    this.outputNodes.forEach((treeNode, index, array) => {\n      searchStack.push(treeNode);\n    });\n    \n    while (searchStack.length > 0) {\n      const currentNode: TreeItem = searchStack.pop();\n\n      for (const inputIndex in currentNode.node.inputs) {\n        const input = currentNode.node.inputs[inputIndex];\n\n        if (input['connections'] && input['connections'].length > 0) {\n          let newNode = this.allConnectedNodes[input['connections'][0]['node']];\n          searchStack.push(this.addNode(newNode, currentNode));\n        }\n      }\n    }\n\n    this.calculateCriticalPath();\n  }\n\n  getCriticalPath(): any[] {\n    return this.criticalPath;\n  }\n\n  getOutputs() {\n    return this.outputNodes;\n  }\n\n  private calculateCriticalPath() {\n    this.criticalPath = [];\n\n    let currentNode: TreeItem = null;\n    this.outputNodes.forEach((value, index, array) => {\n      if (currentNode == null) {\n        currentNode = value;\n      }\n      else if (currentNode.getNodeData()['perHour'] > value.getNodeData()['perHour']) {\n        currentNode = value;\n      }\n    });\n\n    if (currentNode === null) {\n      return;\n    }\n    if (currentNode.inputs.length === 0 || currentNode.getNodeData()['perHour'] === Infinity) {\n      return;\n    }\n\n    let nextNode = currentNode;\n    this.criticalPath.push(nextNode.node);\n    while (nextNode.getNodeName() !== 'Resource') {\n      currentNode = null;\n      let duplicates = [];\n\n      // Custom critical path nodes\n      if (nextNode.getNodeName() == \"Custom\") {\n        let smallestOutputIndex = null;\n        let duplicateOutputIndexes = [];\n\n        // Get the critical outputs\n        for (let outputIndex in nextNode.outputs) {\n          let output = nextNode.outputs[outputIndex];\n\n          if (smallestOutputIndex == null) {\n            smallestOutputIndex = outputIndex;\n          } else if (nextNode.outputs[smallestOutputIndex].getNodeData()['perHour'] == output.getNodeData()['perHour']) {\n            console.log(nextNode.outputs[outputIndex].getNodeData()['perHour'] + \" == \" + output.getNodeData()['perHour'])\n            duplicateOutputIndexes.push(outputIndex);\n          } else if (nextNode.outputs[smallestOutputIndex].getNodeData()['perHour'] > output.getNodeData()['perHour']) {\n            smallestOutputIndex = outputIndex;\n            duplicateOutputIndexes = [];\n          }\n        }\n\n        \n        // Find the smallest input from the critical outputs\n        let smallestInputIndex = null;\n        let smallestInputValue = Infinity;\n        let duplicateInputIndexs = [];\n        \n        let ingredients = nextNode.getNodeData()['customization'].outputs;\n        duplicateOutputIndexes.push(smallestOutputIndex);\n        duplicateOutputIndexes.forEach(outputIndex => {\n          let output = nextNode.outputs[outputIndex];\n          \n          let ingredientList = ingredients[output.getNodeResourceId()];\n          for (let ingredientIndex in ingredientList) {\n            let tempNode = nextNode.inputs.find(inputNode => inputNode.getNodeResourceId() == ingredientIndex);\n            let inputPerHour = ingredientList[ingredientIndex] * tempNode.getNodeData()['perHour'];\n            \n            if (smallestInputIndex == null) {\n              smallestInputIndex = ingredientIndex;\n              smallestInputValue = inputPerHour;\n            } else if (smallestInputValue == inputPerHour) {\n              duplicateInputIndexs.push(ingredientIndex);\n            } else if (smallestInputValue > inputPerHour) {\n              smallestInputIndex = ingredientIndex;\n              smallestInputValue = inputPerHour;\n              duplicateInputIndexs = [];\n            }\n          }\n\n        });\n        \n        duplicateInputIndexs.push(smallestInputIndex);\n        duplicateInputIndexs.forEach(value => {\n          // Find the node with the input id specified\n          let tempNode = nextNode.inputs.find(inputNode => inputNode.getNodeResourceId() == value)\n          if (currentNode == null) {\n            currentNode = tempNode;\n          } else {\n            duplicates.push(tempNode);\n          }\n        })\n      } else {\n        nextNode.inputs.forEach((value, index, array) => {\n          if (currentNode === null) {\n            currentNode = value;\n          } else if (currentNode.getNodeData()['perHour'] == value.getNodeData()['perHour']) {\n            duplicates.push(value);\n          }else if (currentNode.getNodeData()['perHour'] > value.getNodeData()['perHour']) {\n            currentNode = value;\n            duplicates = [];\n          }\n        });\n      }\n\n      if (currentNode === null) {\n        return;\n      }\n\n      // Add all nodes that are on the critical path\n      duplicates.push(currentNode);\n      duplicates.forEach(value => {\n        this.criticalPath.push(value.node);\n      })\n\n      nextNode = currentNode;\n    }\n  }\n\n  private addNode(node: any, parent: TreeItem): TreeItem {\n    let child = this.findOrCreate(node);\n    child.outputs.push(parent);\n\n    parent.inputs.push(child);\n\n    return child;\n  }\n\n  private findOrCreate(node: any): TreeItem {\n    let item = null;\n    this.outputNodes.forEach((value, index, array) => {\n      let stack: TreeItem[] = [];\n      stack.push(value);\n\n      while (stack.length > 0) {\n        let popped = stack.pop();\n        if (popped.node['id'] == node['id']) {\n          item = popped;\n          return;\n        }\n\n        popped.inputs.forEach((value, index, array) => {\n          stack.push(value);\n        });\n      }\n    });\n\n    if( item !== null) {\n      return item;\n    }\n    return new TreeItem(node);\n  }\n}","import { Item } from './../../shared/item.model';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { NodeComponent, NodeService } from 'rete-angular-render-plugin';\n\n@Component({\n  templateUrl: './base-node.component.html',\n  styleUrls: ['./base-node.component.sass'],\n  providers: [NodeService],\n})\n  \nexport class BaseNodeComponent extends NodeComponent {\n\n  constructor(protected service: NodeService, protected cdr: ChangeDetectorRef) {\n    super(service, cdr);\n  }\n\n  setItem( item: Item ) {\n    this.node.data.resource = item;\n  }\n\n  onCriticalPath() {\n    return this.node.data.criticalPath ? \"critical-path\" : \"\";\n  }\n\n  isCustom() {\n    return this.node.data.customization == null ? \"\" : \"custom\";\n  }\n}\n","<div class=\"node\" [ngClass]=\"[onCriticalPath(), selected(), isCustom(), node.name] | kebab\">\n    <div class=\"title\">{{node.data.name}}</div>\n    <div class=\"content\">\n        <div class=\"outputs\">\n            <div class=\"output\" *ngFor=\"let output of outputs\">\n                <div class=\"output-title\">{{output.name}}</div>\n                <rete-socket rete-socket [io]=\"output\" [socket]=\"output.socket\"></rete-socket>\n            </div>\n        </div>\n        <div class=\"control\" *ngFor=\"let control of controls\" [rete-control]=\"control\"></div>\n        <div class=\"inputs\">\n            <div class=\"input\" *ngFor=\"let input of inputs\">\n                <rete-socket rete-socket [io]=\"input\" [socket]=\"input.socket\"></rete-socket>\n                <div class=\"input-title\" *ngIf=\"!input.showControl()\">{{input.name}}</div>\n                <div class=\"input-control\" *ngIf=\"input.showControl()\" [rete-control]=\"input.control\"></div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-output-container',\n  templateUrl: './output-container.component.html',\n  styleUrls: ['./output-container.component.sass']\n})\nexport class OutputContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"output-wrapper module-margin\">\n    <h1>Output</h1>\n</div>\n","import { ItemService } from 'src/app/rete-modules/services/item.service';\nimport { Socket } from \"rete\";\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SocketController {\n  private sockets: Map<number, Socket>;\n\n  constructor(private itemService: ItemService) {\n    this.sockets = new Map();\n  }\n\n  GetSocketForId(id: number): Socket {\n    if (this.sockets.has(id)) {\n      return this.sockets.get(id);\n    }\n    else {\n      this.sockets.set(id, new Socket(this.itemService.GetItemFromId(id).name));\n      return this.sockets.get(id);\n    }\n  }\n}","import { HighlightSearchPipe } from './../shared/highlight-text.pipe';\nimport { Item } from './../shared/item.model';\nimport { ItemService } from 'src/app/rete-modules/services/item.service';\nimport { Component, OnInit } from '@angular/core';\n\nclass TempNode {\n  public type: String;\n  public name: String;\n\n  constructor(type: String, name: String) {\n    this.type = type;\n    this.name = name;\n  }\n};\n\nclass NodeBrowserItem extends Item {\n  public htmlName: string;\n};\n\n@Component({\n  selector: 'app-node-browser',\n  templateUrl: './node-browser.component.html',\n  styleUrls: ['./node-browser.component.sass']\n})\nexport class NodeBrowserComponent implements OnInit {\n  public nodeList: TempNode[];\n  public itemList: NodeBrowserItem[];\n\n  public filter: number = 0;\n  public searchString: string = \"\";\n\n  // @ViewChildren('browseritems') itemsList: QueryList<ItemImageComponent>;\n  // private items: ItemImageComponent[];\n\n\n  constructor(private itemService: ItemService) { \n    this.nodeList = [];\n    this.itemList = itemService.GetAllItems() as NodeBrowserItem[];\n\n    this.itemList.forEach(value => {\n      value.htmlName = value.name;\n    })\n  }\n\n  ngOnInit(): void {\n  }\n  \n  onDrag(event: any, item: Item) {\n    let nodeType = \"\";\n    if (this.filter == 0) {\n      nodeType = item.craftable ? \"Crafter\" : \"Resource\";\n    }\n    else if (this.filter == 1) {\n      nodeType = \"Resource\";\n    }\n    else if (this.filter == 2) {\n      nodeType = \"Crafter\"\n    }\n    else if (this.filter == 3) {\n      nodeType = \"Output\"\n    }\n\n    event.dataTransfer.setData(\"nodeType\", nodeType)\n\n    event.dataTransfer.setData(\"nodeId\", item.id);\n    event.dataTransfer.effectAllowed = \"copy\";\n  }\n\n  onAllClicked() {\n    this.filter = 0;\n    this.filterItems();\n  }\n\n  onResourcesClicked() {\n    this.filter = 1;\n    this.filterItems();\n  }\n\n  onCraftableClicked() {\n    this.filter = 2;\n    this.filterItems();\n  }\n\n  onOutputClicked() {\n    this.filter = 3;\n    this.filterItems();\n  }\n\n  onSearchChange() {\n    this.searchString = this.searchString.toLowerCase();\n    this.filterItems();\n  }\n\n  private filterItems() {\n    if (this.filter == 0 || this.filter == 3) {\n      this.itemList = this.itemService.GetAllItems() as NodeBrowserItem[];\n    }\n\n    if (this.filter == 1) {\n      this.itemList = this.itemService.GetAllNonCraftableItems() as NodeBrowserItem[];\n    }\n\n    if (this.filter == 2) {\n      this.itemList = this.itemService.GetAllCraftableItems() as NodeBrowserItem[];\n    }\n\n      this.itemList = this.itemList.filter(value => {\n        let index = value.name.toLowerCase().indexOf(this.searchString);\n        if (index >= 0) {\n          value.htmlName = value.name.substring(0, index)\n            + \"<mark>\"\n            + value.name.substring(index, index + this.searchString.length)\n            + \"</mark>\"\n            + value.name.substring(index + this.searchString.length, value.name.length);\n        }\n        else {\n          value.htmlName = value.name;\n        }\n\n        return index >= 0;\n      })\n  }\n}\n","<div class=\"node-browser-wrapper module-margin\">\n    <div class=\"node-browser-button-header\">\n        <button type=\"button\" class=\"btn\" [ngClass]=\"filter == 0 ? 'btn-primary' : 'btn-secondary'\" (click)=\"onAllClicked()\">\n            All\n        </button>\n        <button type=\"button\" class=\"btn\" [ngClass]=\"filter == 1 ? 'btn-primary' : 'btn-secondary'\" (click)=\"onResourcesClicked()\">\n            Resources\n        </button>\n        <button type=\"button\" class=\"btn\" [ngClass]=\"filter == 2 ? 'btn-primary' : 'btn-secondary'\" (click)=\"onCraftableClicked()\">\n            Craftable\n        </button>\n        <button type=\"button\" class=\"btn\" [ngClass]=\"filter == 3 ? 'btn-primary' : 'btn-secondary'\" (click)=\"onOutputClicked()\">\n            Output\n        </button>\n        <div class=\"right fill\">\n            <input type=\"search\" placeholder=\"search\" [(ngModel)]=\"searchString\" (input)=\"onSearchChange()\">\n        </div>\n    </div>\n\n    <div class=\"node-browser-grid\">\n        <div class=\"node-browser-node\" [ngClass]=\"[selectedItem.craftable ? 'crafted' : 'resource'] | kebab\" *ngFor=\"let selectedItem of itemList\" draggable=true (dragstart)=\"onDrag($event, selectedItem)\">\n            <div class=\"node-title\" innerHTML=\"{{ selectedItem.name | highlight : searchString }}\"></div>\n            <div>\n                <item-image [selectedItem]=\"selectedItem\" draggable=true></item-image>\n            </div>\n        </div>\n    </div>\n</div>\n","import { CustomNodeData } from './../shared/custom.model';\nimport { NodeService } from './node.service';\nimport { Injectable } from '@angular/core';\n\nvar fakeDatabase = {\n  nodes: [\n    {\n      id: 1,\n      name: \"Fake Node\",\n      inputs: [1, 2, 3],\n      outputs: {\n        5: { 1: .3, 2: .8, 3: 1.2 },\n        339: { 2: .2 }\n      },\n    },\n    {\n      id: 2,\n      name: \"Bookshelves\",\n      inputs: [338, 334, 23],\n      outputs: {\n        92: { 338: .11, 334: .33, 23: .66 }\n      },\n    }\n  ]\n};\n\n@Injectable()\nexport class FakeNodeService extends NodeService {\n  constructor() { \n    super()\n  }\n\n  GetAllCustomNodes(): CustomNodeData[] {\n    return fakeDatabase['nodes'];\n  }\n\n  GetCustomNode(id: number): CustomNodeData {\n    return fakeDatabase.nodes.find(value => {\n      if (value.id == id) {\n        return value;\n      }\n    })\n  }\n\n  SaveCustomNode(classroom: number, group: number, data: CustomNodeData) {\n    \n  }\n}\n","import { Item } from '../shared/item.model';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class ItemService {\n  constructor() {\n  }\n\n  public abstract GetAllItems(): Item[];\n  public abstract GetItemFromId(id: number): Item;\n  public abstract GetAllCraftableItems(): Item[];\n  public abstract GetAllNonCraftableItems(): Item[];\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}