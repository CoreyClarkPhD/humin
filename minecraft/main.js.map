{"version":3,"sources":["./src/app/rete-modules/shared/rate-component/rate-component.component.ts","./src/app/rete-modules/shared/rate-component/rate.component.html","./src/app/rete-modules/shared/custom-output.ts","./src/app/rete-modules/shared/custom.model.ts","./src/app/general/model/color.model.ts","./src/app/rete-modules/services/node.service.ts","./src/app/output/graph-view/graph-view.component.ts","./src/app/output/graph-view/graph-view.component.html","./src/app/rete-modules/custom-rete.module.ts","./src/app/rete-modules/nodes/controls/resource-control/resource-control.ts","./src/app/rete-modules/nodes/controls/resource-control/resource-control.html","./src/environments/environment.ts","./src/app/rete-modules/nodes/resource-node.component.ts","./src/app/rete-modules/node-browser/node-browser-item/node-browser-item.component.ts","./src/app/rete-modules/node-browser/node-browser-item/node-browser-item.component.html","./src/app/rete-modules/nodes/crafter-node.component.ts","./src/app/output/output-item/output-item.component.ts","./src/app/output/output-item/output-item.component.html","./src/app/general/item-image-component/item-image.component.ts","./src/app/general/item-image-component/item-image.component.html","./src/app/output/services/output-manager.service.ts","./src/app/general/icon-button/icon-button.component.ts","./src/app/general/icon-button/icon-button.component.html","./src/app/rete-modules/grid/grid.component.ts","./src/app/rete-modules/grid/grid.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/rete-modules/nodes/custom-node.component.ts","./src/app/general/model/item.model.ts","./src/app/app.module.ts","./src/app/output/output.module.ts","./src/app/output/graph-item/graph-item.component.ts","./src/app/output/graph-item/graph-item.component.html","./src/app/rete-modules/nodes/output-node.component.ts","./src/app/inventory/inventory.module.ts","./src/app/general/service/session.service.ts","./src/app/rete-modules/shared/connection.model.ts","./src/app/rete-modules/nodes/minecraft-node.component.ts","./src/app/general/general.module.ts","./src/app/rete-modules/shared/node-tree.ts","./src/app/rete-modules/nodes/base-node/base-node.component.ts","./src/app/rete-modules/nodes/base-node/base-node.component.html","./src/app/general/pipe/highlight-text.pipe.ts","./src/app/output/output-container/output-container.component.ts","./src/app/output/output-container/output-container.component.html","./src/app/inventory/inventory-display/inventory-display.component.ts","./src/app/inventory/inventory-display/inventory-display.component.html","./src/app/rete-modules/nodes/sockets.ts","./src/app/rete-modules/node-browser/node-browser.component.ts","./src/app/rete-modules/node-browser/node-browser.component.html","./src/app/rete-modules/grid/custom-node-modal/custom-node-modal.component.ts","./src/app/rete-modules/grid/custom-node-modal/custom-node-modal.component.html","./src/app/inventory/services/http-minecraft-inventory.service.ts","./src/app/inventory/inventory-item/inventory-item.component.ts","./src/app/inventory/inventory-item/inventory-item.component.html","./src/app/rete-modules/services/http-node.service.ts","./src/app/inventory/services/minecraft-inventory.service.ts","./src/app/app-routing.module.ts","./src/app/rete-modules/services/item.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, Output, OnInit, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'rate-component',\n  templateUrl: './rate.component.html',\n  styleUrls: ['./rate.component.sass']\n})\nexport class RateComponent implements OnInit {\n  @Input() readonly: boolean;\n  @Input() placeholder: string | number;\n  @Input() text: string;\n  @Output() onChange: EventEmitter<number> = new EventEmitter();\n\n  public perHourString: string;\n  public perHour: number;\n\n  constructor() {\n  }\n  \n  ngOnInit(): void {\n  }\n\n  onInputChange() {\n    this.perHour = parseFloat(this.perHourString);\n\n    this.onChange.emit(this.perHour);\n  }\n\n  setRate(rate: number) {\n    this.perHour = rate;\n\n    let str = this.perHour == Infinity ? \"-\" : this.perHour.toString();\n    if (str.indexOf('.') !== -1) {\n      str = str.slice(0, str.indexOf('.') + 3);\n    }\n\n    this.perHourString = str;\n  }\n\n  public setPlaceholder( placeholder: string | number ) {\n    this.placeholder = placeholder\n  }\n}\n","<div class=\"rate-container\">\n    <input class=\"styled-input\" type=\"text\" oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\n    [(ngModel)]=\"perHourString\"\n    [readonly]=\"readonly\"\n    [placeholder]=\"placeholder\"\n    (change)=\"onInputChange()\">\n    <div class=\"helper-text\">\n        {{this.text}}\n    </div>\n</div>","import { Output, Socket } from \"rete\"\n\nexport class CustomOutput extends Output {\n  public data: {\n    [key: string]: unknown;\n  };\n\n  constructor(key: string, title: string, socket: Socket, multiConns?: boolean) {\n    super(key, title, socket, multiConns);\n\n    this.data = {};\n  }\n}","export enum ShareLevel {\n  Personal,\n  Group,\n  Classroom\n}\n\nexport class CustomNodeMetadata {\n  public name: string;\n  public shareLevel: ShareLevel;\n  public icon: number;\n}\n\n\nexport class CustomNodeData {\n  public uuid: string;\n  public uniqueUserId: string;\n  public meta: CustomNodeMetadata;\n  public inputs!: number[];\n  public outputs!: { [outputIndex: number]: { inputRate: { [input: number]: number }, createdAmount: number } };\n\n  constructor(inputs: number[], name: string = \"NOT-CREATED\", shareLevel: ShareLevel = ShareLevel.Personal) {\n    this.meta = {name: name, shareLevel: shareLevel, icon: 1};\n    this.inputs = inputs;\n    this.outputs = {};\n  }\n}","export class Color {\n  public r: number = 255;\n  public g: number = 255;\n  public b: number = 255;\n\n  static FromHex( hex: String): Color {\n    let r = hex.substr(1, 2);\n    let g = hex.substr(3, 2);\n    let b = hex.substr(5, 2);\n\n    return new Color(parseInt(r, 16), parseInt(g, 16), parseInt(b, 16));\n  }\n\n  constructor(r: number, g: number, b: number) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n\n  toHex(): string {\n    return \"#\" + this.r.toString(16).padStart(2, '0') + this.g.toString(16).padStart(2, '0') + this.b.toString(16).padStart(2, '0') ;\n  }\n}","import { Connection } from './../shared/connection.model';\nimport { TreeItem, NodeTree } from './../shared/node-tree';\nimport { CustomNodeData } from './../shared/custom.model';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class NodeService {\n  private nodeTree: NodeTree;\n  \n  constructor() {\n    this.nodeTree = new NodeTree;\n  }\n\n  public parseFromEditor(json) {\n    this.nodeTree.parseFromJson(json);\n  }\n\n  public getCriticalPath(): number[] {\n    return this.nodeTree.getCriticalPath();\n  }\n\n  public getAllOutputs() {\n    return this.nodeTree.getOutputs();\n  }\n\n  public getNodeTreeItem(id: number) {\n    return this.nodeTree.getNode(id);\n  }\n\n  public calculateCustomNodeFromOutputs(nodeOutputs: TreeItem[]): [number[], CustomNodeData] {\n    let connectedNodes: number[] = [];\n\n    // Create the custom node data to generate\n    let customNodeData: CustomNodeData = new CustomNodeData([]);\n    \n    //TODO: Only transverse nodes that are not connected to each other\n\n    // For all of the valid output nodes in the graph\n    nodeOutputs.forEach(outputNode => {\n      // Create a stack for transversal\n      if (outputNode.getInputTree() != null) { \n        connectedNodes.push(outputNode.node.id);\n        let connectionStack: Connection[] = [];\n        \n        outputNode.getInputTree().forEach(connection => {\n          connectionStack.push(connection);\n        })\n        \n        // Loop through the entire connection tree\n        let outputData = { inputRate: {}, createdAmount: -1 };\n        while (connectionStack.length > 0) {\n          let currentConnection = connectionStack.pop();\n          connectedNodes.push(currentConnection.nodeId);\n          if (!currentConnection) {\n            continue;\n          }\n          // If this is the first time seeing a node, that is the output amount\n          if (outputData.createdAmount === -1) {\n            outputData.createdAmount = currentConnection.amount;\n          }\n          \n          if (currentConnection.tree.length > 0) {\n            // For each value, propogate the previous rate if available and the input value amount and crafting translation cost\n            currentConnection.tree.forEach((inputValue, inputIndex) => {\n              let propogateOutput = outputData.inputRate[currentConnection.itemId];\n              outputData.inputRate[inputValue.itemId] = inputValue.amount * currentConnection.transitionCost[inputIndex] * (propogateOutput == undefined ? 1 : propogateOutput);\n              connectionStack.push(inputValue);\n            });\n            \n            // Delete the value if it is not a resource node\n            delete outputData.inputRate[currentConnection.itemId];\n          }\n        }\n        \n        // If the output has some inputs connected to it\n        if (outputData.createdAmount > -1) {\n          \n          // Get the output item index\n          let outputIndex: number = outputNode.node.data.resource['id'];\n          \n          // Save the output data and all its inputs\n          customNodeData.outputs[outputIndex] = outputData;\n          for (let inputId in outputData.inputRate) {\n            if (!customNodeData.inputs.includes(parseInt(inputId))) {\n              customNodeData.inputs.push(parseInt(inputId));\n            }\n          }\n        }\n      }\n    });\n\n    return [connectedNodes, customNodeData];\n  }\n\n  public abstract GetAllCustomNodes(): Promise<CustomNodeData[]>;\n  public abstract ForceGetAllCustomNodes(): Promise<CustomNodeData[]>;\n  public abstract GetCustomNode(uuid: string): Promise<CustomNodeData>;\n\n  public abstract SaveCustomNode(node: CustomNodeData): Promise<string>;\n}\n","import { OutputManagerService } from './../services/output-manager.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-graph-view',\n  templateUrl: './graph-view.component.html',\n  styleUrls: ['./graph-view.component.sass']\n})\nexport class GraphViewComponent implements OnInit {\n  public markedNodes: any[] = [];\n\n  constructor(private outputManager: OutputManagerService) {\n\n    setInterval(() => {\n      let nodes = this.outputManager.getMarkedNodes();\n      this.markedNodes = nodes.filter(value => {\n        return value.meta['type'] == \"output\";\n      })\n    }, 500)\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"graph-container\">\n    <div *ngFor=\"let node of markedNodes\">\n        <app-graph-item [node]=\"node\"></app-graph-item>\n    </div>\n\n    <div *ngIf=\"markedNodes.length == 0\">\n        <div class=\"no-node-container\">\n            <div class=\"no-node-warning\">\n                No marked output nodes\n            </div>\n        </div>\n    </div>\n</div>\n","import { InventoryModule } from './../inventory/inventory.module';\nimport { CustomNodeModal } from './grid/custom-node-modal/custom-node-modal.component';\nimport { GeneralModule } from './../general/general.module';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FakeNodeService } from './services/fake-node.service';\nimport { HttpNodeService} from './services/http-node.service'\nimport { ItemService } from './services/item.service';\nimport { ResourceComponent } from './nodes/controls/resource-control/resource-control';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GridComponent } from './grid/grid.component';\nimport { ReteModule } from 'rete-angular-render-plugin';\nimport { BaseNodeComponent } from './nodes/base-node/base-node.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NodeBrowserComponent } from './node-browser/node-browser.component';\nimport { NodeService } from './services/node.service';\nimport { RateComponent } from './shared/rate-component/rate-component.component';\nimport { NodeBrowserItemComponent } from './node-browser/node-browser-item/node-browser-item.component';\n\n@NgModule({\n  declarations: [\n    GridComponent,\n    BaseNodeComponent,\n    ResourceComponent,\n    NodeBrowserComponent,\n    RateComponent,\n    CustomNodeModal,\n    NodeBrowserItemComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ReteModule,\n    NgbModule,\n    GeneralModule,\n    InventoryModule,\n  ],\n  providers: [{ provide: ItemService }, {provide: NodeService, useClass: HttpNodeService } ],\n  exports: [GridComponent, NodeBrowserComponent],\n  entryComponents: [ResourceComponent,\n    BaseNodeComponent\n  ]\n})\nexport class CustomReteModule { }\n","import { Item } from './../../../../general/model/item.model';\nimport { RateComponent } from './../../../shared/rate-component/rate-component.component';\n\nimport {\n  Component, Type, ViewChild\n} from '@angular/core';\nimport { Control, NodeEditor } from 'rete';\nimport { AngularControl } from 'rete-angular-render-plugin';\n\n@Component({\n  templateUrl: \"./resource-control.html\",\n  styleUrls: [\"./resource-control.sass\",]\n})\nexport class ResourceComponent {\n  public criticalPath: boolean;\n\n  public mounted!: Function;\n  public delayedRateSet!: Function;\n  public changeRate!: Function;\n  \n  public selectedItem!: Item;\n  public readonly: boolean;\n  public disableRate: boolean;\n\n  @ViewChild(RateComponent) rateComponent: RateComponent;\n  \n  ngOnInit() {\n    this.mounted();\n  }\n\n  ngAfterViewInit() {\n    this.delayedRateSet();\n  }\n  \n  onRateChange(value) {\n    this.changeRate(value);\n  }\n\n  setRate(value) {\n    this.rateComponent.setRate(value);\n  }\n}\n\nexport class ResourceControl extends Control implements AngularControl {\n  component: Type<ResourceComponent>\n  props: { [key: string]: unknown }\n\n  private unitializedSetRate = false;\n  private unitializedSetRateValue = 0;\n  \n  constructor(public emitter: NodeEditor, public key, public disableRate: boolean = false) {\n    super(key);\n  \n    this.component = ResourceComponent;\n    this.props = {\n      selectedItem: Item,\n      readonly: false,\n      disableRate: this.disableRate,\n      changeRate: v => this.onChangeRate(v),\n      mounted: () => {\n        this.setInitialItem();\n      },\n      delayedRateSet: () => {\n        this.delayedRateSet();\n      },\n      rateComponent: RateComponent,\n      criticalPath: false,\n    }\n  }\n\n  onChangeRate(rate: number) {\n    this.setRate( rate);\n    \n    this.emitter.trigger('process');\n  }\n\n  getRate(): number {\n    let value: number = this.getData('perHour') as number;\n    if (value == undefined) {\n      value = NaN;\n    }\n\n    return value;\n  }\n\n  // Used when you want to just set the visual\n  setRate(rate: number) {\n    if (!this.props.disableRate) {\n\n      // Handles setting rate on uninitialized rate component\n      //  Saves the value and sets in initialized\n      if (typeof this.props.rateComponent === 'function') {\n        this.unitializedSetRate = true;\n        this.unitializedSetRateValue = rate;\n        return;\n      }\n      (<RateComponent>this.props.rateComponent).setRate(rate);\n    }\n\n    this.putData('perHour', rate);\n  }\n\n  setPlaceholder(placeholder: string | number) {\n    if (!this.props.disableRate) {\n      (<RateComponent>this.props.rateComponent).setPlaceholder(placeholder);\n    }\n  }\n\n  private delayedRateSet() {\n    if (this.unitializedSetRate) {\n      this.setRate(this.unitializedSetRateValue);\n      this.unitializedSetRate = false;\n    }\n  }\n\n  private setInitialItem() {\n    let item = this.getData(this.key) as Item;\n    this.props.selectedItem = item;\n    \n    this.putData(this.key, item);\n    this.putData('amount', (item && item.craftable) ? item.recipe.createdAmount : 1)\n    this.putData('perHour', this.props.perHour);\n\n    this.getNode().meta['changed'] = true;\n  }\n}","<div class=\"resource-control\">\n    <div class=\"image-container\">\n        <item-image class=\"center\" [selectedItem]=\"selectedItem\" [criticalPath]=\"criticalPath\"></item-image>\n    </div>\n    <div *ngIf=\"!disableRate\">\n        <div class=\"rate-container\">\n            <rate-component [readonly]=\"readonly\" [placeholder]=\"'Per-Hour Rate'\" [text]=\"'/ hour'\" (onChange)=\"onRateChange($event)\"></rate-component>\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\nexport const environment_vars = {\n  // api_root: \"http://127.0.0.1:3000\",\n  api_root: \"https://t0q6ax5k4m.execute-api.us-east-1.amazonaws.com/Prod\",\n  authentication: 'SmQ0aUNXdWh3ZgpNOFhLTnZpQlYwCmxzZzZWRE1tQVMKSWdwUnRjcEhvWgpubU1Qb3hEMWhP',\n\n  // TODO: Make this set from URL params\n  sessionId: 'user1-id'\n}\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Item } from './../../general/model/item.model';\nimport { Connection } from './../shared/connection.model';\nimport { Component, Output, Node } from 'rete';\nimport { SocketController } from './sockets';\nimport { ResourceControl } from './controls/resource-control/resource-control';\n\nexport class ResourceNode extends Component {\n\n  constructor(private socketController: SocketController) {\n    super('Resource');\n\n  }\n\n  builder(node) {\n    var control = new ResourceControl(this.editor, 'resource');\n    node.addControl(control);\n\n    node.meta.type = 'resource'\n    node.data.name = 'Resource';\n\n    this.updateNodeStructure(node);\n\n    return node;\n  }\n\n  worker(node, inputs, outputs) {\n    let datagram = new Connection(node.id, node.data.resource.id, node.data.amount, node.data.perHour);\n    outputs['resource'] = datagram;\n  }\n\n  private updateNodeStructure(node: Node ) {\n    var item = <Item>node.data.resource;\n\n    var output = new Output(\"resource\", item.name, this.socketController.GetSocketForId(item.id), false);\n    node.addOutput(output);\n    \n    this.editor.trigger('nodeselected');\n  }\n}","import { Item } from './../../../general/model/item.model';\nimport { Component, Input, OnInit } from '@angular/core';\n\nexport enum NodeBrowserFilter {\n  ALL,\n  RESOURCE,\n  CRAFTER,\n  OUTPUT,\n  CUSTOM,\n}\n\nclass CustomItemData {\n  id: number;\n  item: Item;\n}\n\nexport class NodeBrowserItem {\n  public name: string;\n  public type: string;\n  public data: Item | CustomItemData;\n  \n  public htmlName: string;\n  \n  constructor(name: string, type: string, data: any) {\n    this.name = name;\n    this.type = type;\n    this.data = data;\n\n    this.htmlName = this.name;\n  }\n};\n\n@Component({\n  selector: 'node-browser-item',\n  templateUrl: './node-browser-item.component.html',\n  styleUrls: ['./node-browser-item.component.sass']\n})\nexport class NodeBrowserItemComponent implements OnInit {\n  @Input() nodeItem: NodeBrowserItem;\n  @Input() filter: number;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onDrag(event: any) {\n    let nodeType = \"\";\n    if (this.filter == 0) {\n      nodeType = this.getType();\n    }\n    else if (this.filter == 1) {\n      nodeType = \"Resource\";\n    }\n    else if (this.filter == 2) {\n      nodeType = \"Crafter\"\n    }\n    else if (this.filter == 3) {\n      nodeType = \"Output\"\n    } else if (this.filter == 4) {\n      nodeType = \"Custom\";\n    }\n\n    event.dataTransfer.setData(\"nodeType\", nodeType)\n\n    event.dataTransfer.setData(\"nodeId\", this.getId());\n    event.dataTransfer.effectAllowed = \"copy\";\n  }\n\n  getType() {\n    if (this.filter != NodeBrowserFilter.OUTPUT) {\n      if (this.nodeItem.type == \"item\") {\n        let item = <Item>this.nodeItem.data;\n        return item.craftable ? \"Crafter\" : \"Resource\"\n      } else {\n        return \"Custom\"\n      }\n    }\n\n    if (this.filter == NodeBrowserFilter.OUTPUT) {\n      if (this.nodeItem.type == \"item\") {\n        return \"Output\"\n      } else {\n        return \"Custom\"\n      }\n    }\n\n  }\n\n  getItem(): Item {\n    if (this.nodeItem.type == \"item\") {\n      return <Item>this.nodeItem.data;\n    } else {\n      let customData = <CustomItemData>this.nodeItem.data;\n      return customData.item;\n    }\n  }\n\n  getId(): any {\n    return this.nodeItem.data.id;\n  }\n}","<div class=\"node-item\" [ngClass]=\"[getType()] | kebab\" draggable=true (dragstart)=\"onDrag($event)\">\n    <div class=\"background-image\">\n        <div class=\"resource-image\" *ngIf=\"getType() == 'Resource'\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-bricks\" viewBox=\"0 0 16 16\">\n                <path fill-rule=\"evenodd\" d=\"M0 .5A.5.5 0 0 1 .5 0h15a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-.5.5H14v2h1.5a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-.5.5H14v2h1.5a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-.5.5H.5a.5.5 0 0 1-.5-.5v-3a.5.5 0 0 1 .5-.5H2v-2H.5a.5.5 0 0 1-.5-.5v-3A.5.5 0 0 1 .5 6H2V4H.5a.5.5 0 0 1-.5-.5v-3zM3 4v2h4.5V4H3zm5.5 0v2H13V4H8.5zM3 10v2h4.5v-2H3zm5.5 0v2H13v-2H8.5zM1 1v2h3.5V1H1zm4.5 0v2H15V1H5.5zM1 7v2h3.5V7H1zm4.5 0v2h5V7h-5zm6 0v2H15V7h-3.5zM1 13v2h3.5v-2H1zm4.5 0v2h5v-2h-5zm6 0v2H15v-2h-3.5z\"/>\n            </svg>\n        </div>\n\n        <div class=\"crafting-image\" *ngIf=\"getType() == 'Crafter'\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-hammer\" viewBox=\"0 0 16 16\">\n                <path d=\"M9.812 1.952a.5.5 0 0 1-.312.89c-1.671 0-2.852.596-3.616 1.185L4.857 5.073V6.21a.5.5 0 0 1-.146.354L3.425 7.853a.5.5 0 0 1-.708 0L.146 5.274a.5.5 0 0 1 0-.706l1.286-1.29a.5.5 0 0 1 .354-.146H2.84C4.505 1.228 6.216.862 7.557 1.04a5.009 5.009 0 0 1 2.077.782l.178.129z\"/>\n                <path fill-rule=\"evenodd\" d=\"M6.012 3.5a.5.5 0 0 1 .359.165l9.146 8.646A.5.5 0 0 1 15.5 13L14 14.5a.5.5 0 0 1-.756-.056L4.598 5.297a.5.5 0 0 1 .048-.65l1-1a.5.5 0 0 1 .366-.147z\"/>\n              </svg>\n        </div>\n\n        <div class=\"output-image\" *ngIf=\"getType() == 'Output'\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-minecart\" viewBox=\"0 0 16 16\">\n                <path fill-rule=\"evenodd\" d=\"M4 15a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm0 1a2 2 0 1 0 0-4 2 2 0 0 0 0 4zm8-1a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm0 1a2 2 0 1 0 0-4 2 2 0 0 0 0 4zM.115 3.18A.5.5 0 0 1 .5 3h15a.5.5 0 0 1 .491.592l-1.5 8A.5.5 0 0 1 14 12H2a.5.5 0 0 1-.491-.408l-1.5-8a.5.5 0 0 1 .106-.411zm.987.82l1.313 7h11.17l1.313-7H1.102z\"/>\n            </svg>\n        </div>\n\n        <div class=\"custom-image\" *ngIf=\"getType() == 'Custom'\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-archive\" viewBox=\"0 0 16 16\">\n                <path d=\"M0 2a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1v7.5a2.5 2.5 0 0 1-2.5 2.5h-9A2.5 2.5 0 0 1 1 12.5V5a1 1 0 0 1-1-1V2zm2 3v7.5A1.5 1.5 0 0 0 3.5 14h9a1.5 1.5 0 0 0 1.5-1.5V5H2zm13-3H1v2h14V2zM5 7.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5z\"/>\n              </svg>\n        </div>\n    </div>\n\n    <div class=\"node-item-title pixelated minecraft-background\" [innerHTML]=\"nodeItem.htmlName\">\n    </div>\n\n    <div class=\"node-item-body\">\n        <item-image [selectedItem]=\"getItem()\"></item-image>\n    </div>\n</div>\n","import { Item } from './../../general/model/item.model';\nimport { Connection } from './../shared/connection.model';\nimport { SocketController } from './sockets';\nimport { ItemService } from '../services/item.service';\n\nimport { Component, Output, Input, Node } from 'rete';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data'\nimport { ResourceControl } from './controls/resource-control/resource-control';\n\nimport { Recipe } from '../../general/model/recipe.model'\n\nexport class CrafterNode extends Component {\n\n  constructor(private socketController: SocketController, private itemService: ItemService) {\n    super('Crafter');\n  }\n\n  builder(node) {\n    var control = new ResourceControl(this.editor, 'resource');\n    control.props.readonly = true;\n    node.addControl(control);\n\n    node.meta.type = 'crafter';\n    node.data.name = 'Crafter';\n\n    this.updateNodeStructure(node);\n\n    return node;\n  }\n\n  worker(node: NodeData, inputs: WorkerInputs, outputs: WorkerOutputs) {\n    let perHourBottleneck = Infinity;\n    let craftedItem = <Item>node.data.resource;\n    let recipe: Recipe = craftedItem.recipe;\n    \n    // Perpare datagram for calculations\n    node.data.inputTree = [];\n    let datagram = new Connection(node.id, craftedItem.id, recipe.createdAmount, perHourBottleneck);\n    recipe.ingredients.forEach(ingredient => {\n      let input = inputs[ingredient.id];\n      \n      if (input && input[0]) {\n        let inputData = <Connection>input[0];\n        let itemBottleneck = inputData.amount / ingredient.amount;\n        itemBottleneck *= inputData.perHour;\n        \n        if (itemBottleneck < perHourBottleneck) {\n          perHourBottleneck = itemBottleneck;\n        }\n        \n        // Add the input to the tree\n        datagram.transitionCost.push(1 / ingredient.amount);\n        datagram.tree.push(inputData);\n        \n        (<any[]>node.data.inputTree).push(inputData);\n      }\n    })\n    \n    // Find the outputs per hour bottleneck\n    datagram.perHour = perHourBottleneck;\n    node.data['perHour'] = perHourBottleneck;\n    \n    // Update the control with the rate\n    var node_ref = this.editor.nodes.find(n => n.id === node.id);\n    let control = <ResourceControl>node_ref.controls.get('resource');\n    control.setRate(perHourBottleneck * recipe.createdAmount );\n    \n    outputs['resource'] = datagram;\n  }\n\n  private updateNodeStructure(node: Node) {\n    var item = <Item>node.data.resource;\n    var output = new Output(\"resource\", item.name  + \" x \" + item.recipe.createdAmount, this.socketController.GetSocketForId(item.id), false);\n    node.addOutput(output);\n\n    item.recipe.ingredients.forEach(ingredient => {\n      var item = this.itemService.GetItemFromId(ingredient.id);\n      var input = new Input(\"\" + item.id, item.name + \" x \" + ingredient.amount , this.socketController.GetSocketForId(item.id), false);\n      node.addInput(input);\n    });\n\n    this.editor.trigger('nodeselected');\n  }\n}","import { Item } from './../../general/model/item.model';\nimport { CustomNodeData } from './../../rete-modules/shared/custom.model';\nimport { ItemService } from 'src/app/rete-modules/services/item.service';\nimport { Connection } from './../../rete-modules/shared/connection.model';\nimport { OutputManagerService } from './../services/output-manager.service';\nimport { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { Node } from 'rete';\n\nclass RelativeNodeData {\n  public id: number;\n  public name: string;\n  public rate: number;\n\n  constructor(id: number, name: string, rate: number) {\n    this.id = id;\n    this.name = name;\n    this.rate = rate;\n  }\n}\n\n@Component({\n  selector: 'app-output-item',\n  templateUrl: './output-item.component.html',\n  styleUrls: ['./output-item.component.sass']\n})\nexport class OutputItemComponent implements OnInit {\n  @Input() node: Node;\n  @Output() dropdownPressed = new EventEmitter<Node>();\n\n  public inputs: RelativeNodeData[] = [];\n  public outputs: RelativeNodeData[] = [];\n\n  constructor(private outputManagerService: OutputManagerService, private itemService: ItemService) {\n  }\n  \n  ngOnInit(): void {\n    this.outputManagerService.bindOnNodeUpdate(this.node.id, val => {\n      this.node = val;\n      console.log(\"Node Updated\");\n\n      this.updateInputs();\n      this.updateOutputs();\n    })\n\n    this.updateInputs();\n      this.updateOutputs();\n  }\n\n  getName(): string {\n    return <string>this.node.data['name'];\n  }\n\n  getId(): number {\n    return this.node.id;\n  }\n\n  showDropdown(): boolean {\n    let shouldShow = false;\n\n    if (this.node.data['inputTree']) {\n      if ((<any[]>this.node.data['inputTree']).length > 0) {\n        shouldShow = true;\n      }\n    }\n\n    return shouldShow;\n  }\n\n  toggleDropdown() {\n    this.dropdownPressed.emit(this.node)\n  }\n\n  getType(): string {\n    return <string>this.node.meta['type'];\n  }\n\n  isCriticalPath(): string {\n    return this.node.meta.criticalPath ? 'critical-path' : \"\";\n  }\n\n  private updateInputs() {\n    this.inputs = [];\n\n    if (this.node.meta['type'] == 'output') {\n      return;\n    }\n\n    let nodeTree = <Connection[]>this.node.data['inputTree'];\n    if (nodeTree) {\n      nodeTree.forEach(nodeInput => {\n        this.inputs.push( new RelativeNodeData( nodeInput.itemId, this.itemService.GetItemFromId(nodeInput.itemId).name, nodeInput.amount * nodeInput.perHour ) );\n      })\n    }\n  }\n\n  private updateOutputs() {\n    this.outputs = [];\n    \n    if (this.node.meta['type'] == \"custom\") {\n      let customData: CustomNodeData = <CustomNodeData>this.node.data['customization'];\n      for (let outputIndex in customData.outputs) {\n        let outputData = customData.outputs[outputIndex];\n        let smallestRate = Infinity;\n\n        for (let inputIndex in outputData.inputRate) {\n          let inputRate = outputData.inputRate[inputIndex];\n          let relativeInputData = this.inputs.find(value => {\n            return value.id == parseInt(inputIndex);\n          });\n\n          if (relativeInputData) {\n            if (inputRate * relativeInputData.rate < smallestRate) {\n              smallestRate = inputRate * relativeInputData.rate;\n            }\n          }\n        }\n\n        let outputId = parseInt(outputIndex);\n        this.outputs.push(new RelativeNodeData(outputId, this.itemService.GetItemFromId(outputId).name, smallestRate));\n      }\n    } else {\n      let item: Item = <Item>this.node.data['resource'];\n      this.outputs.push(new RelativeNodeData(item.id, item.name, Number(this.node.data['perHour'])));\n    }\n  }\n}\n","<div class=\"output-container pixelated minecraft-background\" [ngClass]=\"getType()\" >\n    <div class=\"title-container pixelated minecraft-background\" [ngClass]=\"[getType(), isCriticalPath()]\"> \n        <div class=\"id-container\">\n            <p>{{getId()}}</p>\n        </div>\n        <div class=\"title\">\n            {{getName()}}\n        </div>\n    </div>\n\n    <div class=\"data-container\">\n        <div class=\"data-input-container\">\n            <div class=\"node-rates\" *ngFor=\"let data of inputs\">\n                <div class=\"node-rate-text\">{{data.name}}:</div> \n                <input type=\"text\"\n                readonly=\"true\"\n                placeholder=\"N/A\"\n                [ngModel]=\"data.rate | number: '1.2-2'\">\n            </div>\n\n        </div>\n\n        <div class=\"data-output-container\">\n            <div class=\"node-rates\" *ngFor=\"let data of outputs\">\n                <div class=\"node-rate-text\">{{data.name}}:</div> \n                <input type=\"text\"\n                readonly=\"true\"\n                placeholder=\"N/A\"\n                [ngModel]=\"data.rate | number: '1.2-2'\" (ngModelChange)=\"data.rate=$event\">\n            </div>\n        </div>\n\n        <div class=\"clear\"></div>\n    </div>\n\n    <div class=\"dropdown-container\" *ngIf=\"showDropdown()\" (click)=\"toggleDropdown()\">\n        <div class=\"dropdown-icon\">\n            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-chevron-compact-down\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path fill-rule=\"evenodd\" d=\"M1.553 6.776a.5.5 0 0 1 .67-.223L8 9.44l5.776-2.888a.5.5 0 1 1 .448.894l-6 3a.5.5 0 0 1-.448 0l-6-3a.5.5 0 0 1-.223-.67z\"/>\n            </svg>\n        </div>\n    </div>\n</div>","import { Item } from './../model/item.model';\nimport { Component, Input, Output } from \"@angular/core\";\n\nlet spriteSize = 32;\nlet spriteScale = 2.2;\n\n// Item component that displays and updates the item visible in the image.\n// Takes a Item as an input and will update the visual when updateVisual is called\n@Component({\n  selector: 'item-image',\n  templateUrl: 'item-image.component.html',\n  styleUrls: ['item-image.component.sass']\n})\nexport class ItemImageComponent {\n  @Input() selectedItem: Item;\n  @Input() criticalPath: boolean;\n\n  public background: any;\n\n  constructor() {\n    this.background = {};\n  }\n\n  ngOnInit() {\n    this.updateVisual( this.selectedItem);\n  }\n\n  updateVisual(item: Item) {\n    // Reactive sprite coordinate calculation https://stackoverflow.com/a/23419418\n    let spritePixelCoords = { x: item.index[0] * spriteSize, y: item.index[1] * spriteSize };\n\n    this.background['background-position-x'] = spritePixelCoords.x / (512 - spriteSize) * 100 + \"%\";\n    this.background['background-position-y'] = spritePixelCoords.y / (1120 - spriteSize) * 100 + \"%\";\n  }\n}","<div class=\"image-container\" [ngClass]=\"criticalPath ? 'criticalPath' : ''\">\n    <div class=\"pixelated\">\n        <img class=\"image\" src=\"./assets/images/transparent_32x32.png\" [ngStyle]=\"background\">\n    </div>\n</div>","import { Node, NodeEditor } from 'rete';\nimport { Injectable, EventEmitter } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OutputManagerService {\n  private editor: NodeEditor;\n  private markedNodes: Node[];\n  private onNodeUpdate: { [nodeId: number]: Function[] };\n\n  constructor() { \n    this.markedNodes = [];\n    this.onNodeUpdate = {};\n  }\n\n  bindOnNodeUpdate(nodeId: number, func: Function) {\n    if (this.onNodeUpdate[nodeId]) {\n      this.onNodeUpdate[nodeId].push(func);\n    } else {\n      this.onNodeUpdate[nodeId] = [func];\n    }\n  }\n\n  setEditor( editor: NodeEditor ) {\n    this.editor = editor;\n  }\n\n  update( nodes: Node[] ) {\n    nodes.forEach(node => {\n      if (this.onNodeUpdate[node.id]) {\n        this.onNodeUpdate[node.id].forEach(callback => {\n          callback(node);\n        })\n      }\n    })\n  }\n\n  getNodeById(nodeId: number): Node {\n    return this.editor.nodes.find(value => value.id == nodeId);\n  }\n\n  getMarkedNodes(): Node[] {\n    return this.markedNodes;\n  }\n\n  getNumberMarkedNodes(): number {\n    return Object.keys(this.markedNodes).length;\n  }\n\n  markNode(nodeId: number) {\n    let node = this.getNodeById(nodeId);\n    this.markedNodes.push(node);\n  }\n  \n  unmarkNode(nodeId: number) {\n    let tempNodes: Node[] = [];\n    \n    this.markedNodes.forEach(value => {\n      if (value.id != nodeId) {\n        tempNodes.push(value);\n      }\n    })\n\n    this.markedNodes = tempNodes;\n  }\n}\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-icon-button',\n  templateUrl: './icon-button.component.html',\n  styleUrls: ['./icon-button.component.sass']\n})\nexport class IconButtonComponent implements OnInit {\n  @Input() icon: string = \"bi-alarm-fill\";\n  @Input() strokes: string[] = [\"M6 .5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1H9v1.07a7.001 7.001 0 0 1 3.274 12.474l.601.602a.5.5 0 0 1-.707.708l-.746-.746A6.97 6.97 0 0 1 8 16a6.97 6.97 0 0 1-3.422-.892l-.746.746a.5.5 0 0 1-.707-.708l.602-.602A7.001 7.001 0 0 1 7 2.07V1h-.5A.5.5 0 0 1 6 .5zM.86 5.387A2.5 2.5 0 1 1 4.387 1.86 8.035 8.035 0 0 0 .86 5.387zM11.613 1.86a2.5 2.5 0 1 1 3.527 3.527 8.035 8.035 0 0 0-3.527-3.527zM8.5 5.5a.5.5 0 0 0-1 0v3.362l-1.429 2.38a.5.5 0 1 0 .858.515l1.5-2.5A.5.5 0 0 0 8.5 9V5.5z\"];\n  @Input() size: string = \"2.5em\";\n\n  @Input() disabled: boolean = false;\n\n  @Output() onClick = new EventEmitter<MouseEvent>();\n  @Output() onHover = new EventEmitter<MouseEvent>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onClicked(event: MouseEvent) {\n    if (!this.disabled) {\n      this.onClick.emit(event);\n    }\n  }\n}\n","<div class=\"button-container pixelated minecraft-background\" [ngClass]=\"disabled ? 'disabled' : ''\" (click)=\"onClicked($event)\" (onmouseover)=\"onHover.emit($event)\"> \n    <svg [attr.width]=\"size\" [attr.height]=\"size\" viewBox=\"0 0 16 16\" class=\"bi\" [ngClass] =\"icon\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path *ngFor=\"let stroke of strokes\" fill-rule=\"evenodd\" [attr.d]=\"stroke\"/>\n    </svg>\n</div>\n","import { MinecraftNode } from './../nodes/minecraft-node.component';\nimport { CustomNodeMetadata } from './../shared/custom.model';\nimport { CustomNodeModal } from './custom-node-modal/custom-node-modal.component';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ResourceControl } from './../nodes/controls/resource-control/resource-control';\nimport { OutputManagerService } from './../../output/services/output-manager.service';\nimport { CustomNode } from './../nodes/custom-node.component';\nimport { BaseNodeComponent } from './../nodes/base-node/base-node.component';\nimport { OutputNode } from './../nodes/output-node.component';\nimport { ItemService } from './../services/item.service';\nimport { CrafterNode } from './../nodes/crafter-node.component';\nimport { SocketController } from './../nodes/sockets';\nimport { Component, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\n\nimport { Component as ReteComponent, NodeEditor, Engine, Node } from 'rete';\nimport { Transform } from 'rete/types/view/area';\nimport ConnectionPlugin from 'rete-connection-plugin';\n\nimport { ResourceNode } from './../nodes/resource-node.component';\nimport { AngularRenderPlugin } from 'rete-angular-render-plugin';\nimport ContextMenuPlugin from 'rete-context-menu-plugin'\nimport { NodeService } from '../services/node.service';\nimport { MinecraftInventoryService } from 'src/app/inventory/services/minecraft-inventory.service';\nimport html2canvas from 'html2canvas';\nimport { UNKNOWN_ITEM } from 'src/app/general/model/item.model';\n\n@Component({\n  selector: 'app-grid',\n  templateUrl: './grid.component.html',\n  styleUrls: ['./grid.component.sass']\n})\nexport class GridComponent implements AfterViewInit {\n  public isSideBarCollapse: boolean = true;\n  \n  @ViewChild('nodeEditor', { static: true }) private el: ElementRef;\n  private editor: NodeEditor = null;\n  private engine: Engine;\n  private components: { [type: string]: ReteComponent };\n\n  public completePath: boolean = false;\n\n  constructor(private socketController: SocketController, \n    private itemService: ItemService,\n    private nodeService: NodeService,\n    private minecraftInventoryService: MinecraftInventoryService,\n    private outputManager: OutputManagerService,\n    private modalService: NgbModal) { \n  }\n\n  async ngAfterViewInit() {\n    const container = this.el.nativeElement;\n    \n    this.components = {};\n\n    this.components['Resource'] = new ResourceNode(this.socketController);\n    this.components['Minecraft'] = new MinecraftNode(this.socketController, this.minecraftInventoryService);\n    this.components['Crafter'] = new CrafterNode(this.socketController, this.itemService);\n    this.components['Output'] = new OutputNode(this.socketController);\n    this.components['Custom'] = new CustomNode(this.socketController, this.itemService, this.nodeService)\n\n    this.editor = new NodeEditor('minecraft-web-app@0.1.0', container);\n    this.editor.use(ConnectionPlugin);\n    this.editor.use(AngularRenderPlugin, { component: BaseNodeComponent });\n    this.editor.use(ContextMenuPlugin, {\n      searchBar: false,\n      delay: 100,\n      nodeItems: (node: Node) => {\n        if (node.meta.hasOutputFocus) {\n          return {\n            'Unfocus': () => {\n              this.outputManager.unmarkNode(node.id);\n              node.meta.hasOutputFocus = false;\n            },\n          }\n        }\n        return {\n          'Focus': () => {\n            this.outputManager.markNode(node.id);\n            node.meta.hasOutputFocus = true;\n          },\n        };\n      }\n    });\n\n    this.outputManager.setEditor(this.editor);\n\n\n    this.engine = new Engine('minecraft-web-app@0.1.0');\n\n    for (const componentKey in this.components) {\n      let component = this.components[componentKey];\n\n      this.editor.register(component);\n      this.engine.register(component);\n    }\n\n    this.editor.on(['nodecreated'], (async () => {\n      await this.engine.abort();\n      await this.engine.process(this.editor.toJSON());\n    }) as any);\n\n    this.editor.on(['process', 'connectioncreated', 'connectionremoved'], async () => {\n      this.editor.selected.clear();\n      this.editor.nodes.map(n => n.update());\n      \n      await this.engine.abort();\n      await this.engine.process(this.editor.toJSON());\n      \n      this.nodeService.parseFromEditor(this.editor.toJSON());\n      this.updateCriticalPath();\n\n      this.outputManager.update( this.editor.nodes );\n\n    });\n\n    this.editor.on('noderemoved', async (node) => {\n      this.editor.selected.clear();\n      this.editor.nodes.map(n => n.update());\n      \n      await this.engine.abort();\n      await this.engine.process(this.editor.toJSON());\n      \n      this.nodeService.parseFromEditor(this.editor.toJSON());\n      this.updateCriticalPath();\n\n      this.outputManager.unmarkNode(node.id);\n      this.outputManager.update( this.editor.nodes );\n    });\n\n    this.editor.on('click', () => {\n      this.editor.selected.clear();\n      this.editor.nodes.map(n => n.update());\n    })\n\n    this.engine.on('error', (message) => {\n      console.log(message);\n    });\n\n    // Removes the context menu on the grid\n    this.editor.events['showcontextmenu'].push(({ e, node }) => {\n      return Boolean(node);\n    });\n    \n    this.editor.view.resize();\n    this.editor.trigger('process');\n  }\n\n  updateCriticalPath() {\n    let criticalPath = this.nodeService.getCriticalPath();\n    this.completePath = false;\n\n    this.editor.nodes.forEach(value => {\n      value.meta.criticalPath = false;\n\n      let control = <ResourceControl>value.controls.get('resource');\n      if (!control) { return; }\n      control.props.criticalPath = false;\n    })\n\n    criticalPath.forEach( value => {\n      let node_ref = this.editor.nodes.find(n => n.id === value);\n      node_ref.meta.criticalPath = true;\n\n      let control = <ResourceControl>node_ref.controls.get('resource');\n      control.props.criticalPath = true;\n\n      this.completePath = true;\n    });\n  }\n  \n  dragOver(event) {\n    event.preventDefault();\n\n    event.dataTransfer.dropEffect = \"copy\";\n  }\n\n  onDrop(event) {\n    event.preventDefault();\n\n    const type = event.dataTransfer.getData(\"nodeType\");\n    const id = event.dataTransfer.getData(\"nodeId\") as number;\n\n    // Does not add item with invalid id\n    if (id == UNKNOWN_ITEM.id) {\n      console.error(\"Cannot create node for unknown item\");\n    } else {\n      this.createNode(type, id, event.clientX, event.clientY, true);\n    }\n  }\n\n  deleteNode() {\n    this.editor.selected.list.forEach(value => {\n      this.editor.removeNode(value);\n    })\n\n    this.editor.selected.list = [];\n  }\n\n  anyNodeSelected(): boolean {\n    return this.editor != null && this.editor.selected.list.length > 0;\n  }\n\n  scaleToFit() {\n    let editorBounds: [number, number] = [this.editor.view.area.container.clientWidth, this.editor.view.area.container.clientHeight];\n    \n    let firstPass = true;\n    let topLeftBounds: [number, number] = [0, 0]; // Towards the negative\n    let bottomRightBounds: [number, number] = [0, 0]; // Towards the positive\n    \n    this.editor.nodes.forEach(value => {\n      if (firstPass || topLeftBounds[0] > value.position[0]) {\n        topLeftBounds[0] = value.position[0];\n      }\n      if (firstPass || topLeftBounds[1] > value.position[1]) {\n        topLeftBounds[1] = value.position[1];\n      }\n      \n      if (firstPass || bottomRightBounds[0] < value.position[0] + 200) {\n        bottomRightBounds[0] = value.position[0] + 200;\n      }\n      if (firstPass || bottomRightBounds[1] < value.position[1] + 250) {\n        bottomRightBounds[1] = value.position[1] + 250\n      };\n      \n      firstPass = false;\n    })\n    \n    let nodeBounds: [number, number] = [bottomRightBounds[0] - topLeftBounds[0] + 50, bottomRightBounds[1] - topLeftBounds[1] + 50];\n    let nodeCenter: [number, number] = [topLeftBounds[0] + nodeBounds[0] * .5, topLeftBounds[1] + nodeBounds[1] * .5];\n    \n    let transform: Transform = {k: 1, x: 0, y: 0}; \n    \n    // Calculate the scale\n    let sizeDifference = [editorBounds[0] / nodeBounds[0], editorBounds[1] / nodeBounds[1]];\n    let widthLonger = sizeDifference[0] < sizeDifference[1];\n    if (widthLonger) {\n      transform.k = sizeDifference[0];\n      \n    }\n    else {\n      transform.k = sizeDifference[1];\n    }\n    \n    let editorCenter: [number, number] = [editorBounds[0] * .5, editorBounds[1] * .5];\n    let centerDifference: [number, number] = [(nodeCenter[0] - 25) * transform.k - editorCenter[0], (nodeCenter[1] - 25) * transform.k - editorCenter[1]];\n    \n    transform.x = -centerDifference[0];\n    transform.y = -centerDifference[1];\n    \n    this.editor.view.area.transform = transform;\n    this.editor.view.area.update();\n  }\n\n  startCollapseSequence() {\n    let modelRef = this.modalService.open(CustomNodeModal);\n    modelRef.result.then((nodeCreationData: CustomNodeMetadata) => {\n      this.collapseToNode(nodeCreationData);\n    })\n      \n    let modal = modelRef.componentInstance as CustomNodeModal;\n    modal.setItmeIds([1, 2, 3, 4, 5, 92, 23, 103]);\n  }\n\n  collapseToNode( nodeCreationData: CustomNodeMetadata) {\n    let nodeOutputs = this.nodeService.getAllOutputs();\n\n    let result = this.nodeService.calculateCustomNodeFromOutputs(nodeOutputs);\n\n    let connectedNodes = result[0];\n    let customNodeData = result[1];\n\n    customNodeData.meta = nodeCreationData;\n    this.nodeService.SaveCustomNode(customNodeData).then(value => {\n      // Removes the nodes and replaces it with a custom version of the node\n    let location: [number, number] = [0, 0];\n    let removedNodes: number = 0;\n    connectedNodes.forEach(nodeToRemove => {\n      let node = this.editor.nodes.find(node => nodeToRemove === node.id);\n\n      location[0] += node.position[0];\n      location[1] += node.position[1];\n      removedNodes++;\n\n      this.editor.removeNode(node);\n    });\n\n    location[0] /= removedNodes;\n    location[1] /= removedNodes;\n\n\n\n    this.createNode(\"Custom\", value, location[0], location[1], false);\n    });\n  }\n\n  // Reference - https://prasanthj.com/javascript/convet-div-to-image-in-angular/\n  captureScreen() {\n    // Solution is to change the size of the svg before I write the canvas\n    this.fixSVGConnections();\n    \n    html2canvas(document.body, {\n      // foreignObjectRendering: true,\n    }).then(canvas => {\n      canvas.toBlob(blob => {\n        let link = document.createElement(\"a\");\n        link.download = \"Screenshot.png\";\n        link.href = URL.createObjectURL(blob);\n        link.click();\n      })\n\n      this.resetConnections();\n    })\n\n\n  }\n\n  connections: HTMLCollectionOf<Element>;\n  // fixSVGConnections must be run before resetConnections to populate the connections structure\n  private fixSVGConnections() {\n    this.connections = document.getElementsByClassName(\"connection\");\n    for (let index = 0; index < this.connections.length; ++index) {\n      let connection = <HTMLElement>this.connections.item(index);\n\n      this.zeroOutConnectionPath(connection);\n    }\n  }\n\n  pathParentPadding = [5, 10];\n  // TODO: Fix connections that go from low to high\n  private zeroOutConnectionPath( connection: HTMLElement ) {\n    let parent = connection.parentElement;\n    let path = connection.children.item(0);\n\n    let svgPath = path.getAttribute('d');\n    let pathElements = svgPath.split(' ');\n\n    let pathStart = [parseInt(pathElements[1]), parseInt(pathElements[2])];\n    let pathEnd = [parseInt(pathElements[8]), parseInt(pathElements[9])];\n\n    // Get top left point for the path with a border of 5px\n    let topLeft = [Math.min(pathStart[0], pathEnd[0]) - this.pathParentPadding[0], Math.min(pathStart[1], pathEnd[1]) - this.pathParentPadding[1]];\n    let bottomRight = [Math.max(pathStart[0], pathEnd[0]) + this.pathParentPadding[0], Math.max(pathStart[1], pathEnd[1]) + this.pathParentPadding[1]];\n    let dimensions = [bottomRight[0] - topLeft[0], bottomRight[1] - topLeft[1]];\n\n    // Offset the path points\n    // Set the parent to the top left point\n    parent.style.top = topLeft[1].toString() + \"px\";\n    parent.style.left = topLeft[0].toString() + \"px\";\n\n    // Offset the start path points \n    pathElements[1] = (pathStart[0] - topLeft[0]).toString();\n    pathElements[2] = (pathStart[1] - topLeft[1]).toString();\n    \n    // Offset the end path points\n    pathElements[8] = (pathEnd[0] - topLeft[0]).toString();\n    pathElements[9] = (pathEnd[1] - topLeft[1]).toString();\n\n    // Set the slope points to the axis aligned point at the end of the path\n    pathElements[4] = pathElements[8];\n    pathElements[5] = pathElements[2];\n    pathElements[6] = pathElements[1];\n    pathElements[7] = pathElements[9];\n\n    // Actually calculate the width and the height\n    connection.setAttribute(\"width\", dimensions[0].toString())\n    connection.setAttribute(\"height\", dimensions[1].toString())\n\n    let newPath = pathElements.join(' ');\n    path.setAttribute('d', newPath);\n  }\n\n  private resetConnections() {\n    for (let index = 0; index < this.connections.length; ++index) {\n      let connection = <HTMLElement>this.connections.item(index);\n\n      this.resetConnectionPath(connection);\n    }\n\n    this.editor.nodes.forEach(node => {\n      this.editor.view.updateConnections({ node: node } );\n    })\n  }\n\n  private resetConnectionPath( connection: HTMLElement) {\n    let parent = connection.parentElement;\n    let path = connection.children.item(0);\n\n    let svgPath = path.getAttribute('d');\n    let pathElements = svgPath.split(' ');\n\n    let pathStart = [parseInt(pathElements[1]), parseInt(pathElements[2])];\n    let pathEnd = [parseInt(pathElements[8]), parseInt(pathElements[9])];\n\n    // Get top left point for the path with a border of 5px\n    let topLeft = [Math.min(pathStart[0], pathEnd[0]) - this.pathParentPadding[0], Math.min(pathStart[1], pathEnd[1]) - this.pathParentPadding[1]];\n\n    // Offset the path points\n    // Set the parent to the top left point\n    parent.style.top = \"0px\";\n    parent.style.left = \"0px\";\n\n    connection.removeAttribute('width')\n    connection.removeAttribute('height');\n  }\n  \n  private async createNode(nodeType: string, nodeId: number | string, x: number, y: number, fromMouse: boolean = false) {\n    if (this.components.hasOwnProperty(nodeType)) {\n      let component;\n      if (nodeType == \"Custom\") {\n        component = await this.components[nodeType].createNode({ custom: nodeId });\n      } else {\n        component = await this.components[nodeType].createNode({ resource: this.itemService.GetItemFromId(nodeId as number) });\n      }\n\n\n      let position: [number, number] = [0, 0];\n      if (fromMouse) {\n        let transform = this.editor.view.area.transform;\n        position = [(x - transform.x - 75) / transform.k, (y - transform.y - 125) / transform.k] as [number, number];\n      }\n      else {\n        position = [x, y];\n      }\n\n      component.position = position;\n      this.editor.addNode(component);\n    }\n  }\n}\n","<div class=\"grid-wrapper module-margin\" (dragover)=\"dragOver($event)\" (drop)=\"onDrop($event)\">\n    <div id=\"grid-toolbar-container\" class=\"pixelated minecraft-background\">\n        <div class=\"gird-toolbar-buttons\">\n\n            <app-icon-button class=\"toolbar-button\" [icon]=\"'bi-aspect-ratio'\" \n                [strokes]=\"['M1 8a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 0 1h-13A.5.5 0 0 1 1 8zm7-8a.5.5 0 0 1 .5.5v3.793l1.146-1.147a.5.5 0 0 1 .708.708l-2 2a.5.5 0 0 1-.708 0l-2-2a.5.5 0 1 1 .708-.708L7.5 4.293V.5A.5.5 0 0 1 8 0zm-.5 11.707-1.146 1.147a.5.5 0 0 1-.708-.708l2-2a.5.5 0 0 1 .708 0l2 2a.5.5 0 0 1-.708.708L8.5 11.707V15.5a.5.5 0 0 1-1 0v-3.793z']\"\n                [disabled]=\"!completePath\"\n                (onClick)=\"startCollapseSequence()\">\n            </app-icon-button>\n\n            <app-icon-button class=\"toolbar-button\" [icon]=\"'bi-aspect-ratio'\" \n                [strokes]=\"['M0 3.5A1.5 1.5 0 0 1 1.5 2h13A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 12.5v-9zM1.5 3a.5.5 0 0 0-.5.5v9a.5.5 0 0 0 .5.5h13a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5h-13z', \n                'M2 4.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1H3v2.5a.5.5 0 0 1-1 0v-3zm12 7a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1 0-1H13V8.5a.5.5 0 0 1 1 0v3z']\"\n                (onClick)=\"scaleToFit()\">\n            </app-icon-button>\n            \n            <app-icon-button id=\"screen-capture\" class=\"toolbar-button\" [icon]=\"'bi-download'\" \n                [strokes]=\"['M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5z',\n                'M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z']\"\n                \n                (onClick)=\"captureScreen()\">\n            </app-icon-button>\n\n            <app-icon-button id=\"expandToolbar\" class=\"toolbar-button\" [icon]=\"'bi-three-dots'\" \n                [strokes]=\"['M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z']\"\n                \n                data-toggle=\"collapse\"\n                data-target=\"#grid-toolbar-popout\">\n            </app-icon-button>\n\n\n        </div>\n\n        <div id=\"grid-toolbar-popout\" class=\"popout-window collapse\">\n            <div>\n                <p>Collapse To Node</p>\n            </div>\n            <div>\n                <p>Show Workspace</p>\n            </div>\n            <div>\n                <p>Download Image</p>\n            </div>\n        </div>  \n\n    </div>\n    \n    <div #nodeEditor class=\"node-editor\"></div>\n\n    <div id=\"delete-container\" (mouseup)=\"deleteNode()\">\n        <label class=\"button\" [ngClass]=\"anyNodeSelected() ? ['danger', 'pixelated', 'minecraft-background'] : 'disabled'\">\n            <p>Delete</p>\n        </label>\n    </div>\n</div>\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SessionService } from './general/service/session.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  enteredId: boolean = false;\n  idString: string = \"\";\n\n  constructor(private route: ActivatedRoute, private sessionService: SessionService) {\n    this.route.queryParams.subscribe(params => {\n      if (params.id)\n      {\n        this.sessionService.setSession(params.id);\n        this.enteredId = true;\n      }\n    })\n  }\n\n  submitDisabled() {\n    return this.idString === '';\n  }\n\n  submit() {\n    this.sessionService.setSession(this.idString);\n    this.enteredId = true;\n  }\n}\n","<div class=\"fill-width fill-height\">\n    <div  *ngIf='!enteredId' class=\"manual-id-input-container\">\n        <div class=\"input-group input-group mb-3\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\" id=\"inputGroup-sizing\">Enter ID</span>\n            </div>\n            <input type=text oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\n                placeholder=\"123456789\"\n                [(ngModel)]=\"idString\"\n                class=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\">\n\n        </div>\n        <button class=\"btn btn-primary submit\" (click)=\"submit()\" [disabled]=\"submitDisabled()\">\n            Submit\n        </button>\n    </div>\n\n    <div id=\"fullsite\" *ngIf='enteredId' class=\"fill-width fill-height\">\n        <div id=\"workspace\">\n            <app-grid></app-grid>\n            \n            <div id=\"resource-workspace\">\n                <div id=\"node-browser-workspace\" class=\"left\">\n                    <app-node-browser></app-node-browser>\n                </div>\n                <div id=\"minecraft-inventory-workspace\" class=\"right\">\n                    <app-inventory-display></app-inventory-display>\n                </div>\n            </div>\n        </div>\n        <div id=\"resultspace\">\n            <app-output-container></app-output-container>\n        </div> \n    </div>\n</div>\n\n","import { CustomOutput } from './../shared/custom-output';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport { CustomNodeData, ShareLevel } from './../shared/custom.model';\nimport { Connection } from './../shared/connection.model';\nimport { SocketController } from './sockets';\nimport { ItemService } from '../services/item.service';\nimport { NodeService } from '../services/node.service';\nimport { Component, Input, Node } from 'rete';\nimport { ResourceControl } from './controls/resource-control/resource-control';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nlet defaultCustomData: CustomNodeData = {\n  uuid: \"THIS IS SET FROM THE SERVER\",\n  uniqueUserId: \"SERVER\",\n  meta: {\n    name: \"Bookshelves\",\n    shareLevel: ShareLevel.Personal,\n    icon: 92,\n  },\n  inputs: [338, 334, 23],\n  outputs: {\n    92: {\n      inputRate: { 338: .11, 334: .33, 23: .66 },\n      createdAmount: 1\n    }\n  },\n};\n\n\nexport class CustomNode extends Component {\n\n  constructor(private socketController: SocketController, private itemService: ItemService, private nodeService: NodeService) {\n    super('Custom');\n  }\n\n  builder(node: Node): any {\n    node.data['customization'] = defaultCustomData;\n    this.updateNodeStructure(node);\n\n    node.meta.type = 'custom'\n    \n    return node;\n  }\n\n  worker(node: NodeData, inputs: WorkerInputs, outputs: WorkerOutputs) {\n    // Define the datagrams to output\n    let datagramOutputs: { [index: number]: Connection } = {};\n    node.data.inputTree = [];\n    let customData = <CustomNodeData>node.data.customization;\n    let customIcon = this.itemService.GetItemFromId(customData.meta.icon);\n\n    \n    var node_ref = this.editor.nodes.find(value => { return value.id == node.id });\n    var control = node_ref.controls.get(\"resource\") as ResourceControl;\n    if( !control ) { return; }   // If there is no control, skip for right now\n    control.props.selectedItem = customIcon;\n    \n    // For each output calculate the critical path based on their inputs\n    for (let outputId in customData.outputs) {\n      let missingInput = false;\n      let perHour = Infinity;\n      let output = customData.outputs[outputId];\n\n      // Create the initial datagram for the output\n      datagramOutputs[outputId] = new Connection(node.id, parseInt(outputId), output.createdAmount, perHour);\n\n      // For each of the inputs, calculate the per hour rate\n      for (let inputId in output.inputRate) {\n        let input = <Connection>inputs[inputId][0];\n        \n        if (input && !missingInput) {\n          let possiblePerHour = output.inputRate[inputId] * input.perHour * input.amount;\n          if (possiblePerHour < perHour) {\n            perHour = possiblePerHour;\n          }\n        } else {\n          perHour = Infinity;\n          missingInput = true;\n        }\n\n        // Add the input to the datagram tree\n        if (input) {\n          datagramOutputs[outputId].transitionCost.push(output.inputRate[inputId]);\n          datagramOutputs[outputId].tree.push(input);\n\n          // Look to see if the connection is already added as an input\n          let connectionPresent = (<Connection[]>node.data.inputTree).find(value => {\n            return value.itemId == input.itemId;\n          });\n        \n          // Update the inputTree\n          if (!connectionPresent) {\n            (<any[]>node.data.inputTree).push(input);\n          }\n        }\n      }\n\n      // Update the datagram with the smallest per hour rate for this output\n      datagramOutputs[outputId].perHour = perHour;\n      let outputControl: CustomOutput = <CustomOutput>node_ref.outputs.get(outputId);\n      outputControl.data.rate = perHour;\n    }\n\n    // Find the smallest critical path time for the global critical path\n    let smallestPerHour: {index: any, perHour: number} = {index: 0, perHour: Infinity};\n    for (let outputIndex in datagramOutputs) {\n      let datagram = datagramOutputs[outputIndex];\n      if (smallestPerHour.perHour > datagram.perHour) {\n        smallestPerHour.index = outputIndex;\n        smallestPerHour.perHour = datagram.perHour;\n      }\n\n      // Add the datagrams to the output indexes\n      outputs[outputIndex] = datagramOutputs[outputIndex];\n    }\n  }\n\n  private updateNodeStructure(node: Node) {\n    this.nodeService.GetCustomNode(node.data['custom'] as string).then(customization => {\n      if (!customization) {\n        throw new Error(\"Failed to get Custom Node Data for ID: \" + node.data['custom']);\n      }\n      node.data.name = customization.meta.name;\n      node.data['customization'] = customization;\n  \n      // Add a ResourceControl to the node, temporaraly set icon to crafting table\n      var control = new ResourceControl(this.editor, 'resource', true);\n      control.props.readonly = true;\n      node.addControl(control);\n      \n      // Add the starting data to the control\n      control.putData('resource', this.itemService.GetItemFromId(customization.meta.icon));\n      \n      var custom: CustomNodeData = node.data.customization as any;\n      custom.inputs.forEach(id => {\n        var item = this.itemService.GetItemFromId(id);\n        var input = new Input(\"\" + item.id, item.name, this.socketController.GetSocketForId(item.id), false);\n        node.addInput(input);\n      });\n\n      for (let outputIndex in custom.outputs) {\n        let item = this.itemService.GetItemFromId(parseInt(outputIndex));\n        var output = new CustomOutput(\"\" + item.id, item.name, this.socketController.GetSocketForId(item.id), false);\n        output.data.rate = Infinity;\n        node.addOutput(output);\n      }\n    })\n  }\n}","import { Color } from './color.model';\nimport { Recipe } from './recipe.model';\n\nexport const UNKNOWN_ITEM = {\n  id: -1,\n  name: \"Unknown\",\n  index: [14, 0],\n  craftable: false,\n\n  primaryColor: new Color(255, 0, 255),\n  secondaryColor: new Color(0, 255, 255)\n}\n\nexport class Item {\n  public id!: number;\n  public name!: string;\n  public index: any;\n  public craftable: boolean;\n  public createdAmount?: number;\n  public recipe?: Recipe;\n\n  public primaryColor: Color;\n  public secondaryColor: Color;\n\n  constructor(id: number, name: string) {\n    this.id = id;\n    this.name = name;\n  }\n}","import { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InventoryModule } from './inventory/inventory.module';\nimport { OutputModule } from './output/output.module';\nimport { SocketController } from './rete-modules/nodes/sockets';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { AppComponent } from './app.component';\nimport { CustomReteModule } from './rete-modules/custom-rete.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    CustomReteModule,\n    OutputModule,\n    InventoryModule,\n    NgbModule,\n  ],\n  providers: [SocketController],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n","import { AppModule } from './../app.module';\nimport { GeneralModule } from './../general/general.module';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OutputContainerComponent } from './output-container/output-container.component';\nimport { OutputManagerService } from './services/output-manager.service';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { OutputItemComponent } from './output-item/output-item.component';\nimport { GraphViewComponent } from './graph-view/graph-view.component';\nimport { GraphItemComponent } from './graph-item/graph-item.component';\n\n\n@NgModule({\n  declarations: [OutputContainerComponent, OutputItemComponent, GraphViewComponent, GraphItemComponent],\n  imports: [\n    CommonModule,\n    NgxChartsModule,\n    FormsModule,\n    GeneralModule,\n  ],\n  exports: [OutputContainerComponent,\n  ],\n  providers: [OutputManagerService]\n})\nexport class OutputModule { }\n","/** Current issue with ngx-charts \n *    Legend height is not calculated in auto height when using legend=\"below\"\n *    Results in incorrect styling when not defining a view=[x,y] for responsive design\n * \n *    Current open pull request #1520 on ngx-charts github. Oct 1, 2020\n * \n *    https://github.com/swimlane/ngx-charts/pull/1520\n */\n\nimport { ItemService } from 'src/app/rete-modules/services/item.service'\nimport { NodeService } from 'src/app/rete-modules/services/node.service';\nimport { OutputManagerService } from './../services/output-manager.service';\nimport { Component, HostListener, Input, OnInit } from '@angular/core';\nimport { Node } from 'rete';\nimport { Color } from 'src/app/general/model/color.model';\n\nclass LineChartData\n{\n  public name: string = \"data\";\n  public series: { name: string, value: number }[];\n\n  constructor(name: string, perHourRate: number, steps: number, stepSize: number) {\n    this.name = name;\n\n    this.series = [];\n    for (let step = 0; step < steps; step++){\n      if (perHourRate == 0 || perHourRate == Infinity) {\n        continue;\n      }\n      this.series.push( {\"name\":String(step*stepSize), \"value\":step*stepSize*perHourRate })\n    }\n  }\n}\n\n\nconst plannedWidth = 1920;\n\n\n@Component({\n  selector: 'app-graph-item',\n  templateUrl: './graph-item.component.html',\n  styleUrls: ['./graph-item.component.sass']\n})\nexport class GraphItemComponent implements OnInit {\n  @Input() node: Node; \n\n  // Line Chart Data\n  public lineView: number[] = [400, 250];\n  public timeline: boolean = true;\n  public primaryData: any[] = [];\n\n  // Bar Chart Data\n  public secondaryData: any[] = [];\n  public barView: number[]  = [100, 100];\n  \n  // Pie Chart Data\n  public tertiaryData: any[] = [];\n  public pieView: number[] = [100, 100]\n  public showPieLabels: boolean = false;\n\n  // Universal data\n  public gradient: boolean = true;\n  public itemName: string = \"Loading\";\n  public id: number = 0;\n\n  // Temporary\n  legend: boolean = true;\n  showLabels: boolean = true;\n  animations: boolean = true;\n  xAxis: boolean = true;\n  yAxis: boolean = true;\n  showYAxisLabel: boolean = true;\n  showXAxisLabel: boolean = true;\n  xAxisLabel: string = 'Year';\n  yAxisLabel: string = 'Population';\n\n  colorSchemeLine = {\n    domain: []\n  };\n\n  colorSchemeBar = {\n    domain: []\n  };\n\n  colorSchemePie = {\n    domain: []\n  };\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    let ratio = (event.target.innerWidth / plannedWidth)\n    this.barView[0] = (this.lineView[0] / 2.2) * ratio;\n    this.pieView[0] = (this.lineView[0] / 2.2) * ratio;\n  }\n\n  constructor(private outputManagerService: OutputManagerService, private nodeService: NodeService, private itemService: ItemService) {\n    \n   }\n\n  ngOnInit(): void {\n    let ratio = window.innerWidth / plannedWidth;\n    this.barView[0] = (this.lineView[0] / 2.2) * ratio;\n    this.pieView[0] = (this.lineView[0] / 2.2) * ratio;\n    this.outputManagerService.bindOnNodeUpdate(this.node.id, val => {\n      this.node = val;\n\n      this.updateData();\n\n      this.itemName = this.node.data['resource']['name'];\n      this.id = this.node.id;\n    })\n\n    this.updateData();\n  }\n\n \n  private updateData() {\n    this.primaryData = [];\n    this.secondaryData = [];\n    this.tertiaryData = [];\n\n    this.colorSchemeLine.domain = [];\n    this.colorSchemeBar.domain = [];\n    this.colorSchemePie.domain = [];\n\n    let nodeData = this.node.data;\n    let nodePerHour = <number>nodeData['perHour'];\n    let outputData = new LineChartData(nodeData['resource']['name'], nodePerHour, 6, 10);\n    this.primaryData.push(outputData)\n    this.colorSchemeLine.domain.push(this.itemService.GetItemPrimaryColor(nodeData['resource']['id']).toHex());\n\n    let localNode = this.nodeService.getNodeTreeItem(this.node.id);\n    let result = this.nodeService.calculateCustomNodeFromOutputs( localNode ? [localNode] : [] );\n    let nodeIds = result[0];\n    let calcuatedInputData = result[1];\n\n    let highestRate = 0;\n    let totalRates = 0;\n    let inputRates: { [id: number]: number } = {};\n\n    //TODO: This does not work for custom nodes. Need to separate graphs based on outputs\n    for (let outputId in calcuatedInputData.outputs) {\n      let output = calcuatedInputData.outputs[outputId];\n\n      calcuatedInputData.inputs.forEach(inputId => {\n        let inputRate = calcuatedInputData.outputs[outputId].createdAmount * calcuatedInputData.outputs[outputId].inputRate[inputId];\n        nodeIds.forEach(value => {\n          let node = this.outputManagerService.getNodeById(value);\n          if (node.data['resource']['id'] == inputId) {\n            inputRate *= <number>node.data['perHour'];\n          }\n        })\n\n        if (inputRate > highestRate) {\n          highestRate = inputRate;\n        }\n  \n        inputRate -= nodePerHour;\n        totalRates += inputRate;\n  \n        inputRates[inputId] = inputRate;\n      })\n    }\n\n    totalRates += nodePerHour;\n\n    for (let inputId in inputRates) {\n      let inputRate = inputRates[inputId];\n      let inputItem = this.itemService.GetItemFromId(parseInt(inputId));\n\n      // If we are generating excess resources. Add to the primaryData table\n      if (inputRate > 0) {\n        let outputData = new LineChartData(inputItem.name, inputRate, 6, 10);\n        this.primaryData.push(outputData);\n        this.colorSchemeLine.domain.push(this.itemService.GetItemPrimaryColor(inputItem.id).toHex());\n      }\n\n      let utilization = inputRate / highestRate;\n\n      if (Math.abs(utilization - 1) > .00001) {\n        this.secondaryData.push({ \"name\": inputItem.name, \"value\": (1 - utilization) * 100 });\n        let color = this.itemService.GetItemPrimaryColor(inputItem.id);\n\n        this.AddToLegend(inputItem.name, color);\n        this.colorSchemeBar.domain.push(this.itemService.GetItemPrimaryColor(inputItem.id).toHex());\n      }\n      \n      if (Math.abs(inputRate - 0) > .00001) {\n        this.tertiaryData.push({ \"name\": inputItem.name, \"value\": inputRate / totalRates });\n        let color = this.itemService.GetItemPrimaryColor(inputItem.id);\n\n        this.AddToLegend(inputItem.name, color);\n        this.colorSchemePie.domain.push(this.itemService.GetItemPrimaryColor(inputItem.id).toHex());\n      }\n    }\n    \n    // Add the output item to the output ratios\n    if (nodePerHour != Infinity) {\n      this.tertiaryData.push({ \"name\": nodeData['resource']['name'], \"value\": nodePerHour / totalRates });\n      let color = this.itemService.GetItemPrimaryColor(nodeData['resource']['id']);\n\n      this.AddToLegend(nodeData['resource']['name'], color);\n      this.colorSchemePie.domain.push(color.toHex());\n    }\n  }\n\n\n  private AddToLegend( name: string, color: Color) {\n    let found = this.primaryData.find(value => {\n      return value['name'] == name\n    })\n\n    if (found) { return; }\n    \n    let legendData = new LineChartData(name, 0, 0, 0);\n    this.primaryData.push(legendData);\n    this.colorSchemeLine.domain.push(color.toHex());\n  }\n}\n","<div class=\"graph-container pixelated minecraft-background\">\n    <div class=\"title-container\">\n        <div class=\"title text-node-title\">\n            {{itemName}}\n        </div>\n        <div class=\"id text-node-type\">\n            {{id}}\n        </div>\n    </div>\n\n    <div class=\"line-chart-container\">\n        <div class=\"line-chart-title\">\n            Resources Over Time\n        </div>\n        <div class=\"line-chart\">\n            <ngx-charts-line-chart\n                [scheme]=\"colorSchemeLine\"\n                [results]=\"primaryData\"\n                legend=\"true\"\n                legendPosition=\"bottom\"\n                xAxis=\"true\"\n                yAxis=\"true\"\n                showXAxisLabel=\"true\"\n                showYAxisLabel=\"true\"\n                xAxisLabel=\"Time\"\n                yAxisLabel=\"Amount\">\n            </ngx-charts-line-chart>\n        </div>\n    </div>\n\n    <div class=\"extra-graphs-container\">\n\n        <div class=\"bar-chart-container\">\n            <div class=\"bar-chart-title\">\n                Resource Allocation\n            </div>\n            <ngx-charts-bar-vertical\n                [view]=\"barView\"\n                [scheme]=\"colorSchemeBar\"\n                [(results)]=\"secondaryData\"\n                [gradient]=\"gradient\"\n                yAxis=\"true\">\n            </ngx-charts-bar-vertical>\n        </div>\n\n        <div class=\"pie-chart-container\">\n            <div class=\"pie-chart-title\">\n                Output Ratios\n            </div>\n            <ngx-charts-pie-chart\n                [view]=\"pieView\"\n                [scheme]=\"colorSchemePie\"\n                [results]=\"tertiaryData\"\n                [gradient]=\"gradient\"\n                [labels]=\"showPieLabels\">\n            </ngx-charts-pie-chart>\n        </div>\n    </div>\n</div>\n","import { Item } from './../../general/model/item.model';\nimport { Component, Input, Node } from 'rete';\nimport { SocketController } from './sockets';\nimport { ResourceControl } from './controls/resource-control/resource-control';\n\nexport class OutputNode extends Component {\n\n  constructor(private socketController: SocketController) {\n    super('Output');\n  }\n\n  builder(node) {\n    var control = new ResourceControl(this.editor, 'resource');\n    control.props.readonly = true;\n    node.addControl(control);\n\n    node.meta.type = 'output'\n    node.data.name = 'Output'\n\n    this.updateNodeStructure(node);\n\n    return node;\n  }\n\n  worker(node, inputs, outputs) {\n    var perHourBottleneck = Infinity;\n    \n    if (inputs && inputs['resource'] && inputs['resource'][0]) {\n      perHourBottleneck = inputs['resource'][0].perHour * inputs['resource'][0].amount;\n      \n      // Store the completed input tree\n      node.data.inputTree = [];\n      node.data.inputTree.push(inputs['resource'][0]);\n    } else {\n      node.data.inputTree = null;\n    }\n    \n    node.data.perHour = perHourBottleneck;\n    node.data.amount = 1;\n    \n    var node_ref = this.editor.nodes.find(n => n.id === node.id);\n    let control = <ResourceControl>node_ref.controls.get('resource');\n    control.setRate(perHourBottleneck);\n  }\n\n  private updateNodeStructure(node: Node ) {\n    // node.getConnections().forEach(element => {\n    //   this.editor.removeConnection(element);\n    // });\n\n    // node.outputs.clear();\n    var item = <Item>node.data.resource;\n\n    var input = new Input(\"resource\", item.name, this.socketController.GetSocketForId(item.id), false);\n    node.addInput(input);\n    \n    this.editor.trigger('nodeselected');\n  }\n}","import { GeneralModule } from './../general/general.module';\nimport { HttpMinecraftInventoryService } from './services/http-minecraft-inventory.service';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MinecraftInventoryService } from './services/minecraft-inventory.service';\nimport { InventoryDisplayComponent } from './inventory-display/inventory-display.component';\nimport { InventoryItemComponent } from './inventory-item/inventory-item.component';\n\n\n\n@NgModule({\n  declarations: [InventoryDisplayComponent, InventoryItemComponent],\n  imports: [\n    CommonModule,\n    GeneralModule\n  ],\n  providers: [{ provide: MinecraftInventoryService, useClass: HttpMinecraftInventoryService }],\n  exports: [ InventoryDisplayComponent ],\n})\nexport class InventoryModule { }\n","import { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionService {\n  private sessionId: string = \"NO_SESSION\";\n  private hasBeenSet = false;\n\n  constructor() {\n  }\n\n  setSession( newSession ) {\n    if (this.hasBeenSet) {\n      console.error(\"WARNING: Session is already set\");\n    }\n\n    this.sessionId = newSession;\n  }\n\n  getSession(): string {\n    if (!this.hasBeenSet) {\n      console.error(\"WARNING: Session has not be set\");\n    }\n\n    return this.sessionId;\n  }\n\n  buildPostWithSession(bodyTag: string, body: any) {\n    let postBody: any = {};\n    postBody.sessionId = this.sessionId;\n\n    if (bodyTag !== \"\") {\n      postBody[bodyTag] = body;\n    }\n\n    return postBody;\n  }\n}\n","import { Item } from './../../general/model/item.model';\n\nexport class Connection {\n  public nodeId: number;\n  public itemId: number;\n  public amount: number;\n  public perHour: number;\n  public transitionCost: number[];\n  public tree: Connection[];\n\n  constructor(nodeId: number, itemId: number, amount: number, perHour: number) {\n    this.nodeId = nodeId;\n    this.itemId = itemId;\n    this.amount = amount;\n    this.perHour = perHour;\n    this.transitionCost = [];\n    this.tree = [];\n  }\n\n  public getAllConnectionNodeIds(): number[] {\n    let nodeIds: number[] = [];\n    let treeStack: Connection[] = [];\n    treeStack.push(this);\n\n    while (treeStack.length > 0) {\n      let currentConnection = treeStack.pop();\n      if (currentConnection) {\n        nodeIds.push(currentConnection.nodeId);\n  \n        currentConnection.tree.forEach(value => {\n          if (!nodeIds.includes(value.nodeId)) {\n            treeStack.push(value);\n          }\n        })\n      }\n\n    }\n\n    return nodeIds;\n  }\n}","import { Item } from './../../general/model/item.model';\nimport { Connection } from './../shared/connection.model';\nimport { Component, Output, Node } from 'rete';\nimport { SocketController } from './sockets';\nimport { ResourceControl } from './controls/resource-control/resource-control';\nimport { MinecraftInventoryService } from 'src/app/inventory/services/minecraft-inventory.service';\n\nexport class MinecraftNode extends Component {\n\n  constructor(private socketController: SocketController, private minecraftInventoryService: MinecraftInventoryService) {\n    super('Minecraft');\n  }\n\n  builder(node) {\n    var control = new ResourceControl(this.editor, 'resource');\n    control.props.readonly = true;\n    control.props.selectedItem = node.data.resource;\n    node.addControl(control);\n\n    node.meta.type = 'minecraft'\n    node.data.name = 'Minecraft';\n    \n    this.updateNodeStructure(node);\n    this.minecraftInventoryService.AssignInventoryUpdateCallback(this, node.id, node.data.resource.id, this.updateAverage);\n\n    return node;\n  }\n\n  worker(node, input, outputs) {\n    let datagram = new Connection(node.id, node.data.resource.id, node.data.amount, node.data.perHour);\n    outputs['resource'] = datagram;\n  }\n\n  public updateAverage(nodeNumber: number, avg: number) {\n    let node_ref: Node = this.editor.nodes.find(n => n.id === nodeNumber);\n\n    if (node_ref) {\n      let resourceContol = node_ref.controls.get('resource') as ResourceControl;\n      resourceContol.onChangeRate(avg);\n    }\n  }\n\n  private updateNodeStructure(node: Node ) {\n    var item = <Item>node.data.resource;\n\n    var output = new Output(\"resource\", item.name, this.socketController.GetSocketForId(item.id), false);\n    node.addOutput(output);\n\n    this.minecraftInventoryService.GetInventoryItemAverage(node.data.resource['id']).then(value => {\n      let control = node.controls.get('resource') as ResourceControl;\n      control.onChangeRate(value);\n    });\n\n    this.editor.trigger('nodeselected');\n  }\n}","import { HighlightSearchPipe } from './pipe/highlight-text.pipe';\nimport { ItemImageComponent } from './item-image-component/item-image.component';\nimport { IconButtonComponent } from './icon-button/icon-button.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SessionService } from './service/session.service'\nimport { AppRoutingModule } from '../app-routing.module'\n\n\n\n@NgModule({\n  declarations: [\n    IconButtonComponent,\n    ItemImageComponent,\n    HighlightSearchPipe,\n  ],\n  imports: [\n    CommonModule,\n    AppRoutingModule,\n  ],\n  providers: [ SessionService ],\n  exports: [IconButtonComponent, ItemImageComponent, HighlightSearchPipe ]\n})\nexport class GeneralModule { }\n","import { Connection } from './connection.model';\nimport { Node } from 'rete';\nimport { isTypeNode } from 'typescript';\n\nexport class TreeItem {\n  public node: Node;\n  public inputs: TreeItem[];\n  public outputs: TreeItem[];\n\n  constructor(node: Node) {\n    this.node = node;\n\n    this.inputs = [];\n    this.outputs = [];\n  }\n\n  getNodeId(): number {\n    return this.node['id'];\n  }\n\n  getNodeName(): string {\n    return this.node['name'];\n  }\n\n  getNodeData(): object {\n    return this.node['data'];\n  }\n\n  getNodeResourceId(): number {\n    return this.getNodeData()['resource'].id;\n  }\n\n  getInputTree(): Connection[] {\n    return this.getNodeData()['inputTree'];\n  }\n}\n\nexport class NodeTree {\n  public outputNodes: TreeItem[] = [];\n  public criticalPath: number[] = [];\n\n  private allConnectedNodes = [];\n\n  parseFromJson(json: object) {\n    this.outputNodes = [];\n    this.allConnectedNodes = json['nodes'];\n\n    let nodes: object[] = [];\n    // Start with finding all of the output nodes\n    for (const nodeIndex in json['nodes']) {\n      const node = json['nodes'][nodeIndex];\n\n      if (node['name'] === \"Output\") {\n        nodes.push(node);\n      }\n    }\n\n    nodes.forEach(value => {\n      this.outputNodes.push( new TreeItem(<Node>value));\n    });\n\n    // let searchStack: TreeItem[] = [];\n    // this.outputNodes.forEach( treeNode => {\n    //   searchStack.push(treeNode);\n    // });\n    \n    // while (searchStack.length > 0) {\n    //   const currentNode: TreeItem = searchStack.pop();\n\n    //   for (const inputIndex in currentNode.node.inputs) {\n    //     const input = currentNode.node.inputs[inputIndex];\n\n    //     if (input['connections'] && input['connections'].length > 0) {\n    //       let newNode = this.allConnectedNodes[input['connections'][0]['node']];\n    //       searchStack.push(this.addNode(newNode, currentNode));\n    //     }\n    //   }\n    // }\n\n    this.calculateCriticalPath();\n  }\n\n  getCriticalPath(): number[] {\n    return this.criticalPath;\n  }\n\n  getOutputs() {\n    return this.outputNodes;\n  }\n\n  getNode(id: number): TreeItem | null {\n    // Shallow copy the outputNodes to the node stack to search\n    let nodeStack = [...this.outputNodes];\n\n    while (nodeStack.length > 0) {\n      let nodeItem = nodeStack.pop();\n\n      if (nodeItem.node.id == id) {\n        return nodeItem;\n      }\n\n      nodeItem.inputs.forEach(value => {\n        nodeStack.push(value);\n      })\n    }\n\n    return null;\n  }\n\n  private calculateCriticalPath() {\n    this.criticalPath = [];\n\n    let sortedOutputNodes = this.outputNodes.sort((a, b) => {\n      // Sort the focused node to the front\n      if (a.getNodeData()['hasOutputFocus']) {\n        return -1;\n      } else {\n        return a.getNodeData()['perHour'] - b.getNodeData()['perHour'];\n      }\n    });\n\n    // Starting at the output nodes\n    sortedOutputNodes.forEach(value => {\n\n      // Check to see if the node is currently connected to a critical path\n      if (!this.isConnectedToCriticalPath(value)) {\n        this.criticalPath.push(value.node.id);\n        \n        // Search through the tree\n        let smallestConnectionStack: Connection[] = [];\n        value.getInputTree().forEach((value) => {\n          smallestConnectionStack.push(value);\n        })\n\n        while (smallestConnectionStack.length > 0) {\n          let currentSmallestConnection = smallestConnectionStack.pop();\n          if (!currentSmallestConnection) { continue; }\n          this.criticalPath.push(currentSmallestConnection.nodeId);\n\n          let smallestPerHour = Infinity;\n          let smallestConnection: Connection = null;\n          let duplicateConnections: Connection[] = [];\n\n          // Find the smallest per hour connection with duplicates\n          currentSmallestConnection.tree.forEach((inputConnection, index) => {\n            let inputConnectionPerHour = currentSmallestConnection.transitionCost[index] * inputConnection.amount * inputConnection.perHour;\n            if (smallestPerHour === Infinity) {\n              smallestPerHour = inputConnectionPerHour;\n              smallestConnection = inputConnection;\n            } else if (smallestPerHour === inputConnectionPerHour) {\n              duplicateConnections.push(inputConnection);\n            } else if (smallestPerHour > inputConnectionPerHour) {\n              smallestPerHour = inputConnectionPerHour;\n              smallestConnection = inputConnection;\n              duplicateConnections = [];\n            }\n          });\n\n          // If no connection was found this is the end of the path\n          if (smallestConnection === null) {\n            break;\n          }\n\n          // Add the found connections to the stack to seach\n          duplicateConnections.push(smallestConnection);\n          duplicateConnections.forEach(value => {\n            smallestConnectionStack.push(value);\n          });\n        }\n      }\n    });\n  }\n\n  private isConnectedToCriticalPath(node: TreeItem): boolean {\n    let nodeConnections = node.getInputTree();\n\n    if( nodeConnections) {\n      let allConnectionNodeIds: number[] = [];\n      nodeConnections.forEach(connection => {\n        let connections = connection.getAllConnectionNodeIds();\n\n        connections.forEach(value => {\n          allConnectionNodeIds.push(value);\n        })\n        \n      });\n\n      // Used to get the intersection of [criticalPath] x [allConnecitonNodeIds]\n      return this.criticalPath.filter(value => allConnectionNodeIds.includes(value)).length > 0;\n    }\n    else {\n      // If there is not connection, there will not be a critical path so skip\n      return true;\n    }\n  }\n\n  private addNode(node: any, parent: TreeItem): TreeItem {\n    let child = new TreeItem(<Node>node);\n    child.outputs.push(parent);\n\n    parent.inputs.push(child);\n\n    return child;\n  }\n}","import { Item } from './../../../general/model/item.model';\nimport { ChangeDetectorRef, Component } from '@angular/core';\nimport { NodeComponent, NodeService } from 'rete-angular-render-plugin';\n\n@Component({\n  templateUrl: './base-node.component.html',\n  styleUrls: ['./base-node.component.sass'],\n  providers: [NodeService],\n})\n  \nexport class BaseNodeComponent extends NodeComponent {\n\n  constructor(protected service: NodeService, protected cdr: ChangeDetectorRef) {\n    super(service, cdr);\n  }\n\n  setItem( item: Item ) {\n    this.node.data.resource = item;\n  }\n\n  getType() {\n    return this.node.meta.type;\n  }\n\n  onCriticalPathClass() {\n    return this.node.meta.criticalPath ? \"critical-path\" : \"\";\n  }\n\n  isCustomClass() {\n    return this.node.data.customization == null ? \"\" : \"custom\";\n  }\n\n  isCustom() {\n    return this.node.data.customization != null;\n  }\n\n  isOutputFocused() {\n    return this.node.meta.hasOutputFocus;\n  }\n}\n","<div class=\"node\" [ngClass]=\"[onCriticalPathClass(), selected(), isCustomClass(), node.name] | kebab\">\n    <div class=\"title-container pixelated minecraft-background\">\n        <div class=\"shared\">\n            \n        </div>\n        <div class=\"title text-node-title pixelated minecraft-background\">\n            {{node.data.name}}\n        </div>\n        <div class=\"star-container\">\n            <div class=\"star\" *ngIf=\"isOutputFocused()\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-star-fill\" viewBox=\"0 0 16 16\">\n                    <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/>\n                </svg>\n            </div>\n        </div>\n        <div class='title-critical-path'>\n        </div>\n    </div>\n\n    <div class=\"body-container\">\n        <div class=\"background-image\">\n            <div class=\"resource-image\" *ngIf=\"getType() == 'resource' || getType() == 'minecraft'\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-bricks\" viewBox=\"0 0 16 16\">\n                    <path fill-rule=\"evenodd\" d=\"M0 .5A.5.5 0 0 1 .5 0h15a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-.5.5H14v2h1.5a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-.5.5H14v2h1.5a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-.5.5H.5a.5.5 0 0 1-.5-.5v-3a.5.5 0 0 1 .5-.5H2v-2H.5a.5.5 0 0 1-.5-.5v-3A.5.5 0 0 1 .5 6H2V4H.5a.5.5 0 0 1-.5-.5v-3zM3 4v2h4.5V4H3zm5.5 0v2H13V4H8.5zM3 10v2h4.5v-2H3zm5.5 0v2H13v-2H8.5zM1 1v2h3.5V1H1zm4.5 0v2H15V1H5.5zM1 7v2h3.5V7H1zm4.5 0v2h5V7h-5zm6 0v2H15V7h-3.5zM1 13v2h3.5v-2H1zm4.5 0v2h5v-2h-5zm6 0v2H15v-2h-3.5z\"/>\n                </svg>\n            </div>\n\n            <div class=\"crafting-image\" *ngIf=\"getType() == 'crafter'\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-hammer\" viewBox=\"0 0 16 16\">\n                    <path d=\"M9.812 1.952a.5.5 0 0 1-.312.89c-1.671 0-2.852.596-3.616 1.185L4.857 5.073V6.21a.5.5 0 0 1-.146.354L3.425 7.853a.5.5 0 0 1-.708 0L.146 5.274a.5.5 0 0 1 0-.706l1.286-1.29a.5.5 0 0 1 .354-.146H2.84C4.505 1.228 6.216.862 7.557 1.04a5.009 5.009 0 0 1 2.077.782l.178.129z\"/>\n                    <path fill-rule=\"evenodd\" d=\"M6.012 3.5a.5.5 0 0 1 .359.165l9.146 8.646A.5.5 0 0 1 15.5 13L14 14.5a.5.5 0 0 1-.756-.056L4.598 5.297a.5.5 0 0 1 .048-.65l1-1a.5.5 0 0 1 .366-.147z\"/>\n                  </svg>\n            </div>\n\n            <div class=\"output-image\" *ngIf=\"getType() == 'output'\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-minecart\" viewBox=\"0 0 16 16\">\n                    <path fill-rule=\"evenodd\" d=\"M4 15a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm0 1a2 2 0 1 0 0-4 2 2 0 0 0 0 4zm8-1a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm0 1a2 2 0 1 0 0-4 2 2 0 0 0 0 4zM.115 3.18A.5.5 0 0 1 .5 3h15a.5.5 0 0 1 .491.592l-1.5 8A.5.5 0 0 1 14 12H2a.5.5 0 0 1-.491-.408l-1.5-8a.5.5 0 0 1 .106-.411zm.987.82l1.313 7h11.17l1.313-7H1.102z\"/>\n                </svg>\n            </div>\n\n            <div class=\"custom-image\" *ngIf=\"getType() == 'custom'\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-archive\" viewBox=\"0 0 16 16\">\n                    <path d=\"M0 2a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1v7.5a2.5 2.5 0 0 1-2.5 2.5h-9A2.5 2.5 0 0 1 1 12.5V5a1 1 0 0 1-1-1V2zm2 3v7.5A1.5 1.5 0 0 0 3.5 14h9a1.5 1.5 0 0 0 1.5-1.5V5H2zm13-3H1v2h14V2zM5 7.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5z\"/>\n                  </svg>\n            </div>\n        </div>\n\n        <div class=\"content\">\n            <div class=\"outputs\">\n                <div class=\"output\" *ngFor=\"let output of outputs\">\n                    <div class=\"socket-info\">\n                        <div class=\"output-title text-socket\">{{output.name}}</div>\n                        <div class=\"output-rate-container\" *ngIf=\"isCustom()\">\n                            <input class=\"output-rate styled-input\" type=\"text\" readonly=\"true\" value=\"{{output.data.rate | number: '1.2-2'}}\">\n                        </div>\n                    </div>\n                    <rete-socket rete-socket [io]=\"output\" [socket]=\"output.socket\"></rete-socket>\n                </div>\n            </div>\n\n            <div class=\"clear\"></div>\n            \n            <div class=\"controls\" *ngFor=\"let control of controls\" [rete-control]=\"control\"></div>\n            <div class=\"inputs\">\n                <div class=\"input\" *ngFor=\"let input of inputs\">\n                    <rete-socket rete-socket [io]=\"input\" [socket]=\"input.socket\"></rete-socket>\n                    <div class=\"input-title text-socket\" *ngIf=\"!input.showControl()\">{{input.name}}</div>\n                    <div class=\"input-control\" *ngIf=\"input.showControl()\" [rete-control]=\"input.control\"></div>\n                </div>\n            </div>\n            \n        </div>\n    </div>\n\n    <div class=\"node-footer\">\n        <div class=\"node-type\">\n            <div class=\"node-type-text text-node-type caps\">\n                {{node.meta.type}}\n            </div>\n        </div>\n\n        <div class=\"node-id\">\n            <div class=\"node-id-text text-node-id\">\n                {{node.id}}\n            </div>\n        </div>\n    </div>\n</div>","// Reference\n// https://stackoverflow.com/a/44962110\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'highlight'\n})\nexport class HighlightSearchPipe implements PipeTransform {\n\n  transform(value: any, args: any): any {\n    if (!args) {return value;}\n    var re = new RegExp(args, 'gi'); //'gi' for case insensitive and can use 'g' if you want the search to be case sensitive.\n    return value.replace(re, \"<mark class='highlight'>$&</mark>\");\n  }\n}","import { Connection } from './../../rete-modules/shared/connection.model';\nimport { OutputManagerService } from './../services/output-manager.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Node } from 'rete';\n\n@Component({\n  selector: 'app-output-container',\n  templateUrl: './output-container.component.html',\n  styleUrls: ['./output-container.component.sass']\n})\nexport class OutputContainerComponent implements OnInit {\n  public markedNodes: Node[];\n  public nodeStack: Node[];\n  \n  public hasSelectedNode: boolean = false;\n  public selectedNode: Node;\n\n  // Handle the tabs at the top\n  public isFocusSelected: boolean = true;\n  onFocusClicked() {\n    this.isFocusSelected = true;\n  }\n  onGraphClicked() {\n    this.isFocusSelected = false;\n  }\n  \n  constructor(private outputManager: OutputManagerService) {\n    this.nodeStack = [];\n\n    setInterval(() => {\n      this.markedNodes = this.outputManager.getMarkedNodes();\n    }, 500)\n  }\n\n  ngOnInit(): void {\n  }\n\n  dropdownCallback(node: Node) {\n    if( this.selectedNode ) {\n      this.nodeStack.push(this.selectedNode);\n    }\n\n    this.selectedNode = node;\n    this.hasSelectedNode = true;\n  }\n\n  popNode() {\n    if (this.nodeStack.length > 0) {\n      this.selectedNode = this.nodeStack.pop();\n    } else {\n      this.topNode();\n    }\n  }\n\n  topNode() {\n    this.selectedNode = null;\n    this.hasSelectedNode = false;\n    this.nodeStack = [];\n  }\n\n  getSelectedChildren(): Node[] {\n    let children = [];\n    if (this.selectedNode) {\n      let tree = <Connection[]>this.selectedNode.data['inputTree'];\n      if (tree) {\n        for (let id in tree) {\n          let treeValue = tree[id];\n\n          children.push(this.outputManager.getNodeById(treeValue.nodeId));\n        }\n      }\n    }\n\n\n    return children;\n  }\n}","<div class=\"output-wrapper module-margin\">\n    <div class=\"tab-bar\">\n        <button class=\"button tab-button pixelated minecraft-background\" [ngClass]=\"isFocusSelected ? 'active' : ''\" (click)=\"onFocusClicked()\">Focused</button>\n        <button class=\"button tab-button pixelated minecraft-background\" [ngClass]=\"!isFocusSelected ? 'active' : ''\" (click)=\"onGraphClicked()\">Graphs</button>\n    </div>\n    \n    <div class=\"output-data-wrapper\">\n        <div id=\"focusedNodes\" [ngClass]=\"isFocusSelected ? '' : 'hidden'\">\n            <div class=\"subtab-bar pixelated minecraft-background\" [ngClass]=\"!hasSelectedNode ? 'hidden' : ''\"  >\n                <app-icon-button class=\"back-button\" [icon]=\"'bi-arrow-left'\" \n                    [strokes]=\"['M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z']\"\n                    (onClick)=\"popNode()\">\n                </app-icon-button>\n\n                <app-icon-button class=\"up-button\" [icon]=\"'bi-arrow-up'\" \n                    [strokes]=\"['M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5z']\"\n                    (onClick)=\"topNode()\">\n                </app-icon-button>\n            </div>\n\n            <div class=\"node-area scrollable\">\n                <div *ngIf=\"!hasSelectedNode\">\n                    <div *ngFor=\"let node of markedNodes\">\n                        <app-output-item [node]=\"node\" (dropdownPressed)=\"dropdownCallback($event)\"></app-output-item>\n                    </div>\n                </div>\n            \n                <div *ngIf=\"hasSelectedNode\">\n                    <div *ngFor=\"let child of getSelectedChildren()\">\n                        <app-output-item [node]=\"child\" (dropdownPressed)=\"dropdownCallback($event)\"></app-output-item>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div id=\"graphs\" class=\"scrollable\" [ngClass]=\"isFocusSelected ? 'hidden' : ''\">\n            <app-graph-view style=\"display: block;\"></app-graph-view>\n        </div>\n    </div>\n\n</div>\n","import { ItemImageComponent } from './../../general/item-image-component/item-image.component';\nimport { Item, UNKNOWN_ITEM } from './../../general/model/item.model';\nimport { ItemService } from 'src/app/rete-modules/services/item.service';\nimport { MinecraftItem } from './../shared/item/minecraft-item.model';\nimport { Component, OnInit, ViewChildren } from '@angular/core';\nimport { MinecraftInventoryService } from '../services/minecraft-inventory.service';\n\n@Component({\n  selector: 'app-inventory-display',\n  templateUrl: './inventory-display.component.html',\n  styleUrls: ['./inventory-display.component.sass']\n})\nexport class InventoryDisplayComponent {\n  public minecraftItems: MinecraftItem[];\n\n  @ViewChildren(ItemImageComponent) minecraftItemViews: ItemImageComponent;\n\n  constructor(private minecraftInventory: MinecraftInventoryService, private itemService: ItemService) { \n    this.minecraftItems = [];\n    this.minecraftInventory.ForceGetAllInventoryItems().then(value => {\n      this.minecraftItems = value;\n      console.log(this.minecraftItems);\n    });\n  }\n\n  // Note: Minecraft items are base 0, javascript grids are base 1 for starting index\n  //  that is the reason +1 is added to everything\n  GetGridStyle(item: MinecraftItem): any {\n    // Item is in the hotbar\n    let gridLocation = {};\n    if (item.slotIndex <= 8) {\n      gridLocation['grid-row'] = 'hotbar';\n      gridLocation['grid-column'] = item.slotIndex + 1;\n      return gridLocation;\n    }\n\n    // Inventory slots start at 9 after the hot bar. Adjusting to 0-27\n    let inventorySlot = item.slotIndex - 9;\n    gridLocation['grid-row'] = Math.floor(inventorySlot / 9) + 1;\n    gridLocation['grid-column'] = (inventorySlot % 9) + 1;\n\n    return gridLocation;\n  }\n\n  Refresh() {\n    this.minecraftInventory.ForceGetAllInventoryItems().then(value => {\n      this.minecraftItems = value;\n    });\n  }\n}\n","<div class=\"inventory-wrapper\">\n    <img class=\"inventory-visual\" src=\"./assets/images/minecraft_inventory_window.png\">\n    <div class=\"inventory-offset\">\n        <div *ngFor=\"let item of minecraftItems\" [ngStyle]=\"GetGridStyle(item)\">\n            <app-inventory-item [minecraftItem]='item'></app-inventory-item>\n        </div>\n    </div>\n    <div class='refresh-button-container' (click)=\"Refresh()\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-counterclockwise\" viewBox=\"0 0 16 16\">\n            <path fill-rule=\"evenodd\" d=\"M8 3a5 5 0 1 1-4.546 2.914.5.5 0 0 0-.908-.417A6 6 0 1 0 8 2v1z\"/>\n            <path d=\"M8 4.466V.534a.25.25 0 0 0-.41-.192L5.23 2.308a.25.25 0 0 0 0 .384l2.36 1.966A.25.25 0 0 0 8 4.466z\"/>\n          </svg>\n    </div>\n</div>","import { ItemService } from 'src/app/rete-modules/services/item.service';\nimport { Socket } from \"rete\";\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SocketController {\n  private sockets: Map<number, Socket>;\n\n  constructor(private itemService: ItemService) {\n    this.sockets = new Map();\n  }\n\n  GetSocketForId(id: number): Socket {\n    if (this.sockets.has(id)) {\n      return this.sockets.get(id);\n    }\n    else {\n      this.sockets.set(id, new Socket(this.itemService.GetItemFromId(id).name));\n      return this.sockets.get(id);\n    }\n  }\n}","import { Item } from './../../general/model/item.model';\nimport { NodeBrowserItem, NodeBrowserFilter } from './node-browser-item/node-browser-item.component';\nimport { CustomNodeData } from './../shared/custom.model';\nimport { ItemService } from 'src/app/rete-modules/services/item.service';\nimport { NodeService } from 'src/app/rete-modules/services/node.service';\nimport { Component, OnInit } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-node-browser',\n  templateUrl: './node-browser.component.html',\n  styleUrls: ['./node-browser.component.sass']\n})\nexport class NodeBrowserComponent implements OnInit {\n  public nodeList: NodeBrowserItem[];\n  public customNodeList: NodeBrowserItem[];\n\n  public filter: NodeBrowserFilter = NodeBrowserFilter.ALL;\n  public searchString: string = \"\";\n\n  constructor(private itemService: ItemService, private nodeService: NodeService) {\n    this.nodeList = [];\n    this.customNodeList = [];\n\n    this.nodeService.GetAllCustomNodes().then(nodes => {\n      this.convertNodesToNodeBrowser(nodes).forEach(value => {\n        this.customNodeList.push(value);\n        // Add to the global list if they should be\n        if (this.filter == NodeBrowserFilter.CUSTOM || this.filter == NodeBrowserFilter.ALL) {\n          this.nodeList.push(value);\n        }\n      });\n    });\n    \n  }\n\n  ngOnInit(): void {\n    this.filterItems();\n  }\n\n  onAllClicked() {\n    this.filter = NodeBrowserFilter.ALL;\n    this.filterItems();\n  }\n\n  onResourcesClicked() {\n    this.filter = NodeBrowserFilter.RESOURCE;\n    this.filterItems();\n  }\n\n  onCraftableClicked() {\n    this.filter = NodeBrowserFilter.CRAFTER;\n    this.filterItems();\n  }\n\n  onOutputClicked() {\n    this.filter = NodeBrowserFilter.OUTPUT;\n    this.filterItems();\n  }\n\n  onCustomClicked() {\n    this.filter = NodeBrowserFilter.CUSTOM;\n    this.filterItems();\n  }\n\n  onSearchChange() {\n    this.searchString = this.searchString.toLowerCase();\n    this.filterItems();\n  }\n\n  private filterItems() {\n    this.nodeList = [];\n    if (this.filter == NodeBrowserFilter.ALL ) {\n      this.nodeList = this.convertItemsToNodeBrowser(this.itemService.GetAllItems());\n\n      // Add the custom nodes\n      this.customNodeList.forEach(value => {\n        this.nodeList.push(value);\n      })\n    }\n    \n    if (this.filter == NodeBrowserFilter.RESOURCE) {\n      this.nodeList = this.convertItemsToNodeBrowser(this.itemService.GetAllNonCraftableItems());\n    }\n\n    if (this.filter == NodeBrowserFilter.CRAFTER) {\n      this.nodeList = this.convertItemsToNodeBrowser(this.itemService.GetAllCraftableItems());\n    }\n\n    if ( this.filter == NodeBrowserFilter.OUTPUT) {\n      this.nodeList = this.convertItemsToNodeBrowser(this.itemService.GetAllItems());\n    }\n\n    if (this.filter == NodeBrowserFilter.CUSTOM) {\n      this.nodeList = [];\n      this.customNodeList.forEach(value => {\n        this.nodeList.push(value);\n      })\n\n      this.nodeService.ForceGetAllCustomNodes().then(nodes => {\n        this.nodeList = [];\n        this.customNodeList = [];\n        // Get the Nodes\n        this.convertNodesToNodeBrowser(nodes).forEach(value => {\n          // Add to the custom node list\n          this.customNodeList.push(value);\n          if (this.filter == NodeBrowserFilter.CUSTOM || this.filter == NodeBrowserFilter.ALL) {\n            this.nodeList.push(value);\n          }\n        })\n      });\n    }\n\n\n    this.nodeList = this.nodeList.filter(value => {\n      if (this.searchString) {\n        let index = value.name.toLowerCase().indexOf(this.searchString);\n        if (index >= 0) {\n          value.htmlName = value.name.substring(0, index)\n            + \"<mark>\"\n            + value.name.substring(index, index + this.searchString.length)\n            + \"</mark>\"\n            + value.name.substring(index + this.searchString.length, value.name.length);\n        }\n        return index >= 0;\n      } else {\n        value.htmlName = value.name;\n        return true;\n      }\n    })\n  }\n\n  private convertItemsToNodeBrowser(itemList: Item[]): NodeBrowserItem[] {\n    let nodes: NodeBrowserItem[] = [];\n\n    itemList.forEach((value) => {\n      nodes.push(new NodeBrowserItem(value.name, \"item\", value));\n    })\n\n    return nodes;\n  }\n\n  private convertNodesToNodeBrowser(nodeList: CustomNodeData[]): NodeBrowserItem[] {\n    let nodes: NodeBrowserItem[] = [];\n    if (nodeList)\n    {\n      nodeList.forEach(value => {\n        let data = {};\n        data['id'] = value.uuid;\n        data['item'] = this.itemService.GetItemFromId(value.meta.icon);\n        nodes.push(new NodeBrowserItem(value.meta.name, \"Custom\", data));\n      })\n    }\n\n    return nodes;\n  }\n}\n","<div class=\"node-browser-wrapper module-margin\">\n    <div class=\"node-browser-button-header\">\n        <button type=\"button\" class=\"button all pixelated minecraft-background\" [ngClass]=\"filter == 0 ? 'focused' : ''\" (click)=\"onAllClicked()\">\n            All\n        </button>\n        <button type=\"button\" class=\"button resource pixelated minecraft-background\" [ngClass]=\"filter == 1 ? 'focused' : ''\" (click)=\"onResourcesClicked()\">\n            Resources\n        </button>\n        <button type=\"button\" class=\"button crafting pixelated minecraft-background\" [ngClass]=\"filter == 2 ? 'focused' : ''\" (click)=\"onCraftableClicked()\">\n            Craftable\n        </button>\n        <button type=\"button\" class=\"button output pixelated minecraft-background\" [ngClass]=\"filter == 3 ? 'focused' : ''\" (click)=\"onOutputClicked()\">\n            Output\n        </button>\n        <button type=\"button\" class=\"button custom pixelated minecraft-background\" [ngClass]=\"filter == 4 ? 'focused' : ''\" (click)=\"onCustomClicked()\">\n            Custom Nodes\n        </button>\n        <div class=\"right fill search-bar-container\">\n            <input class=\"search-bar\" type=\"search\" placeholder=\"search\" [(ngModel)]=\"searchString\" (input)=\"onSearchChange()\">\n        </div>\n    </div>\n\n    <div class=\"node-browser-grid\">\n        <div *ngFor=\"let nodeItem of nodeList\">\n            <node-browser-item [nodeItem]=\"nodeItem\" [filter]=\"filter\"></node-browser-item>\n        </div>\n    </div>\n</div>\n","import { Item } from './../../../general/model/item.model';\nimport { CustomNodeMetadata, ShareLevel } from './../../shared/custom.model';\nimport { ItemService } from 'src/app/rete-modules/services/item.service';\nimport { NgbActiveModal, } from '@ng-bootstrap/ng-bootstrap';\nimport { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nlet STATIC_COLUMN_NUMBER: number = 4;\n\n@Component({\n  selector: 'custom-node-modal',\n  templateUrl: './custom-node-modal.component.html',\n  styleUrls: ['./custom-node-modal.component.sass']\n})\nexport class CustomNodeModal {\n  public rows: number[] = [];\n  public columns: number[] = [0, 1, 2, 3];\n\n  public nodeNameControl = new FormControl('');\n  public nodeImageValue = '0,0';\n  public nodeShareControl = new FormControl('Personal');\n  \n  public items: Item[] = [];\n\n  constructor(public activeModal: NgbActiveModal, private itemService: ItemService) {\n  }\n\n  setItmeIds(itemIds: number[]) {\n    if (itemIds.length % STATIC_COLUMN_NUMBER !== 0) {\n      throw RangeError(\"Item ids list must be divisible by \" + STATIC_COLUMN_NUMBER);\n    }\n    this.rows = [];\n\n    let totalRows = Math.ceil(itemIds.length / STATIC_COLUMN_NUMBER);\n\n    for (let row = 0; row < totalRows; ++row) {\n      this.rows.push(row);\n      for (let col = 0; col < STATIC_COLUMN_NUMBER; ++col) {\n        let index = row * STATIC_COLUMN_NUMBER + col;\n\n        if (index >= itemIds.length) {\n          break;\n        } else {\n          this.items.push(this.itemService.GetItemFromId(itemIds[index]));\n        }\n      }\n    }\n  }\n\n  getItem(row: number, col: number) {\n    return this.items[row * STATIC_COLUMN_NUMBER + col];\n  }\n\n  submitCustomNode() {\n    \n    let customNodeMetadata = new CustomNodeMetadata();\n    customNodeMetadata.name = this.nodeNameControl.value;\n    if (customNodeMetadata.name.length == 0) {\n      customNodeMetadata.name = \"Custom Node\"\n    }\n    \n    // Get the x,y of the selected item\n    let xy = this.nodeImageValue.split(',');\n    let x = parseInt(xy[0]);\n    let y = parseInt(xy[1]);\n    \n    console.log(xy);\n    console.log(this.items);\n    customNodeMetadata.icon = this.items[x * STATIC_COLUMN_NUMBER + y].id;\n    \n    switch (this.nodeShareControl.value) {\n      case \"Personal\": customNodeMetadata.shareLevel = ShareLevel.Personal; break;\n      case \"Group\": customNodeMetadata.shareLevel = ShareLevel.Group; break;\n      case \"Classroom\": customNodeMetadata.shareLevel = ShareLevel.Classroom; break;\n    }\n    \n    this.activeModal.close(customNodeMetadata);\n  }\n\n  nodeImageRadialClicked(event) {\n    this.nodeImageValue = (event.originalTarget || event.srcTarget || event.target).value;\n  }\n}","<div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Create Custom Node</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n</div>\n<div class=\"modal-body\">\n    <form>\n\n        <div class=\"form-group\">\n            <label for=\"nodeNameEntry\">Node Name:</label>\n            <input id=\"nodeNameEntry\" class=\"form-control form-control-lg\" placeholder=\"Custom Node\" type=\"text\" [formControl]=\"nodeNameControl\">\n\n        </div>\n\n        <div *ngFor=\"let row of rows\">\n            <div class=\"form-row\">\n\n                <div *ngFor=\"let col of columns\">\n\n                    <div class=\"form-check\">\n                        <label class=\"form-check-label\" for=\"{{'nodeImageRadio' + row + col}}\">\n                            <item-image [selectedItem]=\"getItem(row, col)\" [criticalPath]=\"false\"></item-image>\n                        </label>\n                        <input class=\"form-check-input\" type=\"radio\" name=\"nodeImageRadios\" \n                            id=\"{{'nodeImageRadio' + row + col}}\" \n                            value=\"{{row + ',' + col}}\" \n                            (click)=\"nodeImageRadialClicked($event)\" \n                            [attr.checked]=\"(row == 0 && col == 0) ? '' : null\">\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"shareLevel\">Share:</label>\n            <select class=\"form-control\" id=\"shareLevel\" [formControl]=\"nodeShareControl\">\n                <option>Personal</option>\n                <option>Group</option>\n                <option>Classroom</option>\n            </select>\n        </div>\n\n    </form>\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"submitCustomNode()\">Create</button>\n</div>","import { SessionService } from 'src/app/general/service/session.service';\nimport { environment_vars } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { MinecraftItem } from '../shared/item/minecraft-item.model';\nimport { Injectable } from '@angular/core';\nimport { MILLISECONDS_TO_HOURS, MinecraftInventoryService } from './minecraft-inventory.service';\n\nlet getMinecraftItemRoute = \"/minecraft/getInventory\"\n\nconst options = {\n  headers: {\n    Authorization: environment_vars.authentication\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpMinecraftInventoryService extends MinecraftInventoryService {\n  private localDataBaseStorage: any = {};\n\n  constructor(private httpClient: HttpClient, private sessionService: SessionService ) { \n    super();\n\n    this.localDataBaseStorage = {};\n  }\n  \n  public GetAllInventoryItems(): Promise<MinecraftItem[]> {\n    return this.UpdateLocalStorageIfNeeded(-1, false);\n  }\n\n  public ForceGetAllInventoryItems(): Promise<MinecraftItem[]> {\n    return this.UpdateLocalStorageIfNeeded(-1, true);\n  }\n\n  public GetInventoryItemAverage(id: number): Promise<number> {\n    return this.UpdateLocalStorageIfNeeded(id, false);\n  }\n\n  private GetFromLocalStorage(id: number): Promise<any> {\n    if (id === -1) {\n      return Promise.resolve(this.localDataBaseStorage.current_inventory);\n    }\n\n    if (this.localDataBaseStorage.averages && this.localDataBaseStorage.averages[id]) {\n      return Promise.resolve(this.localDataBaseStorage.averages[id] * MILLISECONDS_TO_HOURS);\n    }\n\n    // TODO: Temorary addition to provide rates to all inventory items\n    //    return Promise.resolve(0);\n    return Promise.resolve(1 + Math.round(Math.random()*25));\n  }\n  \n  private UpdateLocalStorageIfNeeded(id: number, forceUpdate: boolean): Promise<any> {\n    let body = this.sessionService.buildPostWithSession(\"\", null);\n\n    if (forceUpdate || this.localDataBaseStorage === {}) {\n      return (this.httpClient.post(environment_vars.api_root + getMinecraftItemRoute, body, options).toPromise() as Promise<any>).then(any => {\n        this.localDataBaseStorage = any;\n\n        // TODO: Temorary addition for congnitive walkthrough\n        if (!this.localDataBaseStorage.current_inventory) {\n          this.localDataBaseStorage = {};\n          this.localDataBaseStorage.current_inventory = []\n          this.localDataBaseStorage.averages = {};\n        }\n\n        if (this.sessionService.getSession() !== \"123\") {\n          this.localDataBaseStorage.current_inventory.push(\n            {\n              \"itemId\": 23,\n              \"slotCount\": 23,\n              \"slotIndex\": 6\n            }\n          );\n          this.localDataBaseStorage.averages['23'] = 0.000085\n        }\n\n        if (this.sessionService.getSession() == \"123\") {\n          this.localDataBaseStorage.averages = {};\n          this.localDataBaseStorage.averages['0'] = 0.000085;\n          this.localDataBaseStorage.averages['1'] = 0.000085\n          this.localDataBaseStorage.averages['2'] = 0.000085\n          this.localDataBaseStorage.averages['3'] = 0.000085\n          this.localDataBaseStorage.averages['7'] = 0.000085\n\n        }\n          \n        this.InventoryUpdateCallbacks();\n        return this.GetFromLocalStorage(id);\n      });\n    }\n\n    return this.GetFromLocalStorage(id);\n  }\n}","import { ItemImageComponent } from './../../general/item-image-component/item-image.component';\nimport { Item, UNKNOWN_ITEM } from './../../general/model/item.model';\nimport { ItemService } from './../../rete-modules/services/item.service';\nimport { MinecraftItem } from './../shared/item/minecraft-item.model';\nimport { Component, OnInit, ViewChildren, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-inventory-item',\n  templateUrl: './inventory-item.component.html',\n  styleUrls: ['./inventory-item.component.sass']\n})\nexport class InventoryItemComponent implements OnInit {\n  @Input() minecraftItem: MinecraftItem;\n  public item: Item;\n  public isValid: boolean = true;\n\n  @ViewChildren(ItemImageComponent) minecraftItemViews: ItemImageComponent;\n\n  constructor(private itemService: ItemService) {\n  }\n\n  ngOnInit(): void {\n    if (this.minecraftItem.itemId == UNKNOWN_ITEM.id) {\n      this.item = UNKNOWN_ITEM;\n      this.isValid = false;\n    } else {\n      this.item = this.itemService.GetItemFromId(this.minecraftItem.itemId);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.minecraftItemViews.selectedItem = this.item;\n  }\n\n  OnDrag(event: any) {\n    event.dataTransfer.setData(\"nodeType\", \"Minecraft\")\n\n    event.dataTransfer.setData(\"nodeId\", this.item.id);\n    event.dataTransfer.effectAllowed = \"copy\";\n  }\n}\n","<div class=\"minecraft-item\" [ngClass]=\"isValid ? '' : 'disabled'\" [draggable]=\"isValid\" (dragstart)=\"OnDrag($event)\">\n    <item-image [selectedItem]=\"item\"></item-image>\n    <div class=\"text-node-title inventory-count \">{{minecraftItem.slotCount}}</div>\n</div>","import { environment_vars } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { NodeService } from 'src/app/rete-modules/services/node.service';\nimport { CustomNodeData, ShareLevel } from './../shared/custom.model';\nimport { Injectable } from '@angular/core';\nimport { env } from 'process';\nimport { SessionService } from 'src/app/general/service/session.service';\nimport { isNamedTupleMember } from 'typescript';\n\nlet getCustomNodeRoute = '/minecraft/getNodes'\nlet postCustomNodeRoute = '/minecraft/postNode'\n\nconst options = {\n  headers: {\n    Authorization: environment_vars.authentication,\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpNodeService extends NodeService {\n  private localStorage: CustomNodeData[];\n  constructor(private httpClient: HttpClient, private sessionService: SessionService) {\n    super();\n\n    this.localStorage = [];\n  }\n\n  public GetAllCustomNodes(): Promise<CustomNodeData[]> {\n    return this.UpdateLocalStorageIfNeeded(\"\", false);\n  }\n\n  public ForceGetAllCustomNodes(): Promise<CustomNodeData[]> {\n    return this.UpdateLocalStorageIfNeeded(\"\", true);\n  }\n\n  public GetCustomNode(uuid: string): Promise<CustomNodeData> {\n    return this.UpdateLocalStorageIfNeeded(uuid, false) as Promise<CustomNodeData>;\n  }\n\n  public SaveCustomNode(node: CustomNodeData): Promise<string> {\n    let body = this.sessionService.buildPostWithSession(\"nodeData\", node);\n\n    return (this.httpClient.post(environment_vars.api_root + postCustomNodeRoute, body, options).toPromise() as Promise<any>).then(any => {\n      node.uuid = any['message']['uuid'];\n      this.localStorage.push(node);\n      return node.uuid;\n    })\n  }\n\n  private GetFromLocalStorage( uuid: string ): Promise<any> {\n    // If not looking for unique, return all\n    if ( uuid === \"\" ) {\n      return Promise.resolve(this.localStorage);\n    }\n\n    // Return found if have it\n    let found = this.localStorage.find(value => {\n      return value.uuid == uuid;\n    })\n    if (found) {\n      return Promise.resolve(found);\n    }\n\n    let body = this.sessionService.buildPostWithSession(\"\", null);\n    return (this.httpClient.post(environment_vars.api_root + getCustomNodeRoute, body, options).toPromise() as Promise<any>).then(any => {\n      this.localStorage = any['Items'];\n      return this.localStorage.find(value => {\n        return value.uuid = uuid;\n      });\n    });\n  }\n\n  private UpdateLocalStorageIfNeeded(uuid: string, forceUpdate: boolean): Promise<any> {\n    let body = this.sessionService.buildPostWithSession(\"\", null);\n\n    if ( forceUpdate || this.localStorage.length == 0 ) {\n      return (this.httpClient.post(environment_vars.api_root + getCustomNodeRoute, body, options).toPromise() as Promise<any>).then(any => {\n        this.localStorage = any['Items'];\n\n        return this.GetFromLocalStorage(uuid);\n      });\n    }\n\n      return this.GetFromLocalStorage(uuid);\n  }\n}\n","import { MinecraftItem } from './../shared/item/minecraft-item.model';\nimport { Injectable } from '@angular/core';\n\nexport let MILLISECONDS_TO_HOURS = 3600000\n\nclass ItemCallback {\n  thisRef: any;\n  nodeId: number;\n  callback: (nodeId: number, avg: number) => void;\n\n  constructor(thisRef: any, nodeId: number, callback: (nodeId: number, avg: number) => void) {\n    this.thisRef = thisRef;\n    this.nodeId = nodeId;\n    this.callback = callback;\n  }\n}\n\ntype InvetoryCallbacks = { [ itemId: number ]: ItemCallback[] }\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class MinecraftInventoryService {\n  private inventoryCallbacks: InvetoryCallbacks;\n\n  constructor() { \n    this.inventoryCallbacks = {};\n  }\n\n  public abstract GetAllInventoryItems(): Promise<MinecraftItem[]>;\n  public abstract ForceGetAllInventoryItems(): Promise<MinecraftItem[]>;\n  public abstract GetInventoryItemAverage(id: number): Promise<number>;\n\n  public InventoryUpdateCallbacks() {\n    for (let itemIdLabel in this.inventoryCallbacks) {\n      let itemId = parseInt(itemIdLabel);\n      this.GetInventoryItemAverage(itemId).then(average => {\n        this.inventoryCallbacks[itemIdLabel].forEach(callback => {\n          // Call the callback passing this ref to be used\n          callback.callback.call(callback.thisRef, callback.nodeId, average);\n        });\n      });\n    }\n  }\n\n  public AssignInventoryUpdateCallback(thisRef: any, nodeId: number, itemId: number, callback: (nodeId: number, avg: number) => void) {\n    let item: ItemCallback = { thisRef, nodeId, callback };\n\n    // Add callback to item id list\n    if (this.inventoryCallbacks[itemId]) {\n      this.inventoryCallbacks[itemId].push(item)\n    } else {\n      this.inventoryCallbacks[itemId] = [item];\n    }\n  }\n}\n","import { AppComponent } from './app.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router'; // CLI imports router\n\nconst routes: Routes = [\n  { path: '', component: AppComponent}\n]; // sets up routes constant where you define your routes\n\n// configures NgModule imports and exports\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Color } from './../../general/model/color.model';\nimport { Item } from  '../../general/model/item.model';\nimport { Injectable } from '@angular/core';\n\nimport * as jsonFileData from '../../../assets/resources/items.json';\n\nlet loadedData = jsonFileData['default'];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemService {\n  private localDatabase = {};\n  constructor() {\n    this.localDatabase = loadedData;\n    this.localDatabase['items'].forEach(item => {\n      if (item.primaryColor) {\n        item.primaryColor = Color.FromHex(item.primaryColor)\n      } else {\n        item.primaryColor = new Color(1, 1, 1);\n      }\n      if (item.secondaryColor) {\n        item.secondaryColor = Color.FromHex(item.secondaryColor)\n      } else {\n        item.secondaryColor = new Color(1, 1, 1);\n      }\n    });\n  }\n  \n  public GetAllItems(): Item[] {\n    return this.localDatabase['items'];\n  }\n\n  public GetItemFromId(id: number): Item {\n    return this.localDatabase['items'].find((item) => {\n      return item.id == id;\n    })\n  }\n  public GetAllCraftableItems(): Item[] {\n    return this.localDatabase['items'].filter((item) => {\n      return item.craftable;\n    })\n\n  }\n  public GetAllNonCraftableItems(): Item[] {\n    return this.localDatabase['items'].filter((item) => {\n      return !item.craftable;\n    })\n  }\n\n  public GetItemPrimaryColor(id: number): Color {\n    return this.GetItemFromId(id).primaryColor;\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}